export declare class HSLColor {
    private static HSL_REGEX;
    private static HEX_REGEX;
    private hue;
    private saturation;
    private lightness;
    private alpha;
    constructor(hue: number, saturation: number, lightness: number, alpha?: number);
    static of(hue: number | string | HSLColor, saturation?: number, lightness?: number, alpha?: number): HSLColor;
    private static fromHex;
    private static fromHsl;
    static lighten(color: HSLColor | string, amount: number): HSLColor;
    static darken(color: HSLColor | string, amount: number): HSLColor;
    static saturate(color: HSLColor | string, amount: number): HSLColor;
    static desaturate(color: HSLColor | string, amount: number): HSLColor;
    static hsla(color: HSLColor | string, amount: number): HSLColor;
    getHue(): number;
    getSaturation(): number;
    getLightness(): number;
    lighten(amount: number): this;
    darken(amount: number): this;
    saturate(amount: number): this;
    desaturate(amount: number): this;
    setAlpha(amount: number): this;
    toString(): string;
    valueOf(): string;
    get hsl(): string;
    private clone;
    toRGB(): any[];
    getLuminance(hsl?: string | HSLColor): number;
    contrast(dark?: string | HSLColor, light?: string | HSLColor, threshold?: number): string | HSLColor;
}
