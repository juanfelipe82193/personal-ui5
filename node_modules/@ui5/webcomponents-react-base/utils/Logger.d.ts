export declare enum LOG_LEVEL {
    FATAL = 0,
    ERROR = 1,
    WARNING = 2,
    INFO = 3,
    DEBUG = 4,
    TRACE = 5
}
declare class DeviceLogger {
    defaultComponent: string;
    sWindowName: string;
    constructor(defaultComponent?: string);
    for(defaultComponent: string): DeviceLogger;
    log(iLevel: LOG_LEVEL, sMessage: string, sComponent?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    fatal(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    error(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    warning(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    info(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    debug(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
    trace(msg: string, component?: string): {
        time: string;
        date: string;
        timestamp: number;
        level: LOG_LEVEL;
        message: string;
        component: string;
    };
}
export declare const Logger: DeviceLogger;
export {};
