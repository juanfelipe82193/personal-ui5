{"version":3,"file":"useViewportRange.js","sources":["../src/hooks/useViewportRange.ts"],"sourcesContent":["import { Device } from '@ui5/webcomponents-react-base/lib/Device';\nimport { useEffect, useState, useRef } from 'react';\n\nexport const useViewportRange = (rangeSet) => {\n  const [currentRange, setCurrentRange] = useState(Device.media.getCurrentRange(rangeSet, window.innerWidth).name);\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    const handler = ({ name: range }) => {\n      if (isMounted.current === true) {\n        setCurrentRange(range);\n      }\n    };\n    Device.media.attachHandler(handler, null, 'StdExt');\n    return () => {\n      isMounted.current = false;\n      Device.resize.detachHandler(handler, null);\n    };\n  }, [setCurrentRange, isMounted]);\n\n  return currentRange;\n};\n"],"names":["useViewportRange","rangeSet","useState","Device","media","getCurrentRange","window","innerWidth","name","currentRange","setCurrentRange","isMounted","useRef","useEffect","handler","range","current","attachHandler","resize","detachHandler"],"mappings":";;;;IAGaA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,QAAD,EAAc;AAAA,kBACJC,QAAQ,CAACC,MAAM,CAACC,KAAP,CAAaC,eAAb,CAA6BJ,QAA7B,EAAuCK,MAAM,CAACC,UAA9C,EAA0DC,IAA3D,CADJ;AAAA;AAAA,MACrCC,YADqC;AAAA,MACvBC,eADuB;;AAE5C,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,OAAO,GAAG,SAAVA,OAAU,OAAqB;AAAA,UAAZC,KAAY,QAAlBP,IAAkB;;AACnC,UAAIG,SAAS,CAACK,OAAV,KAAsB,IAA1B,EAAgC;AAC9BN,QAAAA,eAAe,CAACK,KAAD,CAAf;AACD;AACF,KAJD;;AAKAZ,IAAAA,MAAM,CAACC,KAAP,CAAaa,aAAb,CAA2BH,OAA3B,EAAoC,IAApC,EAA0C,QAA1C;AACA,WAAO,YAAM;AACXH,MAAAA,SAAS,CAACK,OAAV,GAAoB,KAApB;AACAb,MAAAA,MAAM,CAACe,MAAP,CAAcC,aAAd,CAA4BL,OAA5B,EAAqC,IAArC;AACD,KAHD;AAID,GAXQ,EAWN,CAACJ,eAAD,EAAkBC,SAAlB,CAXM,CAAT;AAaA,SAAOF,YAAP;AACD;;;;"}