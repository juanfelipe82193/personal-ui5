{"version":3,"file":"HSLColor.js","sources":["../src/styling/HSLColor.ts"],"sourcesContent":["import { deprecationNotice } from '@ui5/webcomponents-react-base/lib/Utils';\n\nexport class HSLColor {\n  private static HSL_REGEX = /(\\d{0,3}\\.?\\d*?), ?(\\d{0,3}\\.?\\d*?)%?, ?(\\d{0,3}\\.?\\d*?)%?/;\n  private static HEX_REGEX = /^#([a-f\\d]{1,2})([a-f\\d]{1,2})([a-f\\d]{1,2})$/i;\n\n  private hue: number;\n  private saturation: number;\n  private lightness: number;\n  private alpha = 1;\n\n  constructor(hue: number, saturation: number, lightness: number, alpha = 1) {\n    this.hue = hue;\n    this.saturation = saturation;\n    this.lightness = lightness;\n    this.alpha = alpha;\n\n    deprecationNotice(\n      'HSLColor',\n      \"'@ui5/webcomponents-react-base/lib/HSLColor' is deprecated and will be removed in the next major release.\"\n    );\n  }\n\n  static of(hue: number | string | HSLColor, saturation?: number, lightness?: number, alpha?: number): HSLColor {\n    if (typeof hue === 'string' && HSLColor.HSL_REGEX.test(hue)) {\n      return HSLColor.fromHsl(hue);\n    }\n    if (typeof hue === 'string' && HSLColor.HEX_REGEX.test(hue)) {\n      return HSLColor.fromHex(hue);\n    }\n    if (hue instanceof HSLColor) {\n      return hue;\n    }\n    return new HSLColor(hue as number, saturation, lightness, alpha);\n  }\n\n  private static fromHex(hex: string) {\n    const result = HSLColor.HEX_REGEX.exec(hex);\n\n    let r = parseInt(''.padEnd(2, result[1]), 16);\n    let g = parseInt(''.padEnd(2, result[2]), 16);\n    let b = parseInt(''.padEnd(2, result[3]), 16);\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let hue;\n    let saturation;\n    let lightness = (max + min) / 2;\n\n    if (max === min) {\n      hue = saturation = 0; // achromatic\n    } else {\n      const d = max - min;\n      saturation = lightness > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          hue = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          hue = (b - r) / d + 2;\n          break;\n        case b:\n          hue = (r - g) / d + 4;\n          break;\n      }\n      hue /= 6;\n    }\n\n    saturation = Math.round(saturation * 1000);\n    saturation = saturation / 10;\n    lightness = Math.round(lightness * 1000);\n    lightness = lightness / 10;\n    hue = Math.round(360 * hue * 10) / 10;\n\n    return new HSLColor(hue, saturation, lightness);\n  }\n\n  private static fromHsl(hsl: string): HSLColor {\n    const [fullMatch, hue, saturation, lightness] = HSLColor.HSL_REGEX.exec(hsl);\n    return new HSLColor(parseFloat(hue), parseFloat(saturation), parseFloat(lightness));\n  }\n\n  static lighten(color: HSLColor | string, amount: number) {\n    return HSLColor.of(color).clone().lighten(amount);\n  }\n\n  static darken(color: HSLColor | string, amount: number) {\n    return HSLColor.of(color).clone().darken(amount);\n  }\n\n  static saturate(color: HSLColor | string, amount: number) {\n    return HSLColor.of(color).clone().saturate(amount);\n  }\n\n  static desaturate(color: HSLColor | string, amount: number) {\n    return HSLColor.of(color).clone().desaturate(amount);\n  }\n\n  static hsla(color: HSLColor | string, amount: number) {\n    return HSLColor.of(color).clone().setAlpha(amount);\n  }\n\n  getHue() {\n    return this.hue;\n  }\n\n  getSaturation() {\n    return this.saturation;\n  }\n\n  getLightness() {\n    return this.lightness;\n  }\n\n  lighten(amount: number) {\n    this.lightness += amount;\n    return this;\n  }\n\n  darken(amount: number) {\n    this.lightness -= amount;\n    return this;\n  }\n\n  saturate(amount: number) {\n    this.saturation += amount;\n    return this;\n  }\n\n  desaturate(amount: number) {\n    this.saturation -= amount;\n    return this;\n  }\n\n  setAlpha(amount: number) {\n    this.alpha = amount;\n    return this;\n  }\n\n  toString() {\n    if (this.alpha !== 1) {\n      return `hsla(${this.hue}, ${this.saturation}%, ${this.lightness}%, ${this.alpha})`;\n    }\n    return `hsl(${this.hue}, ${this.saturation}%, ${this.lightness}%)`;\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  get hsl() {\n    return this.toString();\n  }\n\n  private clone() {\n    return new HSLColor(this.hue, this.saturation, this.lightness);\n  }\n\n  /**\n   * Copied from https://github.com/Qix-/color-convert/blob/master/conversions.js\n   */\n  toRGB() {\n    const h = this.hue / 360;\n    const s = this.saturation / 100;\n    const l = this.lightness / 100;\n    let t2;\n    let t3;\n    let val;\n\n    if (s === 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) {\n      t2 = l * (1 + s);\n    } else {\n      t2 = l + s - l * s;\n    }\n\n    const t1 = 2 * l - t2;\n\n    const rgb = [0, 0, 0];\n    for (let i = 0; i < 3; i++) {\n      t3 = h + (1 / 3) * -(i - 1);\n      if (t3 < 0) {\n        t3++;\n      }\n      if (t3 > 1) {\n        t3--;\n      }\n\n      if (6 * t3 < 1) {\n        val = t1 + (t2 - t1) * 6 * t3;\n      } else if (2 * t3 < 1) {\n        val = t2;\n      } else if (3 * t3 < 2) {\n        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n      } else {\n        val = t1;\n      }\n\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  /**\n   * Copied from https://github.com/styled-components/polished/blob/master/src/color/getLuminance.js\n   */\n  getLuminance(hsl?: string | HSLColor) {\n    const color = hsl ? HSLColor.of(hsl) : this;\n    const [r, g, b] = color.toRGB().map((value) => {\n      const channel = value / 255;\n      return channel <= 0.03928 ? channel / 12.92 : ((channel + 0.055) / 1.055) ** 2.4;\n    });\n    return parseFloat((0.2126 * r + 0.7152 * g + 0.0722 * b).toFixed(3));\n  }\n\n  contrast(\n    dark: string | HSLColor = 'hsl(0, 0%, 0%)',\n    light: string | HSLColor = 'hsl(0, 0%, 100%)',\n    threshold = 0.43\n  ) {\n    // Figure out which is actually light and dark:\n    if (this.getLuminance(dark) > this.getLuminance(light)) {\n      const t = light;\n      light = dark;\n      dark = t;\n    }\n\n    if (this.getLuminance() < threshold) {\n      return light;\n    } else {\n      return dark;\n    }\n  }\n}\n"],"names":["HSLColor","hue","saturation","lightness","alpha","deprecationNotice","amount","toString","h","s","l","t2","t3","val","t1","rgb","i","hsl","color","of","toRGB","map","value","channel","r","g","b","parseFloat","toFixed","dark","light","threshold","getLuminance","t","HSL_REGEX","test","fromHsl","HEX_REGEX","fromHex","hex","result","exec","parseInt","padEnd","max","Math","min","d","round","fullMatch","clone","lighten","darken","saturate","desaturate","setAlpha"],"mappings":"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"}