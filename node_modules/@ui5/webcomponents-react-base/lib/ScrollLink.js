import { ScrollContext } from '@ui5/webcomponents-react-base/lib/ScrollContext';
import React, { useContext, useCallback, useEffect } from 'react';

var ScrollLink = function ScrollLink(props) {
  var children = props.children,
      _props$inactiveClass = props.inactiveClass,
      inactiveClass = _props$inactiveClass === void 0 ? '' : _props$inactiveClass,
      _props$activeClass = props.activeClass,
      activeClass = _props$activeClass === void 0 ? '' : _props$activeClass,
      id = props.id,
      onSetActive = props.onSetActive,
      _props$alwaysToTop = props.alwaysToTop,
      alwaysToTop = _props$alwaysToTop === void 0 ? false : _props$alwaysToTop,
      _props$scrollOffset = props.scrollOffset,
      scrollOffset = _props$scrollOffset === void 0 ? 0 : _props$scrollOffset;

  var _useContext = useContext(ScrollContext),
      selectedElementId = _useContext.selectedElementId,
      scrollToElementById = _useContext.scrollToElementById,
      scrollToTop = _useContext.scrollToTop;

  var onClick = useCallback(function () {
    if (alwaysToTop) {
      scrollToTop();
    } else {
      scrollToElementById(id, scrollOffset);
    }
  }, [scrollToElementById, id]);
  useEffect(function () {
    if (selectedElementId === id && typeof onSetActive === 'function') {
      onSetActive(id);
    }
  }, [selectedElementId]);
  var classString;

  if (id === selectedElementId) {
    classString = activeClass;
  } else {
    classString = inactiveClass;
  }

  return /*#__PURE__*/React.createElement("div", {
    style: {
      cursor: 'pointer'
    },
    className: classString,
    onClick: onClick
  }, children);
};

export { ScrollLink };
//# sourceMappingURL=ScrollLink.js.map
