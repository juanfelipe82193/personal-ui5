
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div	class="ui5-input-root"	@focusin="${context._onfocusin}"	@focusout="${context._onfocusout}"><div class="ui5-input-content"><input id="${ifDefined(context._id)}-inner"			class="ui5-input-inner"			type="${ifDefined(context.inputType)}"			inner-input			?disabled="${context.disabled}"			?readonly="${context._readonly}"			?required="${context.required}"			.value="${ifDefined(context.value)}"			placeholder="${ifDefined(context.placeholder)}"			maxlength="${ifDefined(context.maxlength)}"			role="${ifDefined(context.accInfo.input.role)}"			aria-owns="${ifDefined(context.accInfo.input.ariaOwns)}"			?aria-invalid="${context.accInfo.input.ariaInvalid}"			aria-haspopup="${ifDefined(context.accInfo.input.ariaHasPopup)}"			aria-describedby="${ifDefined(context.accInfo.input.ariaDescribedBy)}"			aria-autocomplete="${ifDefined(context.accInfo.input.ariaAutoComplete)}"			aria-expanded="${ifDefined(context.accInfo.input.ariaExpanded)}"			@input="${context._handleInput}"			@change="${context._handleChange}"			@keydown="${context._onkeydown}"			@keyup="${context._onkeyup}"			@click=${context._click}			data-sap-no-tab-ref			data-sap-focus-ref		/>		${ context.icon.length ? block1(context) : undefined }${ context.showSuggestions ? block2(context) : undefined }${ context.accInfo.input.ariaDescription ? block3(context) : undefined }${ context.hasValueState ? block4(context) : undefined }</div><slot name="formSupport"></slot></div>`; };
const block1 = (context) => { return html`<div class="ui5-input-icon-root"><slot name="icon"></slot></div>		`; };
const block2 = (context) => { return html`<span id="${ifDefined(context._id)}-suggestionsText" class="ui5-hidden-text">${ifDefined(context.suggestionsText)}</span>		`; };
const block3 = (context) => { return html`<span id="${ifDefined(context._id)}-descr" class="ui5-hidden-text">${ifDefined(context.accInfo.input.ariaDescription)}</span>		`; };
const block4 = (context) => { return html`<span id="${ifDefined(context._id)}-valueStateDesc" class="ui5-hidden-text">${ifDefined(context.valueStateText)}</span>		`; };

export default block0;