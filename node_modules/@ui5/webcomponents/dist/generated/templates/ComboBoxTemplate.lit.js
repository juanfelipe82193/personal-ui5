
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div class="ui5-combobox-root">	${ context.hasValueState ? block1(context) : undefined }<input id="ui5-combobox-input"		.value="${ifDefined(context._tempValue)}"		inner-input		placeholder="${ifDefined(context.placeholder)}"		?disabled=${context.disabled}		?readonly=${context.readonly}		?required=${context.required}		value-state="${ifDefined(context.valueState)}"		@input="${context._input}"		@change="${context._inputChange}"		@click=${context._click}		@keydown="${context._keydown}"		@focusin="${context._focusin}"		@focusout="${context._focusout}"		aria-expanded="${ifDefined(context.open)}"		role="combobox"		aria-haspopup="listbox"		aria-autocomplete="both"		aria-describedby="${ifDefined(context._id)}-valueStateDesc"	/>	${ !context.readonly ? block2(context) : undefined }</div>`; };
const block1 = (context) => { return html`<span id="${ifDefined(context._id)}-valueStateDesc" class="ui5-hidden-text">${ifDefined(context.valueStateText)}</span>	`; };
const block2 = (context) => { return html`<ui5-icon			name="slim-arrow-down"			slot="icon"			tabindex="-1"			input-icon			?pressed="${context._iconPressed}"			@click="${context._arrowClick}"			dir="${ifDefined(context.dir)}"			accessibleName="${ifDefined(context._iconAccessibleNameText)}"		></ui5-icon>	`; };

export default block0;