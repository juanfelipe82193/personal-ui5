
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<div	class="ui5-textarea-root"	style="${styleMap(context.styles.main)}"	?aria-invalid="${context.ariaInvalid}"	@focusin="${context._onfocusin}"	@focusout="${context._onfocusout}">	${ context.growing ? block1(context) : undefined }<textarea		id="${ifDefined(context._id)}-inner"		class="ui5-textarea-inner"		placeholder="${ifDefined(context.placeholder)}"		?disabled="${context.disabled}"		?readonly="${context.readonly}"		?required="${context.required}"		maxlength="${ifDefined(context._exceededTextProps.calcedMaxLength)}"		aria-labelledby=${ifDefined(context.ariaLabelledBy)}		.value="${ifDefined(context.value)}"		@input="${context._oninput}"		@change="${context._onchange}"		@keyup="${context._onkeyup}"		@keydown="${context._onkeydown}"		data-sap-focus-ref		part="textarea"></textarea>	${ context.showExceededText ? block4(context) : undefined }<slot name="formSupport"></slot></div>`; };
const block1 = (context) => { return html`<div id="${ifDefined(context._id)}-mirror" style="${styleMap(context.styles.mirror)}" class="ui5-textarea-mirror" aria-hidden="true">			${ repeat(context._mirrorText, (item, index) => item._id || index, (item, index) => block2(item, index, context)) }</div>	`; };
const block2 = (item, index, context) => { return html`${ifDefined(item.text)}${ !item.last ? block3(item, index, context) : undefined }`; };
const block3 = (item, index, context) => { return html`<br/>				`; };
const block4 = (context) => { return html`<span id="${ifDefined(context._id)}-exceededText" class="ui5-textarea-exceeded-text">${ifDefined(context._exceededTextProps.exceededText)}</span>	`; };

export default block0;