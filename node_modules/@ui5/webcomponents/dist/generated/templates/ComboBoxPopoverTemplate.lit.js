
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover	no-arrow	content-only-on-desktop	_disable-initial-focus	placement-type="Bottom"	horizontal-align="Left"	@ui5-afterOpen=${ifDefined(context._afterOpenPopover)}	@ui5-afterClose=${ifDefined(context._afterClosePopover)}><ui5-busyindicator		?active=${context.loading}		size="Medium"		class="ui5-combobox-busy"	></ui5-busyindicator><div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button				icon="decline"				design="Transparent"				@click="${context._closeRespPopover}"			></ui5-button></div><div class="row"><div				slot="header"				class="input-root-phone"				value-state="${ifDefined(context.valueState)}"			><input					class="ui5-input-inner-phone"					.value="${ifDefined(context._tempValue)}"					inner-input					placeholder="${ifDefined(context.placeholder)}"					value-state="${ifDefined(context.valueState)}"					@input="${context._input}"					@change="${context._inputChange}"					@keydown="${context._keydown}"					aria-autocomplete="both"				/></div></div></div><ui5-list		separators="None"		@ui5-itemClick=${ifDefined(context._selectItem)}		mode="SingleSelect"	>		${ repeat(context._filteredItems, (item, index) => item._id || index, (item, index) => block1(item, index, context)) }</ui5-list><div slot="footer" class="ui5-responsive-popover-footer"><ui5-button			design="Transparent"			@click="${context._closeRespPopover}"		>OK</ui5-button></div></ui5-responsive-popover>`; };
const block1 = (item, index, context) => { return html`<ui5-li				type="Active"				.mappedItem=${ifDefined(item)}				?selected=${item.selected}			>				${ifDefined(item.text)}</ui5-li>		`; };

export default block0;