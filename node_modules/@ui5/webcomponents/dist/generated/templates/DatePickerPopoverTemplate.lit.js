
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`<ui5-responsive-popover	id="${ifDefined(context._id)}-responsive-popover"	allow-target-overlap="${ifDefined(context._respPopoverConfig.allowTargetOverlap)}"	stay-open-on-scroll="${ifDefined(context._respPopoverConfig.stayOpenOnScroll)}"	placement-type="Bottom"	horizontal-align="Left"	no-arrow	with-padding	no-stretch	?_hide-header=${ifDefined(context._shouldHideHeader)}	@ui5-afterClose="${ifDefined(context._respPopoverConfig.afterClose)}"	@ui5-afterOpen="${ifDefined(context._respPopoverConfig.afterOpen)}">	${ context.showHeader ? block1(context) : undefined }<ui5-calendar		id="${ifDefined(context._id)}-calendar"		primary-calendar-type="${ifDefined(context._calendar.primaryCalendarType)}"		format-pattern="${ifDefined(context._calendar.formatPattern)}"		timestamp="${ifDefined(context._calendar.timestamp)}"		.selectedDates="${ifDefined(context._calendar.selectedDates)}"		.minDate="${ifDefined(context._calendar.minDate)}"		.maxDate="${ifDefined(context._calendar.maxDate)}"		@ui5-selectedDatesChange="${ifDefined(context._calendar.onSelectedDatesChange)}"	></ui5-calendar>${ context.showFooter ? block2(context) : undefined }</ui5-responsive-popover>`; };
const block1 = (context) => { return html`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button				icon="decline"				design="Transparent"				@click="${context.closePicker}"			></ui5-button></div></div>`; };
const block2 = (context) => { return html``; };

export default block0;