
/* eslint no-unused-vars: 0 */
import ifDefined from '@ui5/webcomponents-base/dist/renderer/ifDefined.js';
import { html, svg, repeat, classMap, styleMap } from '@ui5/webcomponents-base/dist/renderer/LitRenderer.js';
const block0 = (context) => { return html`${ context.options ? block1(context) : undefined }`; };
const block1 = (context) => { return html`<ui5-responsive-popover		no-arrow		_disable-initial-focus		content-only-on-desktop		placement-type="Bottom"		horizontal-align="Left"		@ui5-afterOpen="${ifDefined(context._applyFocusAfterOpen)}"		@ui5-beforeOpen="${ifDefined(context._beforeOpen)}"		@ui5-afterClose="${ifDefined(context._afterClose)}"		@keydown="${context._onkeydown}"	><div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(context._headerTitleText)}</span><ui5-button					icon="decline"					design="Transparent"					@click="${context._toggleRespPopover}"				></ui5-button></div></div><ui5-list mode="SingleSelect" separators="None" @keydown="${context._handlePickerKeydown}" @ui5-itemPress="${ifDefined(context._selectionChange)}">			${ repeat(context._syncedOptions, (item, index) => item._id || index, (item, index) => block2(item, index, context)) }</ui5-list></ui5-responsive-popover>`; };
const block2 = (item, index, context) => { return html`<ui5-li ?selected="${item.selected}" icon="${ifDefined(item.icon)}" id="${ifDefined(item.id)}-li">					${ifDefined(item.textContent)}</ui5-li>			`; };

export default block0;