import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';
import { getTheme } from '@ui5/webcomponents-base/dist/config/Theme';
import { deprecationNotice } from '@ui5/webcomponents-react-base/lib/Utils';
import React, { forwardRef, useEffect } from 'react';
import { createUseStyles } from 'react-jss';

var sequentialColors = {
  sapUiChartAccent1: '#5899DA',
  sapUiChartAccent2: '#E8743B',
  sapUiChartAccent3: '#19A979',
  sapUiChartAccent4: '#ED4A7B',
  sapUiChartAccent5: '#945ECF',
  sapUiChartAccent6: '#13A4B4',
  sapUiChartAccent7: '#525DF4',
  sapUiChartAccent8: '#BF399E',
  sapUiChartAccent9: '#6C8893',
  sapUiChartAccent10: '#EE6868',
  sapUiChartAccent11: '#2F6497',
  sapUiChartAccent12: '#1866b4'
};
var semanticColors = {
  sapUiChartGood: '#3fa45b',
  sapUiChartBad: '#dc0d0e',
  sapUiChartHighlight: '#de890d'
};

var sapBelize = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors,
  semanticColors: semanticColors
});

var sequentialColors$1 = {
  sapUiChartAccent1: '#5899DA',
  sapUiChartAccent2: '#E8743B',
  sapUiChartAccent3: '#19A979',
  sapUiChartAccent4: '#ED4A7B',
  sapUiChartAccent5: '#945ECF',
  sapUiChartAccent6: '#13A4B4',
  sapUiChartAccent7: '#525DF4',
  sapUiChartAccent8: '#BF399E',
  sapUiChartAccent9: '#6C8893',
  sapUiChartAccent10: '#EE6868',
  sapUiChartAccent11: '#2F6497',
  sapUiChartAccent12: '#1866b4'
};
var semanticColors$1 = {
  sapUiChartGood: '#69c683',
  sapUiChartBad: '#f55556',
  sapUiChartHighlight: '#f4ac44'
};

var sapBelizePlus = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors$1,
  semanticColors: semanticColors$1
});

var sequentialColors$2 = {
  sapUiChartAccent1: '#0f828f',
  sapUiChartAccent2: '#5ac2ce',
  sapUiChartAccent3: '#03734d',
  sapUiChartAccent4: '#66c2a3',
  sapUiChartAccent5: '#3c6372',
  sapUiChartAccent6: '#adbcc3',
  sapUiChartAccent7: '#144b7f',
  sapUiChartAccent8: '#698caf',
  sapUiChartAccent9: '#d62f2f',
  sapUiChartAccent10: '#f8a6a6',
  sapUiChartAccent11: '#921473',
  sapUiChartAccent12: '#d876c0'
};
var semanticColors$2 = {
  sapUiChartGood: '#3fa45b',
  sapUiChartBad: '#dc0d0e',
  sapUiChartHighlight: '#f0ab00'
};

var sapFiori3 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors$2,
  semanticColors: semanticColors$2
});

var sequentialColors$3 = {
  sapUiChartAccent1: '#13a4b4',
  sapUiChartAccent2: '#81d1da',
  sapUiChartAccent3: '#19a979',
  sapUiChartAccent4: '#8fd1bb',
  sapUiChartAccent5: '#6c8893',
  sapUiChartAccent6: '#d1d9dc',
  sapUiChartAccent7: '#2f6497',
  sapUiChartAccent8: '#85a1bb',
  sapUiChartAccent9: '#ee6868',
  sapUiChartAccent10: '#fccaca',
  sapUiChartAccent11: '#bf399e',
  sapUiChartAccent12: '#e597d2'
};
var semanticColors$3 = {
  sapUiChartGood: '#3fa45b',
  sapUiChartBad: '#dc0d0e',
  sapUiChartHighlight: '#f0ab00'
};

var sapFiori3Dark = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors$3,
  semanticColors: semanticColors$3
});

var sequentialColors$4 = {
  sapUiChartAccent1: '#4DA2F6',
  sapUiChartAccent2: '#E8743B',
  sapUiChartAccent3: '#19A979',
  sapUiChartAccent4: '#ED4A7B',
  sapUiChartAccent5: '#945ECF',
  sapUiChartAccent6: '#13A4B4',
  sapUiChartAccent7: '#5C66F5',
  sapUiChartAccent8: '#C63FA4',
  sapUiChartAccent9: '#6C8893',
  sapUiChartAccent10: '#EE6868',
  sapUiChartAccent11: '#387BB7',
  sapUiChartAccent12: '#097be8'
};
var semanticColors$4 = {
  sapUiChartGood: '#9c9',
  sapUiChartBad: '#ff5e5e',
  sapUiChartHighlight: '#ffab1d'
};

var sapBelizeHCB = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors$4,
  semanticColors: semanticColors$4
});

var sequentialColors$5 = {
  sapUiChartAccent1: '#286AC3',
  sapUiChartAccent2: '#D74114',
  sapUiChartAccent3: '#057D47',
  sapUiChartAccent4: '#E11E48',
  sapUiChartAccent5: '#642EB2',
  sapUiChartAccent6: '#03778C',
  sapUiChartAccent7: '#232DEB',
  sapUiChartAccent8: '#9B136F',
  sapUiChartAccent9: '#395563',
  sapUiChartAccent10: '#E02E2E',
  sapUiChartAccent11: '#0D3367',
  sapUiChartAccent12: '#0e4186'
};
var semanticColors$5 = {
  sapUiChartGood: '#006362',
  sapUiChartBad: '#ab0000',
  sapUiChartHighlight: '#5c5c00'
};

var sapBelizeHCW = /*#__PURE__*/Object.freeze({
  __proto__: null,
  sequentialColors: sequentialColors$5,
  semanticColors: semanticColors$5
});

var themeMap = new Map();
themeMap.set('sap_belize', sapBelize);
themeMap.set('sap_belize_plus', sapBelizePlus);
themeMap.set('sap_fiori_3', sapFiori3);
themeMap.set('sap_fiori_3_dark', sapFiori3Dark);
themeMap.set('sap_belize_hcw', sapBelizeHCW);
themeMap.set('sap_belize_hcb', sapBelizeHCB);
var getOrLoadTheme = function getOrLoadTheme(theme) {
  if (themeMap.has(theme)) {
    return themeMap.get(theme);
  } else {
    console.warn("".concat(theme, "-theme not found. Falling back to default theme 'sap_fiori_3'."));
    return themeMap.get('sap_fiori_3');
  }
};

var resolveColors = function resolveColors(colors, theme) {
  var _getOrLoadTheme = getOrLoadTheme(theme),
      semanticColors = _getOrLoadTheme.semanticColors,
      sequentialColors = _getOrLoadTheme.sequentialColors;

  if (colors && colors.length > 0) {
    return colors.map(function (key) {
      return semanticColors[key] || sequentialColors[key] || key;
    });
  }

  return Object.values(sequentialColors);
};

var BarStyles = {
  container: {
    display: 'flex',
    flexDirection: 'column',
    overflow: 'hidden'
  },
  labelContainer: {
    display: 'flex',
    justifyContent: 'space-between'
  },
  valueContainer: {
    display: 'flex'
  },
  valueBar: {
    height: '4px'
  },
  fillUp: {
    height: '4px',
    backgroundColor: '#f1f2f3',
    flexGrow: 1
  },
  label: {
    color: 'hsl(0, 0%, 40%)',
    display: 'block',
    overflow: 'hidden',
    fontFamily: "'72', Arial, Helvetica, sans-serif",
    fontWeight: 'normal',
    whiteSpace: 'nowrap',
    textOverflow: 'ellipsis',
    fontSize: '12px',
    maxWidth: '70%'
  },
  text: {
    paddingLeft: '6px',
    display: 'inline-block',
    overflow: 'hidden',
    fontSize: '14px',
    boxSizing: 'border-box',
    fontFamily: "'72', Arial, Helvetica, sans-serif",
    fontWeight: 'normal',
    whiteSpace: 'nowrap',
    textOverflow: 'ellipsis',
    color: '#333333',
    textAlign: 'right'
  }
};
var useStyles = createUseStyles(BarStyles, {
  name: 'MicroBarChart'
});

/**
 * <code>import { MicroBarChart } from '@ui5/webcomponents-react-charts/lib/MicroBarChart';</code>
 * <br />
 * <b>This component is deprecated and will be removed with v0.10.0. Please use [this component](https://sap.github.io/ui5-webcomponents-react/?path=/docs/charts-microbarchart) instead.</b>
 */
var MicroBarChart = forwardRef(function (props, ref) {
  var className = props.className,
      dataset = props.dataset,
      colors = props.colors,
      maxWidth = props.maxWidth,
      visibleDatasetCount = props.visibleDatasetCount,
      valueFormatter = props.valueFormatter,
      labelFormatter = props.labelFormatter,
      style = props.style;
  var classes = useStyles();
  var theme = getTheme();
  var visibleDatasetArray = visibleDatasetCount ? dataset.slice(0, visibleDatasetCount) : dataset;
  var colorPalette = resolveColors(colors, theme);
  var maxValue = Math.max.apply(Math, _toConsumableArray(dataset.map(function (item) {
    return item.value;
  })));
  useEffect(function () {
    deprecationNotice('MicroBarChart', "This component is deprecated and will be removed with v0.10.0. Please use '@ui5/webcomponents-react-charts/lib/next/MicroBarChart' instead.");
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    className: "".concat(classes.container, " ").concat(className),
    style: _objectSpread({
      maxWidth: maxWidth
    }, style),
    ref: ref
  }, visibleDatasetArray.map(function (item, index) {
    return /*#__PURE__*/React.createElement("div", {
      key: item.label
    }, /*#__PURE__*/React.createElement("div", {
      className: classes.labelContainer
    }, /*#__PURE__*/React.createElement("span", {
      className: classes.label,
      title: "".concat(labelFormatter(item.label))
    }, labelFormatter(item.label)), /*#__PURE__*/React.createElement("span", {
      className: classes.text,
      style: {
        fontSize: '12px'
      },
      title: "".concat(valueFormatter(item.value))
    }, valueFormatter(item.value))), /*#__PURE__*/React.createElement("div", {
      className: classes.valueContainer
    }, /*#__PURE__*/React.createElement("div", {
      className: classes.valueBar,
      style: {
        width: "".concat(item.value / maxValue * 100, "%"),
        backgroundColor: colorPalette[index]
      }
    }), /*#__PURE__*/React.createElement("div", {
      className: classes.fillUp
    })));
  }));
});
MicroBarChart.displayName = 'MicroBarChart';
MicroBarChart.defaultProps = {
  valueFormatter: function valueFormatter(value) {
    return value;
  },
  labelFormatter: function labelFormatter(value) {
    return value;
  }
};

export { MicroBarChart };
//# sourceMappingURL=MicroBarChart.js.map
