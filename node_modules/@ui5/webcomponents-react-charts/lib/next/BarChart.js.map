{"version":3,"file":"BarChart.js","sources":["../../src/hooks/useChartMargin.ts","../../src/internal/defaults.ts","../../src/hooks/useLongestYAxisLabelBar.ts","../../src/hooks/useObserveXAxisHeights.ts","../../src/hooks/usePrepareDimensionsAndMeasures.ts","../../src/hooks/useTooltipFormatter.ts","../../src/internal/staticProps.ts","../../src/components/BarChart/BarChart.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const useChartMargin = (margin, hasZoomingTool) =>\n  useMemo(() => {\n    return {\n      right: margin?.right ?? 30,\n      top: margin?.top ?? hasZoomingTool ? 40 : 20,\n      bottom: margin?.bottom ?? 20,\n      left: margin?.left ?? 10\n    };\n  }, [margin, hasZoomingTool]);\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { getTextWidth } from '@ui5/webcomponents-react-charts/lib/Utils';\nimport { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { defaultMaxYAxisWidth } from '../internal/defaults';\n\nexport const useLongestYAxisLabelBar = (dataset: unknown[], elements): [number[], object] =>\n  useMemo(() => {\n    let axisWidths = Array(elements.length).fill(0);\n    let marginLeft = 0;\n\n    if (dataset instanceof Array && elements) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          elementConfig.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n\n      const allFormattedDataLabels = dataset.map(resolveAllMeasureLabels);\n      allFormattedDataLabels.forEach((dimensionLabels) => {\n        dimensionLabels.forEach((label, dimensionIndex) => {\n          axisWidths[dimensionIndex] = Math.max(getTextWidth(label), axisWidths[dimensionIndex]);\n        });\n      });\n\n      axisWidths = axisWidths.map((length) => Math.min(defaultMaxYAxisWidth, length));\n      marginLeft = axisWidths.reduce((acc, val) => acc + val, 0);\n    }\n\n    return [axisWidths, { marginLeft, maxWidth: `calc(100% - ${marginLeft + 8}px)` }];\n  }, [dataset, elements]);\n","import debounce from 'lodash.debounce';\nimport { RefObject, useEffect, useRef, useState } from 'react';\n\nconst defaultAxisHeight = 30;\n\nexport const useObserveXAxisHeights = (chartRef: RefObject<SVGElement>, axisCount) => {\n  const [xAxisHeights, setXAxisHeights] = useState(Array(axisCount).fill(defaultAxisHeight));\n  const mostRecentXAxisHeights = useRef<number[]>(xAxisHeights);\n\n  useEffect(() => {\n    const mutationObserver = new MutationObserver(\n      debounce(() => {\n        const defaultHeights = Array(axisCount).fill(defaultAxisHeight);\n        chartRef.current?.querySelectorAll<SVGElement>('.xAxis').forEach((xAxis, index) => {\n          const currentAxisHeight = xAxis?.getBBox()?.height;\n          if (currentAxisHeight > 30) {\n            defaultHeights[index] = currentAxisHeight;\n          }\n        });\n\n        const arraysHaveTheSameLength = mostRecentXAxisHeights.current.length === defaultHeights.length;\n        const arrayContentIsIdentical = mostRecentXAxisHeights.current.every(\n          (value, index) => defaultHeights[index] === value\n        );\n        if (!(arraysHaveTheSameLength && arrayContentIsIdentical)) {\n          mostRecentXAxisHeights.current = defaultHeights;\n          setXAxisHeights(defaultHeights);\n        }\n      }, 75)\n    );\n\n    if (chartRef.current) {\n      mutationObserver.observe(chartRef.current, {\n        characterData: false,\n        characterDataOldValue: false,\n        attributes: false,\n        childList: true,\n        subtree: true\n      });\n    }\n    return () => {\n      mutationObserver.disconnect();\n    };\n  }, [chartRef, setXAxisHeights, mostRecentXAxisHeights]);\n\n  return xAxisHeights;\n};\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && measure.formatter && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity = { fillOpacity: 0.3 };\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { BarChartPlaceholder } from '@ui5/webcomponents-react-charts/lib/BarChartPlaceholder';\nimport { ChartDataLabel } from '@ui5/webcomponents-react-charts/lib/components/ChartDataLabel';\nimport { XAxisTicks } from '@ui5/webcomponents-react-charts/lib/components/XAxisTicks';\nimport { YAxisTicks } from '@ui5/webcomponents-react-charts/lib/components/YAxisTicks';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/lib/next/ChartContainer';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/lib/useLegendItemClick';\nimport React, { FC, forwardRef, Ref, useCallback, useMemo } from 'react';\nimport {\n  Bar,\n  BarChart as BarChartLib,\n  Brush,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { useChartMargin } from '../../hooks/useChartMargin';\nimport { useLongestYAxisLabelBar } from '../../hooks/useLongestYAxisLabelBar';\nimport { useObserveXAxisHeights } from '../../hooks/useObserveXAxisHeights';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { RechartBaseProps } from '../../interfaces/RechartBaseProps';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tickLineConfig, tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\nconst dimensionDefaults = {\n  formatter: defaultFormatter\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 1\n};\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Bar Width\n   * @default auto\n   */\n  width?: number;\n  /**\n   * Bar Opacity\n   * @default 1\n   */\n  opacity?: number;\n  /**\n   * Bar Stack ID\n   * @default undefined\n   */\n  stackId?: string;\n}\n\ninterface DimensionConfig extends IChartDimension {\n  /**\n   * Interval of dimension axis labels\n   * @default 0\n   */\n  interval?: number;\n}\n\nexport interface BarChartProps extends RechartBaseProps {\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one bar in the chart.\n   *\n   * <h4>Required properties</h4>\n   * - `accessor`: string containing the path to the dataset key this bar should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * <h4>Optional properties</h4>\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this bar.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `width`: bar width, defaults to `auto`\n   * - `opacity`: bar opacity, defaults to `1`\n   * - `stackId`: bars with the same stackId will be stacked\n   *\n   */\n  measures: MeasureConfig[];\n}\n\n/**\n * <code>import { BarChart } from '@ui5/webcomponents-react-charts/lib/next/BarChart';</code>\n */\nconst BarChart: FC<BarChartProps> = forwardRef((props: BarChartProps, ref: Ref<any>) => {\n  const {\n    loading,\n    dataset,\n    noLegend = false,\n    noAnimation = false,\n    onDataPointClick,\n    onLegendClick,\n    style,\n    className,\n    tooltip,\n    slot\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      margin: {},\n      yAxisVisible: true,\n      xAxisVisible: true,\n      gridStroke: ThemingParameters.sapList_BorderColor,\n      gridHorizontal: true,\n      gridVertical: false,\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'left',\n      barGap: 3,\n      zoomingTool: false,\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n\n  const primaryDimension = dimensions[0];\n  const primaryMeasure = measures[0];\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, i, event) => {\n      if (payload && onDataPointClick) {\n        const value = payload.value.length ? payload.value[1] - payload.value[0] : payload.value;\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            dataKey: Object.keys(payload)\n              .filter((key) => key !== 'value')\n              .find((key) => payload[key] === value),\n            value,\n            payload: payload.payload,\n            dataIndex: i\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  const isBigDataSet = dataset?.length > 30;\n  const primaryDimensionAccessor = primaryDimension?.accessor;\n\n  const [width, legendPosition] = useLongestYAxisLabelBar(dataset, dimensions);\n  const marginChart = useChartMargin(chartConfig.margin, chartConfig.zoomingTool);\n  const [xAxisHeight] = useObserveXAxisHeights(chartRef, 1);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      loading={loading}\n      Placeholder={BarChartPlaceholder}\n      ref={chartRef}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n    >\n      <BarChartLib\n        margin={marginChart}\n        layout=\"vertical\"\n        data={dataset}\n        barGap={chartConfig.barGap}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <CartesianGrid\n          vertical={chartConfig.gridVertical}\n          horizontal={chartConfig.gridHorizontal}\n          stroke={chartConfig.gridStroke}\n        />\n        {chartConfig.xAxisVisible && (\n          <XAxis\n            interval={0}\n            type=\"number\"\n            tick={<XAxisTicks config={primaryMeasure} />}\n            axisLine={chartConfig.xAxisVisible}\n            tickLine={tickLineConfig}\n            tickFormatter={primaryMeasure?.formatter}\n            height={xAxisHeight}\n          />\n        )}\n        {chartConfig.yAxisVisible &&\n          dimensions.map((dimension, index) => {\n            return (\n              <YAxis\n                interval={dimension?.interval ?? (isBigDataSet ? 'preserveStart' : 0)}\n                type=\"category\"\n                key={dimension.accessor}\n                dataKey={dimension.accessor}\n                xAxisId={index}\n                tick={<YAxisTicks config={dimension} />}\n                tickLine={index < 1}\n                axisLine={index < 1}\n                yAxisId={index}\n                width={width[index]}\n                allowDuplicatedCategory={index === 0}\n              />\n            );\n          })}\n        {measures.map((element, index) => {\n          return (\n            <Bar\n              stackId={element.stackId}\n              fillOpacity={element.opacity}\n              key={element.accessor}\n              name={element.label ?? element.accessor}\n              strokeOpacity={element.opacity}\n              label={<ChartDataLabel config={element} chartType=\"bar\" position=\"insideRight\" />}\n              type=\"monotone\"\n              dataKey={element.accessor}\n              fill={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              stroke={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              barSize={element.width}\n              onClick={onDataPointClickInternal}\n              isAnimationActive={noAnimation === false}\n            />\n          );\n        })}\n        {!noLegend && (\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n            wrapperStyle={legendPosition}\n          />\n        )}\n        {chartConfig.referenceLine && (\n          <ReferenceLine\n            stroke={chartConfig.referenceLine.color}\n            x={chartConfig.referenceLine.value}\n            label={chartConfig.referenceLine.label}\n          />\n        )}\n        <Tooltip cursor={tooltipFillOpacity} formatter={tooltipValueFormatter} contentStyle={tooltipContentStyle} />\n        {chartConfig.zoomingTool && (\n          <Brush\n            y={10}\n            dataKey={primaryDimensionAccessor}\n            stroke={ThemingParameters.sapObjectHeader_BorderColor}\n            travellerWidth={10}\n            height={20}\n          />\n        )}\n      </BarChartLib>\n    </ChartContainer>\n  );\n});\n\nBarChart.displayName = 'BarChart';\n\nexport { BarChart };\n"],"names":["useChartMargin","margin","hasZoomingTool","useMemo","right","top","bottom","left","defaultFormatter","d","defaultMaxYAxisWidth","useLongestYAxisLabelBar","dataset","elements","axisWidths","Array","length","fill","marginLeft","resolveAllMeasureLabels","item","map","elementConfig","formatter","getValueByDataKey","accessor","allFormattedDataLabels","forEach","dimensionLabels","label","dimensionIndex","Math","max","getTextWidth","min","reduce","acc","val","maxWidth","defaultAxisHeight","useObserveXAxisHeights","chartRef","axisCount","useState","xAxisHeights","setXAxisHeights","mostRecentXAxisHeights","useRef","useEffect","mutationObserver","MutationObserver","debounce","defaultHeights","current","querySelectorAll","xAxis","index","currentAxisHeight","getBBox","height","arraysHaveTheSameLength","arrayContentIsIdentical","every","value","observe","characterData","characterDataOldValue","attributes","childList","subtree","disconnect","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","measures","useTooltipFormatter","useCallback","name","props","measure","find","dataKey","tickLineConfig","stroke","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","opacity","BarChart","forwardRef","ref","loading","noLegend","noAnimation","onDataPointClick","onLegendClick","style","className","tooltip","slot","chartConfig","yAxisVisible","xAxisVisible","gridStroke","sapList_BorderColor","gridHorizontal","gridVertical","legendPosition","legendHorizontalAlign","barGap","zoomingTool","resizeDebounce","tooltipValueFormatter","primaryDimension","primaryMeasure","useConsolidatedRef","onItemLegendClick","useLegendItemClick","onDataPointClickInternal","payload","i","event","enrichEventWithDetails","Object","keys","filter","key","dataIndex","isBigDataSet","primaryDimensionAccessor","width","marginChart","xAxisHeight","BarChartPlaceholder","BarChartLib","undefined","dimension","interval","element","stackId","color","referenceLine","sapObjectHeader_BorderColor","displayName"],"mappings":"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"}