{"version":3,"file":"ColumnChart.js","sources":["../../src/hooks/useChartMargin.ts","../../src/internal/defaults.ts","../../src/hooks/useLongestYAxisLabel.ts","../../src/hooks/useObserveXAxisHeights.ts","../../src/hooks/usePrepareDimensionsAndMeasures.ts","../../src/hooks/useTooltipFormatter.ts","../../src/internal/staticProps.ts","../../src/components/ColumnChart/ColumnChart.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const useChartMargin = (margin, hasZoomingTool) =>\n  useMemo(() => {\n    return {\n      right: margin?.right ?? 30,\n      top: margin?.top ?? hasZoomingTool ? 40 : 20,\n      bottom: margin?.bottom ?? 20,\n      left: margin?.left ?? 10\n    };\n  }, [margin, hasZoomingTool]);\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { getTextWidth } from '@ui5/webcomponents-react-charts/lib/Utils';\nimport { useMemo } from 'react';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { defaultMaxYAxisWidth } from '../internal/defaults';\n\nexport const useLongestYAxisLabel = (dataset: unknown[], elements): [number, object] =>\n  useMemo(() => {\n    let labelLength = 0;\n    const primaryElement = elements[0];\n\n    if (dataset instanceof Array && primaryElement) {\n      const resolveAllMeasureLabels = (item): string[] => {\n        return elements.map((elementConfig) =>\n          primaryElement.formatter(getValueByDataKey(item, elementConfig.accessor, ''))\n        );\n      };\n      labelLength = Math.max(...dataset.map(resolveAllMeasureLabels).flat().map(getTextWidth));\n      labelLength += 8;\n    }\n\n    labelLength = Math.min(labelLength, defaultMaxYAxisWidth);\n\n    return [labelLength, { marginLeft: labelLength, maxWidth: `calc(100% - ${labelLength + 10}px)` }];\n  }, [dataset, elements]);\n","import debounce from 'lodash.debounce';\nimport { RefObject, useEffect, useRef, useState } from 'react';\n\nconst defaultAxisHeight = 30;\n\nexport const useObserveXAxisHeights = (chartRef: RefObject<SVGElement>, axisCount) => {\n  const [xAxisHeights, setXAxisHeights] = useState(Array(axisCount).fill(defaultAxisHeight));\n  const mostRecentXAxisHeights = useRef<number[]>(xAxisHeights);\n\n  useEffect(() => {\n    const mutationObserver = new MutationObserver(\n      debounce(() => {\n        const defaultHeights = Array(axisCount).fill(defaultAxisHeight);\n        chartRef.current?.querySelectorAll<SVGElement>('.xAxis').forEach((xAxis, index) => {\n          const currentAxisHeight = xAxis?.getBBox()?.height;\n          if (currentAxisHeight > 30) {\n            defaultHeights[index] = currentAxisHeight;\n          }\n        });\n\n        const arraysHaveTheSameLength = mostRecentXAxisHeights.current.length === defaultHeights.length;\n        const arrayContentIsIdentical = mostRecentXAxisHeights.current.every(\n          (value, index) => defaultHeights[index] === value\n        );\n        if (!(arraysHaveTheSameLength && arrayContentIsIdentical)) {\n          mostRecentXAxisHeights.current = defaultHeights;\n          setXAxisHeights(defaultHeights);\n        }\n      }, 75)\n    );\n\n    if (chartRef.current) {\n      mutationObserver.observe(chartRef.current, {\n        characterData: false,\n        characterDataOldValue: false,\n        attributes: false,\n        childList: true,\n        subtree: true\n      });\n    }\n    return () => {\n      mutationObserver.disconnect();\n    };\n  }, [chartRef, setXAxisHeights, mostRecentXAxisHeights]);\n\n  return xAxisHeights;\n};\n","import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && measure.formatter && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity = { fillOpacity: 0.3 };\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { ColumnChartPlaceholder } from '@ui5/webcomponents-react-charts/lib/ColumnChartPlaceholder';\nimport { ChartDataLabel } from '@ui5/webcomponents-react-charts/lib/components/ChartDataLabel';\nimport { XAxisTicks } from '@ui5/webcomponents-react-charts/lib/components/XAxisTicks';\nimport { YAxisTicks } from '@ui5/webcomponents-react-charts/lib/components/YAxisTicks';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/lib/next/ChartContainer';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/lib/useLegendItemClick';\nimport React, { FC, forwardRef, Ref, useCallback, useMemo } from 'react';\nimport {\n  Bar as Column,\n  BarChart as ColumnChartLib,\n  Brush,\n  CartesianGrid,\n  Legend,\n  ReferenceLine,\n  Tooltip,\n  XAxis,\n  YAxis\n} from 'recharts';\nimport { useChartMargin } from '../../hooks/useChartMargin';\nimport { useLongestYAxisLabel } from '../../hooks/useLongestYAxisLabel';\nimport { useObserveXAxisHeights } from '../../hooks/useObserveXAxisHeights';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { RechartBaseProps } from '../../interfaces/RechartBaseProps';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tickLineConfig, tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Column Width\n   */\n  width?: number;\n  /**\n   * Column Opacity\n   */\n  opacity?: number;\n  /**\n   * column Stack ID\n   * @default undefined\n   */\n  stackId?: string;\n}\n\ninterface DimensionConfig extends IChartDimension {\n  /**\n   * Interval of axis label\n   * @default 0\n   */\n  interval?: number;\n}\n\nexport interface ColumnChartProps extends RechartBaseProps {\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one column in the chart.\n   *\n   * <h4>Required properties</h4>\n   * - `accessor`: string containing the path to the dataset key this column should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * <h4>Optional properties</h4>\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this column.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `width`: column width, defaults to `auto`\n   * - `opacity`: column opacity, defaults to `1`\n   * - `stackId`: columns with the same stackId will be stacked\n   *\n   */\n  measures: MeasureConfig[];\n}\n\nconst dimensionDefaults = {\n  formatter: defaultFormatter\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 1\n};\n\n/**\n * <code>import { ColumnChart } from '@ui5/webcomponents-react-charts/lib/next/ColumnChart';</code>\n */\nconst ColumnChart: FC<ColumnChartProps> = forwardRef((props: ColumnChartProps, ref: Ref<any>) => {\n  const {\n    loading,\n    dataset,\n    noLegend = false,\n    noAnimation = false,\n    onDataPointClick,\n    onLegendClick,\n    style,\n    className,\n    tooltip,\n    slot\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      yAxisVisible: false,\n      xAxisVisible: true,\n      gridStroke: ThemingParameters.sapList_BorderColor,\n      gridHorizontal: true,\n      gridVertical: false,\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'left',\n      barGap: 3,\n      zoomingTool: false,\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n\n  const [yAxisWidth, legendPosition] = useLongestYAxisLabel(dataset, measures);\n\n  const primaryDimension = dimensions[0];\n  const primaryMeasure = measures[0];\n\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const dataKeys = measures.map(({ accessor }) => accessor);\n  const colorSecondY = chartConfig.secondYAxis\n    ? dataKeys.findIndex((key) => key === chartConfig.secondYAxis?.dataKey)\n    : 0;\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, eventOrIndex, event) => {\n      if (payload && onDataPointClick) {\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            dataKey: Object.keys(payload).filter((key) =>\n              payload.value.length\n                ? payload[key] === payload.value[1] - payload.value[0]\n                : payload[key] === payload.value && key !== 'value'\n            )[0],\n            value: payload.value.length ? payload.value[1] - payload.value[0] : payload.value,\n            dataIndex: eventOrIndex,\n            payload: payload.payload\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  const isBigDataSet = dataset?.length > 30 ?? false;\n  const primaryDimensionAccessor = primaryDimension?.accessor;\n\n  const marginChart = useChartMargin(chartConfig.margin, chartConfig.zoomingTool);\n  const xAxisHeights = useObserveXAxisHeights(chartRef, props.dimensions.length);\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      loading={loading}\n      Placeholder={ColumnChartPlaceholder}\n      ref={chartRef}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n    >\n      <ColumnChartLib\n        margin={marginChart}\n        data={dataset}\n        barGap={chartConfig.barGap}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <CartesianGrid\n          vertical={chartConfig.gridVertical}\n          horizontal={chartConfig.gridHorizontal}\n          stroke={chartConfig.gridStroke}\n        />\n        {chartConfig.xAxisVisible &&\n          dimensions.map((dimension, index) => {\n            return (\n              <XAxis\n                key={dimension.accessor}\n                dataKey={dimension.accessor}\n                xAxisId={index}\n                interval={dimension?.interval ?? (isBigDataSet ? 'preserveStart' : 0)}\n                tick={<XAxisTicks config={dimension} />}\n                tickLine={index < 1}\n                axisLine={index < 1}\n                height={xAxisHeights[index]}\n                allowDuplicatedCategory={index === 0}\n              />\n            );\n          })}\n        <YAxis\n          axisLine={chartConfig.yAxisVisible}\n          tickLine={tickLineConfig}\n          yAxisId=\"left\"\n          interval={0}\n          tick={<YAxisTicks config={primaryMeasure} />}\n          width={yAxisWidth}\n        />\n        {chartConfig.secondYAxis?.dataKey && (\n          <YAxis\n            dataKey={chartConfig.secondYAxis.dataKey}\n            stroke={chartConfig.secondYAxis.color ?? `var(--sapChart_OrderedColor_${(colorSecondY % 11) + 1})`}\n            label={{ value: chartConfig.secondYAxis.name, offset: 2, angle: +90, position: 'center' }}\n            orientation=\"right\"\n            yAxisId=\"right\"\n            interval={0}\n          />\n        )}\n        {measures.map((element, index) => {\n          return (\n            <Column\n              yAxisId={chartConfig.secondYAxis?.dataKey === element.accessor ? 'right' : 'left'}\n              stackId={element.stackId}\n              fillOpacity={element.opacity}\n              key={element.accessor}\n              name={element.label ?? element.accessor}\n              strokeOpacity={element.opacity}\n              label={<ChartDataLabel config={element} chartType=\"column\" position={'insideTop'} />}\n              type=\"monotone\"\n              dataKey={element.accessor}\n              fill={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              stroke={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              barSize={element.width}\n              onClick={onDataPointClickInternal}\n              isAnimationActive={noAnimation === false}\n            />\n          );\n        })}\n        {!noLegend && (\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n            wrapperStyle={legendPosition}\n          />\n        )}\n        {chartConfig.referenceLine && (\n          <ReferenceLine\n            stroke={chartConfig.referenceLine.color}\n            y={chartConfig.referenceLine.value}\n            label={chartConfig.referenceLine.label}\n            yAxisId={'left'}\n          />\n        )}\n        <Tooltip cursor={tooltipFillOpacity} formatter={tooltipValueFormatter} contentStyle={tooltipContentStyle} />\n        {chartConfig.zoomingTool && (\n          <Brush\n            y={10}\n            dataKey={primaryDimensionAccessor}\n            stroke={ThemingParameters.sapObjectHeader_BorderColor}\n            travellerWidth={10}\n            height={20}\n          />\n        )}\n      </ColumnChartLib>\n    </ChartContainer>\n  );\n});\n\nColumnChart.displayName = 'ColumnChart';\n\nexport { ColumnChart };\n"],"names":["useChartMargin","margin","hasZoomingTool","useMemo","right","top","bottom","left","defaultFormatter","d","defaultMaxYAxisWidth","useLongestYAxisLabel","dataset","elements","labelLength","primaryElement","Array","resolveAllMeasureLabels","item","map","elementConfig","formatter","getValueByDataKey","accessor","Math","max","flat","getTextWidth","min","marginLeft","maxWidth","defaultAxisHeight","useObserveXAxisHeights","chartRef","axisCount","useState","fill","xAxisHeights","setXAxisHeights","mostRecentXAxisHeights","useRef","useEffect","mutationObserver","MutationObserver","debounce","defaultHeights","current","querySelectorAll","forEach","xAxis","index","currentAxisHeight","getBBox","height","arraysHaveTheSameLength","length","arrayContentIsIdentical","every","value","observe","characterData","characterDataOldValue","attributes","childList","subtree","disconnect","usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","label","measures","useTooltipFormatter","useCallback","name","props","measure","find","dataKey","tickLineConfig","stroke","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","opacity","ColumnChart","forwardRef","ref","loading","noLegend","noAnimation","onDataPointClick","onLegendClick","style","className","tooltip","slot","chartConfig","yAxisVisible","xAxisVisible","gridStroke","sapList_BorderColor","gridHorizontal","gridVertical","legendPosition","legendHorizontalAlign","barGap","zoomingTool","resizeDebounce","tooltipValueFormatter","yAxisWidth","primaryDimension","primaryMeasure","useConsolidatedRef","dataKeys","colorSecondY","secondYAxis","findIndex","key","onItemLegendClick","useLegendItemClick","onDataPointClickInternal","payload","eventOrIndex","event","enrichEventWithDetails","Object","keys","filter","dataIndex","isBigDataSet","primaryDimensionAccessor","marginChart","ColumnChartPlaceholder","ColumnChartLib","undefined","dimension","interval","color","offset","angle","position","element","Column","stackId","width","referenceLine","sapObjectHeader_BorderColor","displayName"],"mappings":"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"}