{"version":3,"file":"DonutChart.js","sources":["../../src/internal/defaults.ts","../../src/internal/staticProps.ts","../../src/components/PieChart/PieChart.tsx","../../src/components/DonutChart/DonutChart.tsx"],"sourcesContent":["export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity = { fillOpacity: 0.3 };\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/lib/next/ChartContainer';\nimport { PieChartPlaceholder } from '@ui5/webcomponents-react-charts/lib/PieChartPlaceholder';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/lib/useLegendItemClick';\nimport React, { CSSProperties, FC, forwardRef, Ref, useCallback, useMemo, isValidElement, cloneElement } from 'react';\nimport { Cell, Label, Legend, Pie, PieChart as PieChartLib, Tooltip, Text } from 'recharts';\nimport { getValueByDataKey } from 'recharts/lib/util/ChartUtils';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { IPolarChartConfig } from '../../interfaces/IPolarChartConfig';\nimport { RechartBaseProps } from '../../interfaces/RechartBaseProps';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends Omit<IChartMeasure, 'accessor' | 'label' | 'color'> {\n  /**\n   * A string containing the path to the dataset key this pie should display.\n   * Supports object structures by using `'parent.child'`. Can also be a getter.\n   */\n  accessor: string;\n  /**\n   * array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   */\n  colors?: CSSProperties['color'][];\n}\n\ninterface DimensionConfig {\n  /**\n   * A string containing the path to the dataset key this pie should display.\n   * Supports object structures by using `'parent.child'`. Can also be a getter.\n   */\n  accessor: string;\n  /**\n   * function will be called for each data label and allows you to format it according to your needs\n   */\n  formatter?: (value: any) => string;\n}\n\nexport interface PieChartProps extends RechartBaseProps<IPolarChartConfig> {\n  centerLabel?: string;\n  dimension: DimensionConfig;\n  /**\n   * An array of config objects. Each object is defining one pie in the chart.\n   *\n   * <h4>Required properties</h4>\n   * - `accessor`: string containing the path to the dataset key this pie should display. Supports object structures by using <code>'parent.child'</code>.\n   *\n   * <h4>Optional properties</h4>\n   *\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this pie.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `colors`: array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   */\n  measure: MeasureConfig;\n}\n\n/**\n * <code>import { PieChart } from '@ui5/webcomponents-react-charts/lib/next/PieChart';</code>\n */\nconst PieChart: FC<PieChartProps> = forwardRef((props: PieChartProps, ref: Ref<any>) => {\n  const {\n    loading,\n    dataset,\n    noLegend = false,\n    noAnimation = false,\n    onDataPointClick,\n    onLegendClick,\n    centerLabel,\n    style,\n    className,\n    tooltip,\n    slot\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      margin: { right: 30, left: 30, bottom: 30, top: 30, ...(props.chartConfig?.margin ?? {}) },\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'center',\n      paddingAngle: 0,\n      outerRadius: '80%',\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const dimension: DimensionConfig = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.dimension\n    }),\n    [props.dimension]\n  );\n\n  const measure: MeasureConfig = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.measure\n    }),\n    [props.measure]\n  );\n\n  const dataLabel = useCallback(\n    (props) => {\n      if (measure.hideDataLabel) return null;\n\n      if (isValidElement(measure.DataLabel)) {\n        return cloneElement(measure.DataLabel, { ...props, config: measure });\n      }\n\n      return (\n        <Text {...props} alignmentBaseline=\"middle\" className=\"recharts-pie-label-text\">\n          {measure.formatter(props.value)}\n        </Text>\n      );\n    },\n    [measure]\n  );\n\n  const tooltipValueFormatter = useCallback((value) => measure.formatter(value), [measure.formatter]);\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick, () => measure.accessor);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, dataIndex, event) => {\n      if (payload && payload && typeof onDataPointClick === 'function') {\n        onDataPointClick(\n          enrichEventWithDetails(event, {\n            value: payload.value,\n            dataKey: payload.tooltipPayload?.[0]?.dataKey,\n            name: payload.name,\n            payload: payload.payload,\n            dataIndex\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      ref={chartRef}\n      loading={loading}\n      Placeholder={PieChartPlaceholder}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n    >\n      <PieChartLib\n        margin={chartConfig.margin}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <Pie\n          onClick={onDataPointClickInternal}\n          innerRadius={chartConfig.innerRadius}\n          outerRadius={chartConfig.outerRadius}\n          paddingAngle={chartConfig.paddingAngle}\n          nameKey={dimension.accessor}\n          dataKey={measure.accessor}\n          data={dataset}\n          animationBegin={0}\n          isAnimationActive={noAnimation === false}\n          labelLine={measure.hideDataLabel !== true}\n          label={dataLabel}\n        >\n          {centerLabel && <Label position={'center'}>{centerLabel}</Label>}\n          {dataset &&\n            dataset.map((data, index) => (\n              <Cell\n                key={index}\n                name={dimension.formatter(getValueByDataKey(data, dimension.accessor, ''))}\n                fill={measure.colors?.[index] ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              />\n            ))}\n        </Pie>\n        <Tooltip cursor={tooltipFillOpacity} formatter={tooltipValueFormatter} contentStyle={tooltipContentStyle} />\n        {!noLegend && (\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n          />\n        )}\n      </PieChartLib>\n    </ChartContainer>\n  );\n});\n\nPieChart.displayName = 'PieChart';\n\nexport { PieChart };\n","import React, { FC, forwardRef, useMemo } from 'react';\nimport { PieChart, PieChartProps } from '../PieChart/PieChart';\n\n/**\n * <code>import { DonutChart } from '@ui5/webcomponents-react-charts/lib/next/DonutChart';</code>\n */\nconst DonutChart: FC<PieChartProps> = forwardRef((props: PieChartProps, ref) => {\n  const chartConfig = useMemo(() => {\n    return {\n      legendPosition: 'bottom',\n      paddingAngle: 0,\n      innerRadius: '50%',\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  return <PieChart {...props} ref={ref} chartConfig={chartConfig} />;\n});\n\nDonutChart.displayName = 'DonutChart';\n\nexport { DonutChart };\n"],"names":["defaultFormatter","d","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","PieChart","forwardRef","props","ref","loading","dataset","noLegend","noAnimation","onDataPointClick","onLegendClick","centerLabel","style","className","tooltip","slot","chartConfig","useMemo","margin","right","left","bottom","top","legendPosition","legendHorizontalAlign","paddingAngle","outerRadius","resizeDebounce","dimension","formatter","measure","dataLabel","useCallback","hideDataLabel","isValidElement","DataLabel","cloneElement","config","value","tooltipValueFormatter","chartRef","useConsolidatedRef","onItemLegendClick","useLegendItemClick","accessor","onDataPointClickInternal","payload","dataIndex","event","enrichEventWithDetails","dataKey","tooltipPayload","name","PieChartPlaceholder","PieChartLib","undefined","innerRadius","map","data","index","getValueByDataKey","colors","displayName","DonutChart"],"mappings":"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"}