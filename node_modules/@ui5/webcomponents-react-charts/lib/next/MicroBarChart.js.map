{"version":3,"file":"MicroBarChart.js","sources":["../../src/internal/defaults.ts","../../src/components/BarChart/Placeholder.tsx","../../src/internal/staticProps.ts","../../src/components/MicroBarChart/MicroBarChart.tsx"],"sourcesContent":["export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nexport const BarChartPlaceholder = () => {\n  return (\n    <ContentLoader\n      viewBox=\"0 0 165 145\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      width=\"100%\"\n      height=\"100%\"\n      speed={2}\n      backgroundColor={ThemingParameters.sapContent_ImagePlaceholderBackground}\n      foregroundColor={ThemingParameters.sapContent_ImagePlaceholderForegroundColor}\n      backgroundOpacity={ThemingParameters.sapContent_DisabledOpacity as any}\n    >\n      <rect x=\"20\" y=\"10\" width=\"1\" height=\"135\" />\n      <rect x=\"20\" y=\"20\" width=\"85\" height=\"15\" />\n      <rect x=\"20\" y=\"40\" width=\"117\" height=\"15\" />\n      <rect x=\"20\" y=\"60\" width=\"67\" height=\"15\" />\n      <rect x=\"20\" y=\"80\" width=\"75\" height=\"15\" />\n      <rect x=\"20\" y=\"100\" width=\"125\" height=\"15\" />\n      <rect x=\"20\" y=\"120\" width=\"60\" height=\"15\" />\n    </ContentLoader>\n  );\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity = { fillOpacity: 0.3 };\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/lib/next/ChartContainer';\nimport React, { CSSProperties, FC, forwardRef, Ref, useCallback, useMemo } from 'react';\nimport { Bar, BarChart as MicroBarChartLib, Cell, Tooltip, XAxis, YAxis } from 'recharts';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { BarChartPlaceholder } from '../BarChart/Placeholder';\nimport { RechartBaseProps } from '../../interfaces/RechartBaseProps';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends Omit<IChartMeasure, 'accessor' | 'color'> {\n  /**\n   * A string containing the path to the dataset key this bar should display.\n   * Supports object structures by using `'parent.child'`. Can also be a getter.\n   */\n  accessor: string;\n  /**\n   * array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   */\n  colors?: CSSProperties['color'][];\n  /**\n   * Bar Opacity\n   * @default 1\n   */\n  opacity?: number;\n  /**\n   * Bar Width\n   * @default auto\n   */\n  width?: number;\n}\n\ninterface DimensionConfig {\n  /**\n   * A string containing the path to the dataset key this bar should display.\n   * Supports object structures by using `'parent.child'`. Can also be a getter.\n   */\n  accessor: string;\n  /**\n   * function will be called for each data label and allows you to format it according to your needs\n   */\n  formatter?: (value: any) => string;\n}\n\nexport interface MicroBarChartProps extends RechartBaseProps {\n  centerLabel?: string;\n  dimension: DimensionConfig;\n  /**\n   * An array of config objects. Each object is defining one bar in the chart.\n   *\n   * <h4>Required properties</h4>\n   * - `accessor`: string containing the path to the dataset key this bar should display. Supports object structures by using <code>'parent.child'</code>.\n   *\n   * <h4>Optional properties</h4>\n   *\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `colors`: array of any valid CSS Color or CSS Variable. Defaults to the `sapChart_OrderedColor_` colors\n   */\n  measure: MeasureConfig;\n}\n\nconst TiltedAxisTick = (props) => {\n  const { x, y, payload } = props;\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text x={7} y={-10} textAnchor=\"begin\" fill={ThemingParameters.sapContent_LabelColor}>\n        {payload.value}\n      </text>\n    </g>\n  );\n};\n\nconst microBarChartLabel = { position: 'insideBottomRight', fill: ThemingParameters.sapContent_LabelColor };\nconst microBarChartMargin = { left: -30, right: 30, top: 40, bottom: 30 };\n\n/**\n * <code>import { MicroBarChart } from '@ui5/webcomponents-react-charts/lib/next/MicroBarChart';</code>\n */\nconst MicroBarChart: FC<MicroBarChartProps> = forwardRef((props: MicroBarChartProps, ref: Ref<any>) => {\n  const { loading, dataset, onDataPointClick, style, className, tooltip, slot } = props;\n\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const dimension: DimensionConfig = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.dimension\n    }),\n    [props.dimension]\n  );\n  const measure: MeasureConfig = useMemo(\n    () => ({\n      formatter: defaultFormatter,\n      ...props.measure\n    }),\n    [props.measure]\n  );\n\n  const tooltipValueFormatter = useCallback((value) => measure.formatter(value), [measure.formatter]);\n\n  const onDataPointClickInternal = useCallback(\n    (e, i) => {\n      if (e && onDataPointClick) {\n        onDataPointClick(\n          enrichEventWithDetails(e, {\n            dataKey: Object.keys(e).filter((key) =>\n              e.value.length ? e[key] === e.value[1] - e.value[0] : e[key] === e.value && key !== 'value'\n            )[0],\n            value: e.value.length ? e.value[1] - e.value[0] : e.value,\n            payload: e.payload,\n            dataIndex: i\n          })\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  const CustomizedLabel = (properties) => {\n    const { x, y, value } = properties;\n    const xText = chartRef.current.clientWidth - 60;\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text y={-7} dx={`${xText}px`} textAnchor={'end'} fill={ThemingParameters.sapContent_LabelColor}>\n          {measure.formatter(value)}\n        </text>\n      </g>\n    );\n  };\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      loading={loading}\n      Placeholder={BarChartPlaceholder}\n      ref={chartRef}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={250}\n    >\n      <MicroBarChartLib margin={microBarChartMargin} layout=\"vertical\" data={dataset} label={microBarChartLabel}>\n        <XAxis hide type=\"number\" />\n        <YAxis\n          axisLine={false}\n          tick={<TiltedAxisTick />}\n          tickLine={false}\n          type=\"category\"\n          dataKey={dimension.accessor}\n        />\n        <Bar\n          background={{ fill: ThemingParameters.sapNeutralBackground }}\n          strokeOpacity={measure.opacity}\n          fillOpacity={measure.opacity}\n          label={{ content: <CustomizedLabel external={style.width} /> }}\n          dataKey={measure.accessor}\n          barSize={measure.width ?? 5}\n          onClick={onDataPointClickInternal}\n        >\n          {dataset &&\n            dataset.map((data, index) => (\n              <Cell\n                key={index}\n                name={dimension.formatter(data[dimension.accessor])}\n                fill={measure.colors?.[index] ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              />\n            ))}\n        </Bar>\n        <Tooltip cursor={tooltipFillOpacity} formatter={tooltipValueFormatter} contentStyle={tooltipContentStyle} />\n      </MicroBarChartLib>\n    </ChartContainer>\n  );\n});\n\nMicroBarChart.displayName = 'MicroBarChart';\n\nexport { MicroBarChart };\n"],"names":["defaultFormatter","d","BarChartPlaceholder","ThemingParameters","sapContent_ImagePlaceholderBackground","sapContent_ImagePlaceholderForegroundColor","sapContent_DisabledOpacity","tooltipContentStyle","backgroundColor","sapBackgroundColor","tooltipFillOpacity","fillOpacity","TiltedAxisTick","props","x","y","payload","sapContent_LabelColor","value","microBarChartLabel","position","fill","microBarChartMargin","left","right","top","bottom","MicroBarChart","forwardRef","ref","loading","dataset","onDataPointClick","style","className","tooltip","slot","chartRef","useConsolidatedRef","dimension","useMemo","formatter","measure","tooltipValueFormatter","useCallback","onDataPointClickInternal","e","i","enrichEventWithDetails","dataKey","Object","keys","filter","key","length","dataIndex","CustomizedLabel","properties","xText","current","clientWidth","MicroBarChartLib","accessor","sapNeutralBackground","opacity","content","width","map","data","index","colors","displayName"],"mappings":";;;;;;;;;AAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD;AAAA,SAAOA,CAAP;AAAA,CAAzB;;ACIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACvC,sBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAC,aADV;AAEE,IAAA,mBAAmB,EAAC,eAFtB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,KAAK,EAAE,CALT;AAME,IAAA,eAAe,EAAEC,iBAAiB,CAACC,qCANrC;AAOE,IAAA,eAAe,EAAED,iBAAiB,CAACE,0CAPrC;AAQE,IAAA,iBAAiB,EAAEF,iBAAiB,CAACG;AARvC,kBAUE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,GAA1B;AAA8B,IAAA,MAAM,EAAC;AAArC,IAVF,eAWE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,IAA1B;AAA+B,IAAA,MAAM,EAAC;AAAtC,IAXF,eAYE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,KAA1B;AAAgC,IAAA,MAAM,EAAC;AAAvC,IAZF,eAaE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,IAA1B;AAA+B,IAAA,MAAM,EAAC;AAAtC,IAbF,eAcE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,IAAf;AAAoB,IAAA,KAAK,EAAC,IAA1B;AAA+B,IAAA,MAAM,EAAC;AAAtC,IAdF,eAeE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,MAAM,EAAC;AAAxC,IAfF,eAgBE;AAAM,IAAA,CAAC,EAAC,IAAR;AAAa,IAAA,CAAC,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAC,IAA3B;AAAgC,IAAA,MAAM,EAAC;AAAvC,IAhBF,CADF;AAoBD,CArBM;;ACDA,IAAMC,mBAAmB,GAAG;AAAEC,EAAAA,eAAe,EAAEL,iBAAiB,CAACM;AAArC,CAA5B;AACA,IAAMC,kBAAkB,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAA3B;;AC2DP,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,MACxBC,CADwB,GACND,KADM,CACxBC,CADwB;AAAA,MACrBC,CADqB,GACNF,KADM,CACrBE,CADqB;AAAA,MAClBC,OADkB,GACNH,KADM,CAClBG,OADkB;AAEhC,sBACE;AAAG,IAAA,SAAS,sBAAeF,CAAf,cAAoBC,CAApB;AAAZ,kBACE;AAAM,IAAA,CAAC,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,CAAC,EAAhB;AAAoB,IAAA,UAAU,EAAC,OAA/B;AAAuC,IAAA,IAAI,EAAEZ,iBAAiB,CAACc;AAA/D,KACGD,OAAO,CAACE,KADX,CADF,CADF;AAOD,CATD;;AAWA,IAAMC,kBAAkB,GAAG;AAAEC,EAAAA,QAAQ,EAAE,mBAAZ;AAAiCC,EAAAA,IAAI,EAAElB,iBAAiB,CAACc;AAAzD,CAA3B;AACA,IAAMK,mBAAmB,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAC,EAAT;AAAaC,EAAAA,KAAK,EAAE,EAApB;AAAwBC,EAAAA,GAAG,EAAE,EAA7B;AAAiCC,EAAAA,MAAM,EAAE;AAAzC,CAA5B;AAEA;;;;IAGMC,aAAqC,GAAGC,UAAU,CAAC,UAACf,KAAD,EAA4BgB,GAA5B,EAA8C;AAAA;;AAAA,MAC7FC,OAD6F,GACrBjB,KADqB,CAC7FiB,OAD6F;AAAA,MACpFC,OADoF,GACrBlB,KADqB,CACpFkB,OADoF;AAAA,MAC3EC,gBAD2E,GACrBnB,KADqB,CAC3EmB,gBAD2E;AAAA,MACzDC,KADyD,GACrBpB,KADqB,CACzDoB,KADyD;AAAA,MAClDC,SADkD,GACrBrB,KADqB,CAClDqB,SADkD;AAAA,MACvCC,OADuC,GACrBtB,KADqB,CACvCsB,OADuC;AAAA,MAC9BC,IAD8B,GACrBvB,KADqB,CAC9BuB,IAD8B;AAGrG,MAAMC,QAAQ,GAAGC,kBAAkB,CAAMT,GAAN,CAAnC;AAEA,MAAMU,SAA0B,GAAGC,OAAO,CACxC;AAAA;AACEC,MAAAA,SAAS,EAAEzC;AADb,OAEKa,KAAK,CAAC0B,SAFX;AAAA,GADwC,EAKxC,CAAC1B,KAAK,CAAC0B,SAAP,CALwC,CAA1C;AAOA,MAAMG,OAAsB,GAAGF,OAAO,CACpC;AAAA;AACEC,MAAAA,SAAS,EAAEzC;AADb,OAEKa,KAAK,CAAC6B,OAFX;AAAA,GADoC,EAKpC,CAAC7B,KAAK,CAAC6B,OAAP,CALoC,CAAtC;AAQA,MAAMC,qBAAqB,GAAGC,WAAW,CAAC,UAAC1B,KAAD;AAAA,WAAWwB,OAAO,CAACD,SAAR,CAAkBvB,KAAlB,CAAX;AAAA,GAAD,EAAsC,CAACwB,OAAO,CAACD,SAAT,CAAtC,CAAzC;AAEA,MAAMI,wBAAwB,GAAGD,WAAW,CAC1C,UAACE,CAAD,EAAIC,CAAJ,EAAU;AACR,QAAID,CAAC,IAAId,gBAAT,EAA2B;AACzBA,MAAAA,gBAAgB,CACdgB,sBAAsB,CAACF,CAAD,EAAI;AACxBG,QAAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAYL,CAAZ,EAAeM,MAAf,CAAsB,UAACC,GAAD;AAAA,iBAC7BP,CAAC,CAAC5B,KAAF,CAAQoC,MAAR,GAAiBR,CAAC,CAACO,GAAD,CAAD,KAAWP,CAAC,CAAC5B,KAAF,CAAQ,CAAR,IAAa4B,CAAC,CAAC5B,KAAF,CAAQ,CAAR,CAAzC,GAAsD4B,CAAC,CAACO,GAAD,CAAD,KAAWP,CAAC,CAAC5B,KAAb,IAAsBmC,GAAG,KAAK,OADvD;AAAA,SAAtB,EAEP,CAFO,CADe;AAIxBnC,QAAAA,KAAK,EAAE4B,CAAC,CAAC5B,KAAF,CAAQoC,MAAR,GAAiBR,CAAC,CAAC5B,KAAF,CAAQ,CAAR,IAAa4B,CAAC,CAAC5B,KAAF,CAAQ,CAAR,CAA9B,GAA2C4B,CAAC,CAAC5B,KAJ5B;AAKxBF,QAAAA,OAAO,EAAE8B,CAAC,CAAC9B,OALa;AAMxBuC,QAAAA,SAAS,EAAER;AANa,OAAJ,CADR,CAAhB;AAUD;AACF,GAdyC,EAe1C,CAACf,gBAAD,CAf0C,CAA5C;;AAkBA,MAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,UAAD,EAAgB;AAAA,QAC9B3C,CAD8B,GACd2C,UADc,CAC9B3C,CAD8B;AAAA,QAC3BC,CAD2B,GACd0C,UADc,CAC3B1C,CAD2B;AAAA,QACxBG,KADwB,GACduC,UADc,CACxBvC,KADwB;AAEtC,QAAMwC,KAAK,GAAGrB,QAAQ,CAACsB,OAAT,CAAiBC,WAAjB,GAA+B,EAA7C;AAEA,wBACE;AAAG,MAAA,SAAS,sBAAe9C,CAAf,cAAoBC,CAApB;AAAZ,oBACE;AAAM,MAAA,CAAC,EAAE,CAAC,CAAV;AAAa,MAAA,EAAE,YAAK2C,KAAL,OAAf;AAA+B,MAAA,UAAU,EAAE,KAA3C;AAAkD,MAAA,IAAI,EAAEvD,iBAAiB,CAACc;AAA1E,OACGyB,OAAO,CAACD,SAAR,CAAkBvB,KAAlB,CADH,CADF,CADF;AAOD,GAXD;;AAaA,sBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEa,OADX;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,WAAW,EAAE5B,mBAHf;AAIE,IAAA,GAAG,EAAEmC,QAJP;AAKE,IAAA,KAAK,EAAEJ,KALT;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,OAAO,EAAEC,OAPX;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,cAAc,EAAE;AATlB,kBAWE,oBAACyB,QAAD;AAAkB,IAAA,MAAM,EAAEvC,mBAA1B;AAA+C,IAAA,MAAM,EAAC,UAAtD;AAAiE,IAAA,IAAI,EAAES,OAAvE;AAAgF,IAAA,KAAK,EAAEZ;AAAvF,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,IAAI,EAAC;AAAjB,IADF,eAEE,oBAAC,KAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,IAAI,eAAE,oBAAC,cAAD,OAFR;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,OAAO,EAAEoB,SAAS,CAACuB;AALrB,IAFF,eASE,oBAAC,GAAD;AACE,IAAA,UAAU,EAAE;AAAEzC,MAAAA,IAAI,EAAElB,iBAAiB,CAAC4D;AAA1B,KADd;AAEE,IAAA,aAAa,EAAErB,OAAO,CAACsB,OAFzB;AAGE,IAAA,WAAW,EAAEtB,OAAO,CAACsB,OAHvB;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,eAAE,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEhC,KAAK,CAACiC;AAAjC;AAAX,KAJT;AAKE,IAAA,OAAO,EAAExB,OAAO,CAACoB,QALnB;AAME,IAAA,OAAO,oBAAEpB,OAAO,CAACwB,KAAV,2DAAmB,CAN5B;AAOE,IAAA,OAAO,EAAErB;AAPX,KASGd,OAAO,IACNA,OAAO,CAACoC,GAAR,CAAY,UAACC,IAAD,EAAOC,KAAP;AAAA;;AAAA,wBACV,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAE9B,SAAS,CAACE,SAAV,CAAoB2B,IAAI,CAAC7B,SAAS,CAACuB,QAAX,CAAxB,CAFR;AAGE,MAAA,IAAI,8CAAEpB,OAAO,CAAC4B,MAAV,oDAAE,gBAAiBD,KAAjB,CAAF,+GAA6DA,KAAK,GAAG,EAAT,GAAe,CAA3E;AAHN,MADU;AAAA,GAAZ,CAVJ,CATF,eA2BE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAE3D,kBAAjB;AAAqC,IAAA,SAAS,EAAEiC,qBAAhD;AAAuE,IAAA,YAAY,EAAEpC;AAArF,IA3BF,CAXF,CADF;AA2CD,CAhGuD;AAkGxDoB,aAAa,CAAC4C,WAAd,GAA4B,eAA5B;;;;"}