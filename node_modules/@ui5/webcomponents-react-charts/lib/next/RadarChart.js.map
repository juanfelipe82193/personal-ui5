{"version":3,"file":"RadarChart.js","sources":["../../src/hooks/usePrepareDimensionsAndMeasures.ts","../../src/hooks/useTooltipFormatter.ts","../../src/internal/defaults.ts","../../src/internal/staticProps.ts","../../src/components/RadarChart/RadarChart.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nexport const usePrepareDimensionsAndMeasures = <DimensionConfig = any, MeasureConfig = any>(\n  rawDimensions,\n  rawMeasures,\n  dimensionDefaults = {},\n  measureDefaults = {}\n) => {\n  const dimensions: DimensionConfig = useMemo(\n    () =>\n      rawDimensions.map((label) => ({\n        ...dimensionDefaults,\n        ...label\n      })),\n    [rawDimensions, dimensionDefaults]\n  );\n\n  const measures: MeasureConfig = useMemo(\n    () =>\n      rawMeasures.map((value) => ({\n        ...measureDefaults,\n        ...value\n      })),\n    [rawMeasures, measureDefaults]\n  );\n\n  return { dimensions, measures };\n};\n","import { useCallback } from 'react';\n\nexport const useTooltipFormatter = (measures) => {\n  return useCallback(\n    (value, name, props) => {\n      const measure = measures.find(({ accessor }) => accessor === props.dataKey);\n      if (measure && measure.formatter && typeof measure.formatter === 'function') {\n        return measure.formatter(value);\n      }\n      return value;\n    },\n    [measures]\n  );\n};\n","export const defaultFormatter = (d) => d;\n\nexport const defaultMaxYAxisWidth = 200;\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const tickLineConfig = { stroke: 'transparent' };\nexport const tooltipContentStyle = { backgroundColor: ThemingParameters.sapBackgroundColor };\nexport const tooltipFillOpacity = { fillOpacity: 0.3 };\nexport const xAxisPadding = { left: 25, right: 25 };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { ChartDataLabel } from '@ui5/webcomponents-react-charts/lib/components/ChartDataLabel';\nimport { ChartContainer } from '@ui5/webcomponents-react-charts/lib/next/ChartContainer';\nimport { PieChartPlaceholder } from '@ui5/webcomponents-react-charts/lib/PieChartPlaceholder';\nimport { useLegendItemClick } from '@ui5/webcomponents-react-charts/lib/useLegendItemClick';\nimport React, { FC, forwardRef, Ref, useCallback, useMemo } from 'react';\nimport {\n  Legend,\n  PolarAngleAxis,\n  PolarGrid,\n  PolarRadiusAxis,\n  Radar,\n  RadarChart as RadarChartLib,\n  Tooltip\n} from 'recharts';\nimport { usePrepareDimensionsAndMeasures } from '../../hooks/usePrepareDimensionsAndMeasures';\nimport { useTooltipFormatter } from '../../hooks/useTooltipFormatter';\nimport { IChartDimension } from '../../interfaces/IChartDimension';\nimport { IChartMeasure } from '../../interfaces/IChartMeasure';\nimport { RechartBaseProps } from '../../interfaces/RechartBaseProps';\nimport { defaultFormatter } from '../../internal/defaults';\nimport { tooltipContentStyle, tooltipFillOpacity } from '../../internal/staticProps';\n\ninterface MeasureConfig extends IChartMeasure {\n  /**\n   * Opacity\n   */\n  opacity?: number;\n}\n\ninterface DimensionConfig extends IChartDimension {\n  interval?: number;\n}\n\nexport interface RadarChartProps extends RechartBaseProps {\n  dimensions: DimensionConfig[];\n  /**\n   * An array of config objects. Each object is defining one radar in the chart.\n   *\n   * <h4>Required properties</h4>\n   * - `accessor`: string containing the path to the dataset key this radar should display. Supports object structures by using <code>'parent.child'</code>.\n   *   Can also be a getter.\n   *\n   * <h4>Optional properties</h4>\n   *\n   * - `label`: Label to display in legends or tooltips. Falls back to the <code>accessor</code> if not present.\n   * - `color`: any valid CSS Color or CSS Variable. Defaults to the `sapChart_Ordinal` colors\n   * - `formatter`: function will be called for each data label and allows you to format it according to your needs\n   * - `hideDataLabel`: flag whether the data labels should be hidden in the chart for this radar.\n   * - `DataLabel`: a custom component to be used for the data label\n   * - `opacity`: radar opacity, defaults to `0.5`\n   *\n   */\n  measures: MeasureConfig[];\n}\n\nconst dimensionDefaults = {\n  formatter: (d) => d\n};\n\nconst measureDefaults = {\n  formatter: defaultFormatter,\n  opacity: 0.5\n};\n\n/**\n * <code>import { RadarChart } from '@ui5/webcomponents-react-charts/lib/next/RadarChart';</code>\n */\nconst RadarChart: FC<RadarChartProps> = forwardRef((props: RadarChartProps, ref: Ref<any>) => {\n  const {\n    loading,\n    dataset,\n    noLegend = false,\n    noAnimation = false,\n    onDataPointClick,\n    onLegendClick,\n    style,\n    className,\n    tooltip,\n    slot\n  } = props;\n\n  const chartConfig = useMemo(() => {\n    return {\n      legendPosition: 'bottom',\n      legendHorizontalAlign: 'center',\n      dataLabel: true,\n      polarGridType: 'circle',\n      resizeDebounce: 250,\n      ...props.chartConfig\n    };\n  }, [props.chartConfig]);\n\n  const chartRef = useConsolidatedRef<any>(ref);\n\n  const { dimensions, measures } = usePrepareDimensionsAndMeasures(\n    props.dimensions,\n    props.measures,\n    dimensionDefaults,\n    measureDefaults\n  );\n\n  const tooltipValueFormatter = useTooltipFormatter(measures);\n\n  const primaryDimension = dimensions[0];\n\n  const primaryDimensionAccessor = primaryDimension?.accessor;\n\n  const onItemLegendClick = useLegendItemClick(onLegendClick);\n\n  const onDataPointClickInternal = useCallback(\n    (payload, eventOrIndex) => {\n      if (eventOrIndex.value && onDataPointClick) {\n        onDataPointClick(\n          enrichEventWithDetails(\n            {},\n            {\n              value: eventOrIndex.value,\n              dataKey: eventOrIndex.dataKey,\n              name: eventOrIndex.payload.label,\n              dataIndex: eventOrIndex.index,\n              payload: eventOrIndex.payload\n            }\n          )\n        );\n      }\n    },\n    [onDataPointClick]\n  );\n\n  return (\n    <ChartContainer\n      dataset={dataset}\n      ref={chartRef}\n      loading={loading}\n      Placeholder={PieChartPlaceholder}\n      style={style}\n      className={className}\n      tooltip={tooltip}\n      slot={slot}\n      resizeDebounce={chartConfig.resizeDebounce}\n    >\n      <RadarChartLib\n        data={dataset}\n        margin={chartConfig.margin}\n        className={typeof onDataPointClick === 'function' ? 'has-click-handler' : undefined}\n      >\n        <PolarGrid gridType={chartConfig.polarGridType} />\n        <PolarAngleAxis\n          dataKey={primaryDimensionAccessor}\n          tickFormatter={primaryDimension?.formatter}\n          tick={{\n            fill: ThemingParameters.sapContent_LabelColor\n          }}\n        />\n        <PolarRadiusAxis />\n        {measures.map((element, index) => {\n          return (\n            <Radar\n              key={element.accessor}\n              activeDot={{ onClick: onDataPointClickInternal }}\n              name={element.label ?? element.accessor}\n              dataKey={element.accessor}\n              stroke={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              fill={element.color ?? `var(--sapChart_OrderedColor_${(index % 11) + 1})`}\n              fillOpacity={element.opacity}\n              label={<ChartDataLabel config={element} chartType=\"radar\" position={'outside'} />}\n              isAnimationActive={noAnimation === false}\n            />\n          );\n        })}\n        <Tooltip cursor={tooltipFillOpacity} formatter={tooltipValueFormatter} contentStyle={tooltipContentStyle} />\n        {!noLegend && (\n          <Legend\n            verticalAlign={chartConfig.legendPosition}\n            align={chartConfig.legendHorizontalAlign}\n            onClick={onItemLegendClick}\n          />\n        )}\n      </RadarChartLib>\n    </ChartContainer>\n  );\n});\n\nRadarChart.displayName = 'RadarChart';\n\nexport { RadarChart };\n"],"names":["usePrepareDimensionsAndMeasures","rawDimensions","rawMeasures","dimensionDefaults","measureDefaults","dimensions","useMemo","map","label","measures","value","useTooltipFormatter","useCallback","name","props","measure","find","accessor","dataKey","formatter","defaultFormatter","d","tooltipContentStyle","backgroundColor","ThemingParameters","sapBackgroundColor","tooltipFillOpacity","fillOpacity","opacity","RadarChart","forwardRef","ref","loading","dataset","noLegend","noAnimation","onDataPointClick","onLegendClick","style","className","tooltip","slot","chartConfig","legendPosition","legendHorizontalAlign","dataLabel","polarGridType","resizeDebounce","chartRef","useConsolidatedRef","tooltipValueFormatter","primaryDimension","primaryDimensionAccessor","onItemLegendClick","useLegendItemClick","onDataPointClickInternal","payload","eventOrIndex","enrichEventWithDetails","dataIndex","index","PieChartPlaceholder","RadarChartLib","margin","undefined","fill","sapContent_LabelColor","element","onClick","color","displayName"],"mappings":"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"}