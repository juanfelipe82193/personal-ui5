import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';
import { getTextWidth, truncateLongLabel } from '@ui5/webcomponents-react-charts/lib/Utils';
import React from 'react';

var defaultMaxYAxisWidth = 200;

var YAxisTicks = function YAxisTicks(props) {
  var x = props.x,
      y = props.y,
      payload = props.payload,
      config = props.config;
  var formattedValue = config.formatter(payload.value);
  var textToDisplay = formattedValue;

  if (getTextWidth(formattedValue) > defaultMaxYAxisWidth) {
    for (var i = "".concat(formattedValue).length; i > 0; i--) {
      textToDisplay = truncateLongLabel(formattedValue, i);

      if (getTextWidth(textToDisplay) <= defaultMaxYAxisWidth) {
        break;
      }
    }
  }

  return /*#__PURE__*/React.createElement("g", {
    transform: "translate(".concat(x, ",").concat(y + 3, ")")
  }, /*#__PURE__*/React.createElement("text", {
    fill: ThemingParameters.sapContent_LabelColor,
    textAnchor: "end"
  }, textToDisplay));
};

export { YAxisTicks };
//# sourceMappingURL=YAxisTicks.js.map
