import _extends from '@babel/runtime/helpers/extends';
import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';
import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';
import { useScrollElement } from '@ui5/webcomponents-react-base/lib/useScrollElement';
import React, { forwardRef } from 'react';
import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _inherits from '@babel/runtime/helpers/inherits';
import _createSuper from '@babel/runtime/helpers/createSuper';
import _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';
import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';

var EmptyIdPropException = /*#__PURE__*/function (_Error) {
  _inherits(EmptyIdPropException, _Error);

  var _super = _createSuper(EmptyIdPropException);

  function EmptyIdPropException(message) {
    var _this;

    _classCallCheck(this, EmptyIdPropException);

    _this = _super.call(this, message);
    _this.name = _this.constructor.name;
    return _this;
  }

  return EmptyIdPropException;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var styles = {
  header: {
    padding: '0 3rem 0 2.5rem',
    borderBottom: "1px solid ".concat(ThemingParameters.sapGroup_TitleBorderColor),
    boxSizing: 'border-box',
    height: '2.75rem'
  },
  title: {
    height: '2.75rem',
    color: ThemingParameters.sapTextColor,
    fontSize: ThemingParameters.sapFontHeader4Size,
    borderBottom: "1px solid ".concat(ThemingParameters.sapActiveColor),
    display: 'inline-block',
    maxWidth: '100%',
    overflow: 'hidden',
    whiteSpace: 'nowrap',
    textOverflow: 'ellipsis',
    fontFamily: ThemingParameters.sapFontFamily
  },
  uppercase: {
    textTransform: 'uppercase'
  },
  sectionContent: {
    whiteSpace: 'normal'
  },
  sectionContentInner: {
    padding: '1rem 2rem 2rem 2.5rem',
    fontFamily: ThemingParameters.sapFontFamily
  }
};

var useStyles = createComponentStyles(styles, {
  name: 'ObjectPageSection'
});
/**
 * <code>import { ObjectPageSection } from '@ui5/webcomponents-react/lib/ObjectPageSection';</code>
 */

var ObjectPageSection = forwardRef(function (props, ref) {
  var title = props.title,
      id = props.id,
      children = props.children,
      titleUppercase = props.titleUppercase,
      className = props.className,
      style = props.style,
      tooltip = props.tooltip;
  var classes = useStyles();

  if (!id) {
    throw new EmptyIdPropException('ObjectPageSection requires a unique ID property!');
  }

  var sectionRef = useConsolidatedRef(ref);
  var htmlId = "ObjectPageSection-".concat(id);
  useScrollElement(htmlId, sectionRef, {
    spy: true
  });
  var titleClasses = StyleClassHelper.of(classes.title);

  if (titleUppercase) {
    titleClasses.put(classes.uppercase);
  }

  var passThroughProps = usePassThroughHtmlProps(props, ['id']);
  return /*#__PURE__*/React.createElement("section", _extends({
    ref: sectionRef,
    role: "region",
    className: className,
    style: style,
    title: tooltip
  }, passThroughProps, {
    id: htmlId,
    "data-component-name": "ObjectPageSection"
  }), /*#__PURE__*/React.createElement("div", {
    role: "heading",
    className: classes.header
  }, /*#__PURE__*/React.createElement("div", {
    className: titleClasses.valueOf()
  }, title)), /*#__PURE__*/React.createElement("div", {
    className: classes.sectionContent
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.sectionContentInner
  }, children)));
});
ObjectPageSection.defaultProps = {
  title: '',
  // @ts-ignore
  isSection: true,
  titleUppercase: true
};
ObjectPageSection.displayName = 'ObjectPageSection';

export { ObjectPageSection };
//# sourceMappingURL=ObjectPageSection.js.map
