import _extends from '@babel/runtime/helpers/extends';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';
import { useDeprecateRenderMethods } from '@ui5/webcomponents-react-base/lib/hooks';
import { Button } from '@ui5/webcomponents-react/lib/Button';
import { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';
import React, { forwardRef, useState, useCallback } from 'react';
import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';
import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';

var styles = {
  outerContainer: {
    paddingTop: '0.5rem',
    paddingLeft: '2rem',
    paddingRight: '2rem',
    paddingBottom: '1px',
    background: ThemingParameters.sapObjectHeader_Background,
    boxShadow: ThemingParameters.sapContent_HeaderShadow
  },
  filterBarHeader: {
    alignItems: 'center',
    display: 'flex',
    background: ThemingParameters.sapObjectHeader_Background,
    minHeight: '3rem',
    paddingBottom: '0.5rem',
    boxShadow: 'none',
    flexWrap: 'wrap'
  },
  vLine: {
    borderLeft: '1px solid gray',
    paddingLeft: '0.5rem'
  },
  filterArea: {
    display: 'flex',
    flexWrap: 'wrap',
    paddingTop: '1rem',
    paddingBottom: '1rem',
    background: ThemingParameters.sapObjectHeader_Background,
    transition: 'max-height 0.2s ease-out, opacity 0.2s ease-in'
  },
  filterAreaClosed: {
    maxHeight: '0',
    opacity: 0,
    padding: 0,
    overflowY: 'auto'
  },
  filterAreaOpen: {
    maxHeight: '500px',
    opacity: 1,
    overflowY: 'auto'
  },
  headerRowRight: {
    display: 'flex',
    justifyContent: 'flex-end',
    flexGrow: 1
  },
  // is being applied to the span which represents the InfoLabel Text
  label: {
    fontSize: ThemingParameters.sapFontSmallSize,
    fontFamily: ThemingParameters.sapFontFamily,
    lineHeight: '1.125rem',
    fontWeight: 600,
    letterSpacing: '0.0125rem',
    textTransform: 'uppercase',
    textAlign: 'center',
    verticalAlign: 'top',
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    display: 'inline-block',
    color: ThemingParameters.sapTextColor
  },
  // specific padding needed for purely numeric input
  numeric: {},
  // specific padding needed for text input
  text: {},
  // displayOnly mode
  displayOnly: {}
};

var useStyles = createComponentStyles(styles, {
  name: 'FilterBar'
});
/**
 * <code>import { FilterBar } from '@ui5/webcomponents-react/lib/FilterBar';</code>
 */

var FilterBar = forwardRef(function (props, ref) {
  var _ref = props,
      children = _ref.children;

  var _useState = useState(true),
      _useState2 = _slicedToArray(_useState, 2),
      showFilters = _useState2[0],
      setShowFilters = _useState2[1];

  var search = useDeprecateRenderMethods(props, 'renderSearch', 'search');
  var variants = useDeprecateRenderMethods(props, 'renderVariants', 'variants');
  var classes = useStyles();
  var handleHideFilterBar = useCallback(function () {
    setShowFilters(!showFilters);
  }, [showFilters]);
  var filterAreaClasses = StyleClassHelper.of(classes.filterArea);

  if (showFilters) {
    filterAreaClasses.put(classes.filterAreaOpen);
  } else {
    filterAreaClasses.put(classes.filterAreaClosed);
  }

  var passThroughProps = usePassThroughHtmlProps(props);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: classes.outerContainer
  }, passThroughProps), /*#__PURE__*/React.createElement("div", {
    className: classes.filterBarHeader
  }, variants, search && /*#__PURE__*/React.createElement("div", {
    className: classes.vLine
  }, " ", search, " "), /*#__PURE__*/React.createElement("div", {
    className: classes.headerRowRight
  }, /*#__PURE__*/React.createElement(Button, {
    onClick: handleHideFilterBar,
    design: ButtonDesign.Transparent
  }, showFilters ? 'Hide Filter Bar' : 'Show Filter Bar'))), /*#__PURE__*/React.createElement("div", {
    className: filterAreaClasses.valueOf()
  }, children));
});
FilterBar.displayName = 'FilterBar';

export { FilterBar };
//# sourceMappingURL=FilterBar.js.map
