{"version":3,"file":"TextArea.js","sources":["../src/webComponents/TextArea/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/TextArea';\nimport React, { FC, ReactNode } from 'react';\nimport { WithWebComponentPropTypes } from '../../internal/withWebComponent';\n\nexport interface TextAreaPropTypes extends Omit<WithWebComponentPropTypes, 'onChange' | 'onInput'> {\n  /**\n   * Indicates whether the user can interact with the component or not. <br><br> <b>Note:</b> Disabled components cannot be focused and they are out of the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Enables the <code>ui5-textarea</code> to automatically grow and shrink dynamically with its content. <br><br> <b>Note:</b> If set to <code>true</code>, the CSS <code>height</code> property is ignored.\n   */\n  growing?: boolean;\n  /**\n   * Defines the maximum number of lines that the Web Component can grow.\n   */\n  growingMaxLines?: number;\n  /**\n   * Defines the maximum number of characters that the <code>value</code> can have.\n   */\n  maxlength?: number;\n  /**\n   * Determines the name with which the <code>ui5-textarea</code> will be submitted in an HTML form.<br/><br/>\n   *\n   * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project: <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code><br/><br/>\n   *\n   * <b>Note:</b> When set, a native <code>input</code> HTML element will be created inside the <code>ui5-textarea</code> so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines a short hint intended to aid the user with data entry when the component has no value.\n   */\n  placeholder?: string;\n  /**\n   * Defines whether the <code>ui5-textarea</code> is read-only. <br><br> <b>Note:</b> A read-only <code>ui5-textarea</code> is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines whether the <code>ui5-textarea</code> is required.\n   */\n  required?: boolean;\n  /**\n   * Defines the number of visible text lines for the component. <br><br> <b>Notes:</b> <ul> <li>If the <code>growing</code> property is enabled, this property defines the minimum rows to be displayed in the textarea.</li> <li>The CSS <code>height</code> property wins over the <code>rows</code> property, if both are set.</li> </ul>\n   */\n  rows?: number;\n  /**\n   * Determines whether the characters exceeding the maximum allowed character count are visible in the <code>ui5-textarea</code>. <br><br> If set to <code>false</code>, the user is not allowed to enter more characters than what is set in the <code>maxlength</code> property. If set to <code>true</code> the characters exceeding the <code>maxlength</code> value are selected on paste and the counter below the <code>ui5-textarea</code> displays their number.\n   */\n  showExceededText?: boolean;\n  /**\n   * Defines the value of the Web Component.\n   */\n  value?: string;\n  /**\n   * Defines the value state of the <code>ui5-textarea</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> <li><code>Success</code></li> <li><code>Information</code></li> </ul> <br><br> <b>Note:</b> If <code>maxlength</code> property is set, the component turns into \"Warning\" state once the characters exceeds the limit. In this case, only the \"Error\" state is considered and can be applied.\n   */\n  valueState?: ValueState;\n  /**\n   * Defines the value state message that will be displayed as pop up under the <code>ui5-textarea</code>.<br/><br/>\n   *\n   * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.<br/><br/>\n   *\n   * <b>Note:</b> The <code>valueStateMessage</code> would be displayed if the <code>ui5-textarea</code> has <code>valueState</code> of type <code>Information</code>, <code>Warning</code> or <code>Error</code>.\n   */\n  valueStateMessage?: ReactNode | ReactNode[];\n  /**\n   * Fired when the text has changed and the focus leaves the <code>ui5-textarea</code>.\n   */\n  onChange?: (event: CustomEvent<{}>) => void;\n  /**\n   * Fired when the value of the <code>ui5-textarea</code> changes at each keystroke or when something is pasted.\n   */\n  onInput?: (event: CustomEvent<{}>) => void;\n}\n\n/**\n * <code>import { TextArea } from '@ui5/webcomponents-react/lib/TextArea';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/TextArea\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst TextArea: FC<TextAreaPropTypes> = withWebComponent<TextAreaPropTypes>(\n  'ui5-textarea',\n  ['growingMaxLines', 'maxlength', 'name', 'placeholder', 'rows', 'value', 'valueState'],\n  ['disabled', 'growing', 'readonly', 'required', 'showExceededText'],\n  ['valueStateMessage'],\n  ['change', 'input']\n);\n\nTextArea.displayName = 'TextArea';\n\nTextArea.defaultProps = {\n  disabled: false,\n  growing: false,\n  growingMaxLines: 0,\n  maxlength: null,\n  readonly: false,\n  required: false,\n  rows: 0,\n  showExceededText: false,\n  valueState: ValueState.None\n};\n\nexport { TextArea };\n"],"names":["TextArea","withWebComponent","displayName","defaultProps","disabled","growing","growingMaxLines","maxlength","readonly","required","rows","showExceededText","valueState","ValueState","None"],"mappings":";;;;AA6EA;;;;;IAKMA,QAA+B,GAAGC,gBAAgB,CACtD,cADsD,EAEtD,CAAC,iBAAD,EAAoB,WAApB,EAAiC,MAAjC,EAAyC,aAAzC,EAAwD,MAAxD,EAAgE,OAAhE,EAAyE,YAAzE,CAFsD,EAGtD,CAAC,UAAD,EAAa,SAAb,EAAwB,UAAxB,EAAoC,UAApC,EAAgD,kBAAhD,CAHsD,EAItD,CAAC,mBAAD,CAJsD,EAKtD,CAAC,QAAD,EAAW,OAAX,CALsD;AAQxDD,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEAF,QAAQ,CAACG,YAAT,GAAwB;AACtBC,EAAAA,QAAQ,EAAE,KADY;AAEtBC,EAAAA,OAAO,EAAE,KAFa;AAGtBC,EAAAA,eAAe,EAAE,CAHK;AAItBC,EAAAA,SAAS,EAAE,IAJW;AAKtBC,EAAAA,QAAQ,EAAE,KALY;AAMtBC,EAAAA,QAAQ,EAAE,KANY;AAOtBC,EAAAA,IAAI,EAAE,CAPgB;AAQtBC,EAAAA,gBAAgB,EAAE,KARI;AAStBC,EAAAA,UAAU,EAAEC,UAAU,CAACC;AATD,CAAxB;;;;"}