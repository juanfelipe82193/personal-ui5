{"version":3,"file":"Form.js","sources":["../src/components/Form/Form.jss.ts","../src/components/Form/index.tsx"],"sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst styles = {\n  formTitle: {\n    borderBottom: `1px solid ${ThemingParameters.sapGroup_TitleBorderColor}`,\n    marginBottom: '2rem'\n  }\n};\n\nexport { styles };\n","import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/lib/useViewportRange';\nimport { CurrentViewportRangeContext } from '@ui5/webcomponents-react/lib/CurrentViewportRangeContext';\nimport { FormGroup } from '@ui5/webcomponents-react/lib/FormGroup';\nimport { Grid } from '@ui5/webcomponents-react/lib/Grid';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport React, { FC, forwardRef, ReactElement, Ref, useMemo } from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { styles } from './Form.jss';\n\nexport interface FormPropTypes extends CommonProps {\n  /**\n   * Components that are placed into Form.\n   */\n  children: ReactElement<unknown> | Array<ReactElement<unknown>>;\n  /**\n   * Form title\n   */\n  title?: string;\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'Form' });\n\n/**\n * <code>import { Form } from '@ui5/webcomponents-react/lib/Form';</code>\n */\nconst Form: FC<FormPropTypes> = forwardRef((props: FormPropTypes, ref: Ref<HTMLDivElement>) => {\n  const { title, children, className, slot, style, tooltip } = props;\n\n  const classes = useStyles();\n  const currentRange = useViewportRange('StdExt');\n\n  const [formGroups, updatedTitle] = useMemo(() => {\n    let formGroups: any;\n    let updatedTitle: string = title;\n\n    // check if ungrouped FormItems exist amongst the Form's children and put them into an artificial FormGroup\n    if (Array.isArray(children)) {\n      const ungroupedItems = [];\n      formGroups = [];\n      children.forEach((child: any) => {\n        if (child.type.displayName === 'FormItem') {\n          ungroupedItems.push(child);\n        } else if (child.type.displayName === 'FormGroup') {\n          formGroups.push(child as ReactElement);\n        }\n      });\n\n      if (ungroupedItems.length > 0) {\n        formGroups.push(<FormGroup>{ungroupedItems}</FormGroup>);\n      }\n    } else {\n      // check if a sole Form's group has a Title and take it as Form Title if one does not exist\n      const childProps = (children as ReactElement).props;\n      if ((!title || title.length === 0) && childProps.title && childProps.title.length > 0) {\n        updatedTitle = childProps.title;\n        formGroups = React.cloneElement(children as ReactElement, { title: null });\n      } else {\n        formGroups = children;\n      }\n    }\n\n    return [formGroups, updatedTitle];\n  }, [children]);\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <CurrentViewportRangeContext.Provider value={currentRange}>\n      {updatedTitle && (\n        <Title level={TitleLevel.H3} className={classes.formTitle}>\n          {updatedTitle}\n        </Title>\n      )}\n      <Grid\n        ref={ref}\n        defaultSpan={'XL6 L12 M12 S12'}\n        className={className}\n        slot={slot}\n        style={style}\n        tooltip={tooltip}\n        {...passThroughProps}\n      >\n        {formGroups}\n      </Grid>\n    </CurrentViewportRangeContext.Provider>\n  );\n});\n\nForm.displayName = 'Form';\n\nexport { Form };\n"],"names":["styles","formTitle","borderBottom","ThemingParameters","sapGroup_TitleBorderColor","marginBottom","useStyles","createComponentStyles","name","Form","forwardRef","props","ref","title","children","className","slot","style","tooltip","classes","currentRange","useViewportRange","useMemo","formGroups","updatedTitle","Array","isArray","ungroupedItems","forEach","child","type","displayName","push","length","childProps","React","cloneElement","passThroughProps","usePassThroughHtmlProps","TitleLevel","H3"],"mappings":"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"}