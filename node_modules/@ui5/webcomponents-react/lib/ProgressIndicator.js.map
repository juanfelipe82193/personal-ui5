{"version":3,"file":"ProgressIndicator.js","sources":["../src/components/ProgressIndicator/ProgressIndicator.jss.ts","../src/components/ProgressIndicator/index.tsx"],"sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst styles = {\n  progressBarRemaining: {\n    height: '100%',\n    flexGrow: '1',\n    minWidth: '0',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  progressBarTextRight: {\n    marginLeft: '0.375rem'\n  },\n  progressBarTextLeft: {\n    marginRight: '0.375rem'\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'row',\n    WebkitFlexDirection: 'row',\n    boxSizing: 'border-box',\n    outline: 'none',\n    background: ThemingParameters.sapField_Background,\n    width: '100%',\n    height: CssSizeVariables.sapWcrProgressIndicatorHeight,\n    minWidth: '4rem',\n    minHeight: '1rem',\n    padding: '0',\n    margin: CssSizeVariables.sapWcrProgressIndicatorMargin,\n    border: `1px solid ${ThemingParameters.sapField_BorderColor}`,\n    borderRadius: '0.5rem',\n    overflow: 'hidden'\n  },\n  progressbar: {\n    transition: 'flex-basis 1s',\n    justifyContent: 'flex-end',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  progressBarText: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSmallSize,\n    fontWeight: 'normal'\n  },\n  progressBarTextColorLow: {\n    color: ThemingParameters.sapTextColor\n  },\n  progressBarTextColorHigh: {\n    color: ThemingParameters.sapContent_ContrastTextColor\n  },\n  stateNone: {\n    backgroundColor: ThemingParameters.sapNeutralElementColor\n  },\n  stateSuccess: {\n    backgroundColor: ThemingParameters.sapPositiveElementColor\n  },\n  stateWarning: {\n    backgroundColor: ThemingParameters.sapCriticalElementColor\n  },\n  stateError: {\n    backgroundColor: ThemingParameters.sapNegativeElementColor\n  },\n  stateInformation: {\n    backgroundColor: ThemingParameters.sapInformativeElementColor\n  }\n};\n\nexport default styles;\n","import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport React, { FC, forwardRef, Ref, useMemo } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport styles from './ProgressIndicator.jss';\n\nexport interface ProgressIndicatorPropTypes extends CommonProps {\n  /*\n   * Percent value to be used\n   */\n  percentValue?: number;\n  /*\n   * Value to be displayed\n   */\n  displayValue?: string;\n\n  /*\n   * Specified width of component\n   */\n  width?: string;\n\n  /*\n   * Specified height of component\n   */\n  height?: string;\n\n  /*\n   * State of indicator (using ValueState)\n   */\n  state?: ValueState;\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'ProgressIndicator' });\n\n/**\n * <code>import { ProgressIndicator } from '@ui5/webcomponents-react/lib/ProgressIndicator';</code>\n */\nconst ProgressIndicator: FC<ProgressIndicatorPropTypes> = forwardRef(\n  (props: ProgressIndicatorPropTypes, ref: Ref<HTMLDivElement>) => {\n    const { percentValue, displayValue, width, height, className, style, tooltip, state, slot } = props;\n\n    const classes = useStyles();\n\n    // CSS classes\n    const wrapperClasses = StyleClassHelper.of(classes.wrapper);\n    const progressBarClasses = StyleClassHelper.of(classes.progressbar);\n    const progressBarTextClasses = StyleClassHelper.of(classes.progressBarText);\n\n    const progressBarStyle = { flexBasis: `${percentValue}%` };\n\n    // change text color based on percent value\n    if (percentValue <= 50) {\n      progressBarTextClasses.put(classes.progressBarTextColorLow);\n      progressBarTextClasses.put(classes.progressBarTextRight);\n    } else {\n      progressBarTextClasses.put(classes.progressBarTextColorHigh);\n      progressBarTextClasses.put(classes.progressBarTextLeft);\n    }\n\n    const progressBarTextSpan = <span className={progressBarTextClasses.valueOf()}> {displayValue} </span>;\n\n    progressBarClasses.put(classes[`state${state}`]);\n\n    if (className) {\n      wrapperClasses.put(className);\n    }\n\n    const progressBarContainerStyle = useMemo(() => ({ ...style, width, height }), [style, width, height]);\n\n    const passThroughProps = usePassThroughHtmlProps(props);\n\n    return (\n      <div\n        ref={ref}\n        className={wrapperClasses.valueOf()}\n        style={progressBarContainerStyle}\n        title={tooltip}\n        slot={slot}\n        {...passThroughProps}\n      >\n        <div className={progressBarClasses.valueOf()} style={progressBarStyle}>\n          {percentValue <= 50 ? null : progressBarTextSpan}\n        </div>\n        <div className={classes.progressBarRemaining}>{percentValue <= 50 ? progressBarTextSpan : null}</div>\n      </div>\n    );\n  }\n);\n\nProgressIndicator.displayName = 'ProgressIndicator';\n\nProgressIndicator.defaultProps = {\n  percentValue: 0,\n  displayValue: '',\n  width: 'auto',\n  height: '',\n  state: ValueState.None\n};\n\nexport { ProgressIndicator };\n"],"names":["styles","progressBarRemaining","height","flexGrow","minWidth","display","alignItems","progressBarTextRight","marginLeft","progressBarTextLeft","marginRight","wrapper","flexDirection","WebkitFlexDirection","boxSizing","outline","background","ThemingParameters","sapField_Background","width","CssSizeVariables","sapWcrProgressIndicatorHeight","minHeight","padding","margin","sapWcrProgressIndicatorMargin","border","sapField_BorderColor","borderRadius","overflow","progressbar","transition","justifyContent","progressBarText","textOverflow","whiteSpace","fontFamily","sapFontFamily","fontSize","sapFontSmallSize","fontWeight","progressBarTextColorLow","color","sapTextColor","progressBarTextColorHigh","sapContent_ContrastTextColor","stateNone","backgroundColor","sapNeutralElementColor","stateSuccess","sapPositiveElementColor","stateWarning","sapCriticalElementColor","stateError","sapNegativeElementColor","stateInformation","sapInformativeElementColor","useStyles","createComponentStyles","name","ProgressIndicator","forwardRef","props","ref","percentValue","displayValue","className","style","tooltip","state","slot","classes","wrapperClasses","StyleClassHelper","of","progressBarClasses","progressBarTextClasses","progressBarStyle","flexBasis","put","progressBarTextSpan","valueOf","progressBarContainerStyle","useMemo","passThroughProps","usePassThroughHtmlProps","displayName","defaultProps","ValueState","None"],"mappings":"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"}