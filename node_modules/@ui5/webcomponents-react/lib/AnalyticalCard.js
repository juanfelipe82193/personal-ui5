import _extends from '@babel/runtime/helpers/extends';
import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';
import React, { forwardRef, useMemo } from 'react';
import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';
import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';
import { sapUiContentPadding } from '@ui5/webcomponents-react-base/lib/spacing';

var styles = {
  card: {
    backgroundColor: ThemingParameters.sapTile_Background,
    border: "0.0625rem solid ".concat(ThemingParameters.sapTile_BorderColor),
    boxShadow: ThemingParameters.sapContent_Shadow0,
    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,
    textAlign: 'start',
    overflow: 'hidden',
    position: 'relative',
    fontFamily: ThemingParameters.sapFontFamily,
    boxSizing: 'border-box'
  },
  content: sapUiContentPadding
};

var useStyles = createComponentStyles(styles, {
  name: 'AnalyticalCard'
});
/**
 * <code>import { AnalyticalCard } from '@ui5/webcomponents-react/lib/AnalyticalCard';</code>
 */

var AnalyticalCard = forwardRef(function (props, ref) {
  var children = props.children,
      style = props.style,
      className = props.className,
      tooltip = props.tooltip,
      header = props.header,
      width = props.width;
  var classes = useStyles();
  var classNameString = StyleClassHelper.of(classes.card);

  if (className) {
    classNameString.put(className);
  }

  var analyticalCardStyles = useMemo(function () {
    return _objectSpread({
      width: width
    }, style);
  }, [style, width]);
  var passThroughProps = usePassThroughHtmlProps(props);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: classNameString.toString(),
    style: analyticalCardStyles,
    title: tooltip
  }, passThroughProps), header, /*#__PURE__*/React.createElement("div", {
    className: classes.content
  }, children));
});
AnalyticalCard.displayName = 'AnalyticalCard';
AnalyticalCard.defaultProps = {
  width: '20rem',
  header: null
};

export { AnalyticalCard };
//# sourceMappingURL=AnalyticalCard.js.map
