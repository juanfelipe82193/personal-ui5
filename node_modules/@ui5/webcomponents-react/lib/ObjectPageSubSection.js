import _extends from '@babel/runtime/helpers/extends';
import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';
import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';
import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';
import { useScrollElement } from '@ui5/webcomponents-react-base/lib/useScrollElement';
import React, { forwardRef } from 'react';
import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _inherits from '@babel/runtime/helpers/inherits';
import _createSuper from '@babel/runtime/helpers/createSuper';
import _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';

var EmptyIdPropException = /*#__PURE__*/function (_Error) {
  _inherits(EmptyIdPropException, _Error);

  var _super = _createSuper(EmptyIdPropException);

  function EmptyIdPropException(message) {
    var _this;

    _classCallCheck(this, EmptyIdPropException);

    _this = _super.call(this, message);
    _this.name = _this.constructor.name;
    return _this;
  }

  return EmptyIdPropException;
}( /*#__PURE__*/_wrapNativeSuper(Error));

var styles = {
  objectPageSubSection: {
    padding: '1rem 0',
    '&:focus': {
      outline: "1px dotted ".concat(ThemingParameters.sapContent_FocusColor),
      outlineOffset: '-1px'
    }
  },
  objectPageSubSectionHeaderTitle: {
    fontSize: ThemingParameters.sapFontHeader5Size,
    color: ThemingParameters.sapGroup_TitleTextColor,
    marginBottom: '0.5rem'
  },
  subSectionContent: {
    padding: '1rem 2rem 3rem 0'
  }
};
var useStyles = createComponentStyles(styles, {
  name: 'ObjectPageSubSection'
});
/**
 * <code>import { ObjectPageSubSection } from '@ui5/webcomponents-react/lib/ObjectPageSubSection';</code>
 */

var ObjectPageSubSection = forwardRef(function (props, ref) {
  var children = props.children,
      id = props.id,
      title = props.title,
      className = props.className,
      style = props.style,
      tooltip = props.tooltip;

  if (!id) {
    throw new EmptyIdPropException('ObjectPageSubSection requires a unique ID property!');
  }

  var htmlRef = useConsolidatedRef(ref);
  var htmlId = "ObjectPageSubSection-".concat(id);
  useScrollElement(htmlId, htmlRef, {
    spy: false
  });
  var classes = useStyles();
  var subSectionClassName = StyleClassHelper.of(classes.objectPageSubSection);

  if (className) {
    subSectionClassName.put(className);
  }

  var passThroughProps = usePassThroughHtmlProps(props, ['id']);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: htmlRef,
    className: subSectionClassName.toString(),
    role: "region",
    style: style,
    title: tooltip
  }, passThroughProps, {
    id: htmlId,
    "data-component-name": "ObjectPageSubSection"
  }), /*#__PURE__*/React.createElement("div", {
    className: classes.objectPageSubSectionHeaderTitle
  }, title), /*#__PURE__*/React.createElement("div", {
    className: classes.subSectionContent
  }, children));
});
ObjectPageSubSection.defaultProps = {
  title: null,
  // @ts-ignore
  isSubSection: true
};
ObjectPageSubSection.displayName = 'ObjectPageSubSection';

export { ObjectPageSubSection };
//# sourceMappingURL=ObjectPageSubSection.js.map
