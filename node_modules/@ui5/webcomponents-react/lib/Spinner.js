import _extends from '@babel/runtime/helpers/extends';
import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';
import { useI18nBundle } from '@ui5/webcomponents-react-base/lib/hooks';
import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';
import { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';
import { PLEASE_WAIT } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';
import { Size } from '@ui5/webcomponents-react/lib/Size';
import React, { forwardRef, useState, useEffect } from 'react';

var styles = {
  '@keyframes spin': {
    '0%': {
      transform: 'rotate(0deg)'
    },
    '100%': {
      transform: 'rotate(360deg)'
    }
  },
  spinnerSmall: {},
  spinnerMedium: {},
  spinnerLarge: {},
  spinner: {
    '&$spinnerSmall, $spinnerSmall:after': {
      borderRadius: '50%',
      width: '24px',
      height: '24px'
    },
    '&$spinnerMedium, $spinnerMedium:after': {
      borderRadius: '50%',
      width: '40px',
      height: '40px'
    },
    '&$spinnerLarge, $spinnerLarge:after': {
      borderRadius: '50%',
      width: '64px',
      height: '64px'
    },
    margin: 'auto',
    fontSize: '10px',
    position: 'relative',
    textIndent: '-9999em',
    borderTop: '4px solid rgba(54, 64, 81, 0.16)',
    borderRight: '4px solid rgba(54, 64, 81, 0.16)',
    borderBottom: '4px solid rgba(54, 64, 81, 0.16)',
    borderLeft: '4px solid rgba(54, 64, 81, 1)',
    transform: 'translateZ(0)',
    animation: '$spin .8s infinite linear'
  }
};

var useStyles = createComponentStyles(styles, {
  name: 'Spinner'
});
/**
 * <code>import { Spinner } from '@ui5/webcomponents-react/lib/Spinner';</code>
 */

var Spinner = forwardRef(function (props, ref) {
  var className = props.className,
      size = props.size,
      tooltip = props.tooltip,
      slot = props.slot,
      style = props.style,
      delay = props.delay;
  var classes = useStyles();

  var _useState = useState(delay === 0),
      _useState2 = _slicedToArray(_useState, 2),
      isVisible = _useState2[0],
      setIsVisible = _useState2[1];

  var spinnerClasses = StyleClassHelper.of(classes.spinner);

  if (className) {
    spinnerClasses.put(className);
  }

  spinnerClasses.put(classes["spinner".concat(size)]);
  useEffect(function () {
    var timeout;

    if (delay > 0) {
      timeout = setTimeout(function () {
        setIsVisible(true);
      }, delay);
    }

    return function () {
      clearTimeout(timeout);
    };
  }, []);
  var passThroughProps = usePassThroughHtmlProps(props);
  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');

  if (!isVisible) {
    return null;
  }

  return /*#__PURE__*/React.createElement("div", _extends({
    ref: ref,
    className: spinnerClasses.valueOf(),
    "data-component-name": "Spinner",
    "aria-busy": "true",
    role: "progressbar",
    tabIndex: 0,
    "aria-valuemin": 0,
    "aria-valuemax": 100,
    title: tooltip || i18nBundle.getText(PLEASE_WAIT),
    slot: slot,
    style: style
  }, passThroughProps), "Loading...");
});
Spinner.defaultProps = {
  delay: 0,
  size: Size.Medium
};
Spinner.displayName = 'Spinner';

export { Spinner };
//# sourceMappingURL=Spinner.js.map
