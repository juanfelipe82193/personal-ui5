{"version":3,"file":"TabContainer.js","sources":["../src/webComponents/TabContainer/index.tsx"],"sourcesContent":["import { TabContainerTabsPlacement } from '@ui5/webcomponents-react/lib/TabContainerTabsPlacement';\nimport { TabLayout } from '@ui5/webcomponents-react/lib/TabLayout';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/TabContainer';\nimport React, { FC, ReactNode } from 'react';\nimport { WithWebComponentPropTypes } from '../../internal/withWebComponent';\n\nexport interface TabContainerPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines whether the tab content is collapsed.\n   */\n  collapsed?: boolean;\n  /**\n   * Defines whether the tabs are in a fixed state that is not expandable/collapsible by user interaction.\n   */\n  fixed?: boolean;\n  /**\n   * Defines whether the overflow select list is displayed. <br><br> The overflow select list represents a list, where all tab filters are displayed so that it's easier for the user to select a specific tab filter.\n   */\n  showOverflow?: boolean;\n  /**\n   * Defines the alignment of the <code>main text</code> and the <code>additionalText</code> of a tab.<br/><br/>\n   *\n   * <b>Note:</b> The <code>main text</code> and the <code>additionalText</code> would be displayed vertically by defualt, but when set to <code>Inline</code>, they would be displayed horizontally.<br/><br/>\n   *\n   * Available options are: <ul> <li><code>Standard</code></li> <li><code>Inline</code></li> <ul>\n   */\n  tabLayout?: TabLayout;\n  /**\n   * Defines the placement of the tab strip (tab buttons area) relative to the actual tabs' content. <br><br> <b>Note:</b> By default the tab strip is displayed above the tabs' content area and this is the recommended layout for most scenarios. Set to <code>Bottom</code> only when the <code>ui5-tabcontainer</code> is at the bottom of the page and you want the tab strip to act as a menu.\n   */\n  tabsPlacement?: TabContainerTabsPlacement;\n  /**\n   * Defines the tabs. <br><br> <b>Note:</b> Use <code>ui5-tab</code> and <code>ui5-tab-separator</code> for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when a tab is selected.\n   */\n  onTabSelect?: (event: CustomEvent<{ tab: ReactNode; tabIndex: number }>) => void;\n}\n\n/**\n * <code>import { TabContainer } from '@ui5/webcomponents-react/lib/TabContainer';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/TabContainer\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst TabContainer: FC<TabContainerPropTypes> = withWebComponent<TabContainerPropTypes>(\n  'ui5-tabcontainer',\n  ['tabLayout', 'tabsPlacement'],\n  ['collapsed', 'fixed', 'showOverflow'],\n  [],\n  ['tabSelect']\n);\n\nTabContainer.displayName = 'TabContainer';\n\nTabContainer.defaultProps = {\n  collapsed: false,\n  fixed: false,\n  showOverflow: false,\n  tabLayout: TabLayout.Standard,\n  tabsPlacement: TabContainerTabsPlacement.Top\n};\n\nexport { TabContainer };\n"],"names":["TabContainer","withWebComponent","displayName","defaultProps","collapsed","fixed","showOverflow","tabLayout","TabLayout","Standard","tabsPlacement","TabContainerTabsPlacement","Top"],"mappings":";;;;;AA0CA;;;;;IAKMA,YAAuC,GAAGC,gBAAgB,CAC9D,kBAD8D,EAE9D,CAAC,WAAD,EAAc,eAAd,CAF8D,EAG9D,CAAC,WAAD,EAAc,OAAd,EAAuB,cAAvB,CAH8D,EAI9D,EAJ8D,EAK9D,CAAC,WAAD,CAL8D;AAQhED,YAAY,CAACE,WAAb,GAA2B,cAA3B;AAEAF,YAAY,CAACG,YAAb,GAA4B;AAC1BC,EAAAA,SAAS,EAAE,KADe;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,YAAY,EAAE,KAHY;AAI1BC,EAAAA,SAAS,EAAEC,SAAS,CAACC,QAJK;AAK1BC,EAAAA,aAAa,EAAEC,yBAAyB,CAACC;AALf,CAA5B;;;;"}