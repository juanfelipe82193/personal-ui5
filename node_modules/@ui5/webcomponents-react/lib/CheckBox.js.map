{"version":3,"file":"CheckBox.js","sources":["../src/webComponents/CheckBox/index.tsx"],"sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/CheckBox';\nimport React, { FC } from 'react';\nimport { WithWebComponentPropTypes } from '../../internal/withWebComponent';\n\nexport interface CheckBoxPropTypes extends Omit<WithWebComponentPropTypes, 'onChange'> {\n  /**\n   * Defines if the <code>ui5-checkbox</code> is checked. <br><br> <b>Note:</b> The property can be changed with user interaction, either by cliking/tapping on the <code>ui5-checkbox</code>, or by pressing the Enter or Space key.\n   */\n  checked?: boolean;\n  /**\n   * Defines whether the <code>ui5-checkbox</code> is disabled. <br><br> <b>Note:</b> A disabled <code>ui5-checkbox</code> is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Determines the name with which the <code>ui5-checkbox</code> will be submitted in an HTML form.<br/><br/>\n   *\n   * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project: <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code><br/><br/>\n   *\n   * <b>Note:</b> When set, a native <code>input</code> HTML element will be created inside the <code>ui5-checkbox</code> so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form.\n   */\n  name?: string;\n  /**\n   * Defines whether the <code>ui5-checkbox</code> is read-only. <br><br> <b>Note:</b> A red-only <code>ui5-checkbox</code> is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Defines the text of the <code>ui5-checkbox</code>.\n   */\n  text?: string;\n  /**\n   * Defines the value state of the <code>ui5-checkbox</code>. <br><br> <b>Note:</b> Available options are <code>Warning</code>, <code>Error</code>, and <code>None</code> (default).\n   */\n  valueState?: ValueState;\n  /**\n   * Defines whether the <code>ui5-checkbox</code> text wraps when there is not enough space. <br><br> <b>Note:</b> By default, the text truncates when there is not enough space.\n   */\n  wrap?: boolean;\n  /**\n   * Fired when the <code>ui5-checkbox</code> checked state changes.\n   */\n  onChange?: (event: CustomEvent<{}>) => void;\n}\n\n/**\n * <code>import { CheckBox } from '@ui5/webcomponents-react/lib/CheckBox';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/CheckBox\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst CheckBox: FC<CheckBoxPropTypes> = withWebComponent<CheckBoxPropTypes>(\n  'ui5-checkbox',\n  ['name', 'text', 'valueState'],\n  ['checked', 'disabled', 'readonly', 'wrap'],\n  [],\n  ['change']\n);\n\nCheckBox.displayName = 'CheckBox';\n\nCheckBox.defaultProps = {\n  checked: false,\n  disabled: false,\n  readonly: false,\n  valueState: ValueState.None,\n  wrap: false\n};\n\nexport { CheckBox };\n"],"names":["CheckBox","withWebComponent","displayName","defaultProps","checked","disabled","readonly","valueState","ValueState","None","wrap"],"mappings":";;;;AA6CA;;;;;IAKMA,QAA+B,GAAGC,gBAAgB,CACtD,cADsD,EAEtD,CAAC,MAAD,EAAS,MAAT,EAAiB,YAAjB,CAFsD,EAGtD,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,MAApC,CAHsD,EAItD,EAJsD,EAKtD,CAAC,QAAD,CALsD;AAQxDD,QAAQ,CAACE,WAAT,GAAuB,UAAvB;AAEAF,QAAQ,CAACG,YAAT,GAAwB;AACtBC,EAAAA,OAAO,EAAE,KADa;AAEtBC,EAAAA,QAAQ,EAAE,KAFY;AAGtBC,EAAAA,QAAQ,EAAE,KAHY;AAItBC,EAAAA,UAAU,EAAEC,UAAU,CAACC,IAJD;AAKtBC,EAAAA,IAAI,EAAE;AALgB,CAAxB;;;;"}