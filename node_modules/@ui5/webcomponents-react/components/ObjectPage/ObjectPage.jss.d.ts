declare const styles: {
    objectPage: {
        width: string;
        height: string;
        maxHeight: string;
        position: string;
        whiteSpace: string;
        fontFamily: string;
        backgroundColor: string;
        overflowX: string;
        overflowY: string;
        '& section[id*="ObjectPageSection-"] > div[role="heading"]': {
            display: string;
        };
        '& section[id*="ObjectPageSection-"] ~ section[id*="ObjectPageSection-"] > div[role="heading"]': {
            display: string;
        };
    };
    '@global html': {
        [x: string]: string;
    };
    '@global [dir="rtl"]': {
        [x: string]: string;
    };
    iconTabBarMode: {
        '& section[data-component-name="ObjectPageSection"] > div[role="heading"]': {
            display: string;
        };
    };
    noHeader: {
        '& $header': {
            display: string;
        };
        '& $contentHeader': {
            display: string;
        };
    };
    headerCollapsed: {
        '& $contentHeader': {
            display: string;
        };
    };
    header: {
        flexShrink: number;
        backgroundColor: string;
        position: string;
        top: number;
        zIndex: number;
    };
    contentHeader: {
        backgroundColor: string;
        position: string;
        paddingBottom: string;
        maxHeight: string;
        overflow: string;
        paddingLeft: string;
    };
    anchorBar: {
        position: string;
        zIndex: number;
        '--_ui5_tc_header_box_shadow': string;
    };
    titleBar: {
        padding: string;
        display: string;
        position: string;
    };
    container: {
        width: string;
        boxSizing: string;
    };
    title: {
        padding: string;
    };
    subTitle: {
        verticalAlign: string;
        padding: string;
    };
    actions: {
        position: string;
        top: string;
        paddingTop: string;
        zIndex: number;
        right: string;
        left: string;
        display: string;
        float: string;
        verticalAlign: string;
        '& > *': {
            marginLeft: string;
            padding: number;
        };
    };
    titleInHeaderContent: {
        '& $subTitle': {
            padding: string;
        };
        '& $keyInfos': {
            alignSelf: string;
        };
        '& contentHeader': {
            paddingTop: number;
            '& > *': {
                display: string;
                verticalAlign: string;
                '&:not(:first-child)': {
                    marginRight: string;
                    marginBottom: string;
                };
            };
        };
    };
    headerCustomContent: {
        display: string;
        verticalAlign: string;
        '& > *': {
            float: string;
            marginRight: string;
            marginBottom: string;
            lineHeight: string;
        };
        '&:after': {
            clear: string;
        };
    };
    headerCustomContentItem: {
        marginLeft: string;
    };
    headerImage: {
        maxWidth: string;
        maxHeight: string;
        display: string;
        marginRight: string;
        marginBottom: string;
    };
    image: {
        width: string;
        height: string;
    };
    keyInfos: {
        '& > *': {
            marginLeft: string;
        };
        display: string;
        flexDirection: string;
        alignSelf: string;
    };
    avatar: {
        margin: string;
    };
};
export default styles;
