{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getValueByDataKey = getValueByDataKey;\nexports.getDomainOfDataByKey = getDomainOfDataByKey;\nexports.parseDomainOfCategoryAxis = exports.getBandSizeOfAxis = exports.parseSpecifiedDomain = exports.MAX_VALUE_REG = exports.MIN_VALUE_REG = exports.getDomainOfStackGroups = exports.getStackedDataOfItem = exports.getBaseValueOfBar = exports.getCateCoordinateOfBar = exports.getCateCoordinateOfLine = exports.getTicksOfScale = exports.calculateDomainOfTicks = exports.getStackGroupsByAxisId = exports.getStackedData = exports.offsetSign = exports.truncateByDomain = exports.findPositionOfBar = exports.checkDomainOfScale = exports.parseScale = exports.combineEventHandlers = exports.getTicksOfAxis = exports.getCoordinatesOfGrid = exports.isCategoricalAxis = exports.getDomainOfItemsWithSameAxis = exports.parseErrorBarsOfAxis = exports.getDomainOfErrorBars = exports.appendOffsetOfLegend = exports.getBarPosition = exports.getBarSizeList = exports.getLegendProps = exports.getMainColorOfGraphicItem = exports.calculateActiveTickIndex = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _sortBy2 = _interopRequireDefault(require(\"lodash/sortBy\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _upperFirst2 = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _max2 = _interopRequireDefault(require(\"lodash/max\"));\n\nvar _min2 = _interopRequireDefault(require(\"lodash/min\"));\n\nvar _flatMap2 = _interopRequireDefault(require(\"lodash/flatMap\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _rechartsScale = require(\"recharts-scale\");\n\nvar d3Scales = _interopRequireWildcard(require(\"d3-scale\"));\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _DataUtils = require(\"./DataUtils\");\n\nvar _Legend = _interopRequireDefault(require(\"../component/Legend\"));\n\nvar _ReactUtils = require(\"./ReactUtils\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction getValueByDataKey(obj, dataKey, defaultValue) {\n  if ((0, _isNil2[\"default\"])(obj) || (0, _isNil2[\"default\"])(dataKey)) {\n    return defaultValue;\n  }\n\n  if ((0, _DataUtils.isNumOrStr)(dataKey)) {\n    return (0, _get2[\"default\"])(obj, dataKey, defaultValue);\n  }\n\n  if ((0, _isFunction2[\"default\"])(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n}\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\n\nfunction getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = (0, _flatMap2[\"default\"])(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return (0, _DataUtils.isNumber)(entry) || parseFloat(entry);\n    });\n    return domain.length ? [(0, _min2[\"default\"])(domain), (0, _max2[\"default\"])(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  }) : flattenData; // 支持Date类型的x轴\n\n  return validateData.map(function (entry) {\n    return (0, _DataUtils.isNumOrStr)(entry) || entry instanceof Date ? entry : '';\n  });\n}\n\nvar calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if ((0, _DataUtils.mathSign)(cur - before) !== (0, _DataUtils.mathSign)(after - cur)) {\n          var diffInterval = [];\n\n          if ((0, _DataUtils.mathSign)(after - cur) === (0, _DataUtils.mathSign)(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\n\nexports.calculateActiveTickIndex = calculateActiveTickIndex;\n\nvar getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n      displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n}; // TODO: Formated -> Formatted.\n\n\nexports.getMainColorOfGraphicItem = getMainColorOfGraphicItem;\n\nvar getLegendProps = function getLegendProps(_ref2) {\n  var children = _ref2.children,\n      formatedGraphicalItems = _ref2.formatedGraphicalItems,\n      legendWidth = _ref2.legendWidth,\n      legendContent = _ref2.legendContent;\n  var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend[\"default\"].displayName);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref3) {\n      var item = _ref3.item,\n          props = _ref3.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref4) {\n      var item = _ref4.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, _Legend[\"default\"].getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\n\nexports.getLegendProps = getLegendProps;\n\nvar getBarSizeList = function getBarSizeList(_ref5) {\n  var globalSize = _ref5.barSize,\n      _ref5$stackGroups = _ref5.stackGroups,\n      stackGroups = _ref5$stackGroups === void 0 ? {} : _ref5$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return (0, _ReactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: (0, _isNil2[\"default\"])(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Calculate the size of each bar and the gap between two bars\n * @param  {Number} bandSize  The size of each category\n * @param  {sizeList} sizeList  The size of all groups\n * @param  {maxBarSize} maxBarSize The maximum size of bar\n * @return {Number} The size of each bar and the gap between two bars\n */\n\n\nexports.getBarSizeList = getBarSizeList;\n\nvar getBarPosition = function getBarPosition(_ref6) {\n  var barGap = _ref6.barGap,\n      barCategoryGap = _ref6.barCategoryGap,\n      bandSize = _ref6.bandSize,\n      _ref6$sizeList = _ref6.sizeList,\n      sizeList = _ref6$sizeList === void 0 ? [] : _ref6$sizeList,\n      maxBarSize = _ref6.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\n\nexports.getBarPosition = getBarPosition;\n\nvar appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0); // const legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && (0, _DataUtils.isNumber)(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && (0, _DataUtils.isNumber)(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\n\nexports.appendOffsetOfLegend = appendOffsetOfLegend;\n\nvar getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = (0, _ReactUtils.findAllByType)(children, 'ErrorBar').filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return (0, _isNil2[\"default\"])(direction) || (0, _isNil2[\"default\"])(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = (0, _isArray2[\"default\"])(entryValue) ? [(0, _min2[\"default\"])(entryValue), (0, _max2[\"default\"])(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n\nexports.getDomainOfErrorBars = getDomainOfErrorBars;\n\nvar parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\n\nexports.parseErrorBarsOfAxis = parseErrorBarsOfAxis;\n\nvar getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\n\nexports.getDomainOfItemsWithSameAxis = getDomainOfItemsWithSameAxis;\n\nvar isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\n\nexports.isCategoricalAxis = isCategoricalAxis;\n\nvar getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\n\nexports.getCoordinatesOfGrid = getCoordinatesOfGrid;\n\nvar getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? (0, _DataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n\n\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\n\nexports.getTicksOfAxis = getTicksOfAxis;\n\nvar combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if ((0, _isFunction2[\"default\"])(childHandler)) {\n    customizedHandler = childHandler;\n  } else if ((0, _isFunction2[\"default\"])(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if ((0, _isFunction2[\"default\"])(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if ((0, _isFunction2[\"default\"])(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if ((0, _isFunction2[\"default\"])(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\n\nexports.combineEventHandlers = combineEventHandlers;\n\nvar parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if ((0, _isString2[\"default\"])(scale)) {\n    var name = \"scale\".concat((0, _upperFirst2[\"default\"])(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return (0, _isFunction2[\"default\"])(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\n\nexports.parseScale = parseScale;\nvar EPS = 1e-4;\n\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\n\nexports.checkDomainOfScale = checkDomainOfScale;\n\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n\nexports.findPositionOfBar = findPositionOfBar;\n\nvar truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !(0, _DataUtils.isNumber)(domain[0]) || !(0, _DataUtils.isNumber)(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!(0, _DataUtils.isNumber)(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!(0, _DataUtils.isNumber)(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\n\nexports.truncateByDomain = truncateByDomain;\n\nvar offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = (0, _isNaN2[\"default\"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\n\nexports.offsetSign = offsetSign;\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: _d3Shape.stackOffsetExpand,\n  none: _d3Shape.stackOffsetNone,\n  silhouette: _d3Shape.stackOffsetSilhouette,\n  wiggle: _d3Shape.stackOffsetWiggle\n};\n\nvar getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function (d, key) {\n    return Math.max(+getValueByDataKey(d, key, 0), 0);\n  }).order(_d3Shape.stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\n\nexports.getStackedData = getStackedData;\n\nvar getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if ((0, _DataUtils.isNumOrStr)(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[(0, _DataUtils.uniqueId)('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\n\nexports.getStackGroupsByAxisId = getStackGroupsByAxisId;\n\nvar calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [(0, _min2[\"default\"])(ticks), (0, _max2[\"default\"])(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\n\nexports.calculateDomainOfTicks = calculateDomainOfTicks;\n\nvar getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n\n    if (!domain.length) {\n      return null;\n    }\n\n    var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\n\nexports.getTicksOfScale = getTicksOfScale;\n\nvar getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index,\n      dataKey = _ref7.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNil2[\"default\"])(entry[axis.dataKey])) {\n      var matchedTick = (0, _DataUtils.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !(0, _isNil2[\"default\"])(dataKey) ? dataKey : axis.dataKey);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) : null;\n};\n\nexports.getCateCoordinateOfLine = getCateCoordinateOfLine;\n\nvar getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref8) {\n  var axis = _ref8.axis,\n      ticks = _ref8.ticks,\n      offset = _ref8.offset,\n      bandSize = _ref8.bandSize,\n      entry = _ref8.entry,\n      index = _ref8.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\n\nexports.getCateCoordinateOfBar = getCateCoordinateOfBar;\n\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref9) {\n  var numericAxis = _ref9.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\n\nexports.getBaseValueOfBar = getBaseValueOfBar;\n\nvar getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if ((0, _DataUtils.isNumOrStr)(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nexports.getStackedDataOfItem = getStackedDataOfItem;\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [(0, _min2[\"default\"])(entry.concat([result[0]]).filter(_DataUtils.isNumber)), (0, _max2[\"default\"])(entry.concat([result[1]]).filter(_DataUtils.isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\n\nexports.getDomainOfStackGroups = getDomainOfStackGroups;\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MIN_VALUE_REG = MIN_VALUE_REG;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MAX_VALUE_REG = MAX_VALUE_REG;\n\nvar parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!(0, _isArray2[\"default\"])(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\n\n\nexports.parseSpecifiedDomain = parseSpecifiedDomain;\n\nvar getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    var bandWidth = axis.scale.bandwidth();\n\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = (0, _sortBy2[\"default\"])(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\n\nexports.getBandSizeOfAxis = getBandSizeOfAxis;\n\nvar parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if ((0, _isEqual2[\"default\"])(specifiedDomain, (0, _get2[\"default\"])(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\n\nexports.parseDomainOfCategoryAxis = parseDomainOfCategoryAxis;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/recharts/lib/util/ChartUtils.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","getValueByDataKey","getDomainOfDataByKey","parseDomainOfCategoryAxis","getBandSizeOfAxis","parseSpecifiedDomain","MAX_VALUE_REG","MIN_VALUE_REG","getDomainOfStackGroups","getStackedDataOfItem","getBaseValueOfBar","getCateCoordinateOfBar","getCateCoordinateOfLine","getTicksOfScale","calculateDomainOfTicks","getStackGroupsByAxisId","getStackedData","offsetSign","truncateByDomain","findPositionOfBar","checkDomainOfScale","parseScale","combineEventHandlers","getTicksOfAxis","getCoordinatesOfGrid","isCategoricalAxis","getDomainOfItemsWithSameAxis","parseErrorBarsOfAxis","getDomainOfErrorBars","appendOffsetOfLegend","getBarPosition","getBarSizeList","getLegendProps","getMainColorOfGraphicItem","calculateActiveTickIndex","_isEqual2","_interopRequireDefault","require","_sortBy2","_isNaN2","_upperFirst2","_isString2","_isArray2","_max2","_min2","_flatMap2","_isFunction2","_get2","_isNil2","_rechartsScale","d3Scales","_interopRequireWildcard","_d3Shape","_DataUtils","_Legend","_ReactUtils","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","dataKey","defaultValue","isNumOrStr","data","type","filterNil","flattenData","entry","domain","isNumber","parseFloat","Infinity","validateData","map","Date","coordinate","ticks","unsortedTicks","axis","index","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","mathSign","diffInterval","curInRange","min","max","afterInRange","sameInterval","_i","item","_ref","displayName","_item$props","props","stroke","fill","result","_ref2","children","formatedGraphicalItems","legendWidth","legendContent","legendItem","findChildByType","legendData","payload","reduce","_ref3","sectors","concat","iconType","legendType","color","_ref4","_item$props2","hide","inactive","getWithHeight","_ref5","globalSize","barSize","_ref5$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","getDisplayName","indexOf","selfSize","cateId","stackList","_ref6","barGap","barCategoryGap","bandSize","_ref6$sizeList","sizeList","maxBarSize","realBarGap","getPercentValue","useFull","fullBarSize","sum","res","offset","prev","size","newRes","position","_offset","originalSize","legendBox","width","margin","left","right","legendProps","newOffset","box","align","verticalAlign","layout","height","errorBars","findAllByType","errorBarChild","direction","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","domains","tag","hasMin","hasMax","values","isGrid","isAll","scale","duplicateDomain","bandwidth","niceTicks","scaleContent","isCategorical","categoricalDomain","tickCount","defaultHandler","parentHandler","childHandler","customizedHandler","arg1","arg2","arg3","arg4","chartType","scaleBand","realScaleType","scaleLinear","scalePoint","EPS","first","last","barPosition","child","series","m","positive","negative","STACK_OFFSET_MAP","sign","expand","stackOffsetExpand","none","stackOffsetNone","silhouette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","stackItems","offsetType","dataKeys","stack","d","order","stackOrderNone","_items","numericAxisId","reverseStackOrder","reverse","_item$props3","stackId","axisId","parentGroup","hasStack","childGroup","uniqueId","group","g","stackedData","opts","originalDomain","allowDecimals","scaleType","tickValues","getNiceTickValues","_domain","_tickValues","getTickValuesFixedDomain","_ref7","allowDuplicatedCategory","matchedTick","findEntryInArray","_ref8","_ref9","numericAxis","itemIndex","getDomainOfSingle","startIndex","endIndex","s","specifiedDomain","dataDomain","allowDataOverflow","exec","_value","isBar","bandWidth","orderedTicks","calculatedDomain","axisChild"],"mappings":"AAAA;;AAEA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE;;AAA2B,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;;AAE1XK,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,oBAAR,GAA+BA,oBAA/B;AACAH,OAAO,CAACI,yBAAR,GAAoCJ,OAAO,CAACK,iBAAR,GAA4BL,OAAO,CAACM,oBAAR,GAA+BN,OAAO,CAACO,aAAR,GAAwBP,OAAO,CAACQ,aAAR,GAAwBR,OAAO,CAACS,sBAAR,GAAiCT,OAAO,CAACU,oBAAR,GAA+BV,OAAO,CAACW,iBAAR,GAA4BX,OAAO,CAACY,sBAAR,GAAiCZ,OAAO,CAACa,uBAAR,GAAkCb,OAAO,CAACc,eAAR,GAA0Bd,OAAO,CAACe,sBAAR,GAAiCf,OAAO,CAACgB,sBAAR,GAAiChB,OAAO,CAACiB,cAAR,GAAyBjB,OAAO,CAACkB,UAAR,GAAqBlB,OAAO,CAACmB,gBAAR,GAA2BnB,OAAO,CAACoB,iBAAR,GAA4BpB,OAAO,CAACqB,kBAAR,GAA6BrB,OAAO,CAACsB,UAAR,GAAqBtB,OAAO,CAACuB,oBAAR,GAA+BvB,OAAO,CAACwB,cAAR,GAAyBxB,OAAO,CAACyB,oBAAR,GAA+BzB,OAAO,CAAC0B,iBAAR,GAA4B1B,OAAO,CAAC2B,4BAAR,GAAuC3B,OAAO,CAAC4B,oBAAR,GAA+B5B,OAAO,CAAC6B,oBAAR,GAA+B7B,OAAO,CAAC8B,oBAAR,GAA+B9B,OAAO,CAAC+B,cAAR,GAAyB/B,OAAO,CAACgC,cAAR,GAAyBhC,OAAO,CAACiC,cAAR,GAAyBjC,OAAO,CAACkC,yBAAR,GAAoClC,OAAO,CAACmC,wBAAR,GAAmC,KAAK,CAA/6B;;AAEA,IAAIC,SAAS,GAAGC,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAtC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAArC;;AAEA,IAAIE,OAAO,GAAGH,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIG,YAAY,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAzC;;AAEA,IAAII,UAAU,GAAGL,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAvC;;AAEA,IAAIK,SAAS,GAAGN,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAtC;;AAEA,IAAIM,KAAK,GAAGP,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAlC;;AAEA,IAAIO,KAAK,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAlC;;AAEA,IAAIQ,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,gBAAD,CAAR,CAAtC;;AAEA,IAAIS,YAAY,GAAGV,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAzC;;AAEA,IAAIU,KAAK,GAAGX,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAlC;;AAEA,IAAIW,OAAO,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIY,cAAc,GAAGZ,OAAO,CAAC,gBAAD,CAA5B;;AAEA,IAAIa,QAAQ,GAAGC,uBAAuB,CAACd,OAAO,CAAC,UAAD,CAAR,CAAtC;;AAEA,IAAIe,QAAQ,GAAGf,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIgB,UAAU,GAAGhB,OAAO,CAAC,aAAD,CAAxB;;AAEA,IAAIiB,OAAO,GAAGlB,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAApC;;AAEA,IAAIkB,WAAW,GAAGlB,OAAO,CAAC,cAAD,CAAzB;;AAEA,SAASmB,wBAAT,GAAoC;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AAA2BD,EAAAA,wBAAwB,GAAG,SAASA,wBAAT,GAAoC;AAAE,WAAOE,KAAP;AAAe,GAAhF;;AAAkF,SAAOA,KAAP;AAAe;;AAElN,SAASP,uBAAT,CAAiC3D,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACmE,UAAf,EAA2B;AAAE,WAAOnE,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgBD,OAAO,CAACC,GAAD,CAAP,KAAiB,QAAjB,IAA6B,OAAOA,GAAP,KAAe,UAAhE,EAA4E;AAAE,WAAO;AAAE,iBAAWA;AAAb,KAAP;AAA4B;;AAAC,MAAIkE,KAAK,GAAGF,wBAAwB,EAApC;;AAAwC,MAAIE,KAAK,IAAIA,KAAK,CAACE,GAAN,CAAUpE,GAAV,CAAb,EAA6B;AAAE,WAAOkE,KAAK,CAACG,GAAN,CAAUrE,GAAV,CAAP;AAAwB;;AAAC,MAAIsE,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAGlE,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACmE,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBzE,GAAhB,EAAqB;AAAE,QAAIK,MAAM,CAACD,SAAP,CAAiBsE,cAAjB,CAAgCC,IAAhC,CAAqC3E,GAArC,EAA0CyE,GAA1C,CAAJ,EAAoD;AAAE,UAAIG,IAAI,GAAGL,qBAAqB,GAAGlE,MAAM,CAACmE,wBAAP,CAAgCxE,GAAhC,EAAqCyE,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAIG,IAAI,KAAKA,IAAI,CAACP,GAAL,IAAYO,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAExE,QAAAA,MAAM,CAACC,cAAP,CAAsBgE,MAAtB,EAA8BG,GAA9B,EAAmCG,IAAnC;AAA2C,OAAjF,MAAuF;AAAEN,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAczE,GAAG,CAACyE,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBtE,GAApB;;AAAyB,MAAIkE,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACW,GAAN,CAAU7E,GAAV,EAAesE,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;AAE9uB,SAAS1B,sBAAT,CAAgC5C,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACmE,UAAX,GAAwBnE,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,SAAS8E,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFI,kBAAkB,EAAjH;AAAsH;;AAEzJ,SAASA,kBAAT,GAA8B;AAAE,QAAM,IAAIC,SAAJ,CAAc,sIAAd,CAAN;AAA8J;;AAE9L,SAASF,2BAAT,CAAqCG,CAArC,EAAwCC,MAAxC,EAAgD;AAAE,MAAI,CAACD,CAAL,EAAQ;AAAQ,MAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAOE,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAqC,MAAIE,CAAC,GAAGnF,MAAM,CAACD,SAAP,CAAiBqF,QAAjB,CAA0Bd,IAA1B,CAA+BU,CAA/B,EAAkCK,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;AAAwD,MAAIF,CAAC,KAAK,QAAN,IAAkBH,CAAC,CAAClF,WAAxB,EAAqCqF,CAAC,GAAGH,CAAC,CAAClF,WAAF,CAAcwF,IAAlB;AAAwB,MAAIH,CAAC,KAAK,KAAN,IAAeA,CAAC,KAAK,KAAzB,EAAgC,OAAOI,KAAK,CAACC,IAAN,CAAWL,CAAX,CAAP;AAAsB,MAAIA,CAAC,KAAK,WAAN,IAAqB,2CAA2CM,IAA3C,CAAgDN,CAAhD,CAAzB,EAA6E,OAAOD,iBAAiB,CAACF,CAAD,EAAIC,MAAJ,CAAxB;AAAsC;;AAEha,SAASL,gBAAT,CAA0Bc,IAA1B,EAAgC;AAAE,MAAI,OAAO9F,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAP,IAAmBG,MAAM,CAAC0F,IAAD,CAA9D,EAAsE,OAAOH,KAAK,CAACC,IAAN,CAAWE,IAAX,CAAP;AAA0B;;AAElI,SAASf,kBAAT,CAA4BD,GAA5B,EAAiC;AAAE,MAAIa,KAAK,CAACI,OAAN,CAAcjB,GAAd,CAAJ,EAAwB,OAAOQ,iBAAiB,CAACR,GAAD,CAAxB;AAAgC;;AAE3F,SAASQ,iBAAT,CAA2BR,GAA3B,EAAgCkB,GAAhC,EAAqC;AAAE,MAAIA,GAAG,IAAI,IAAP,IAAeA,GAAG,GAAGlB,GAAG,CAACmB,MAA7B,EAAqCD,GAAG,GAAGlB,GAAG,CAACmB,MAAV;;AAAkB,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG,IAAIR,KAAJ,CAAUK,GAAV,CAAvB,EAAuCE,CAAC,GAAGF,GAA3C,EAAgDE,CAAC,EAAjD,EAAqD;AAAEC,IAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUpB,GAAG,CAACoB,CAAD,CAAb;AAAmB;;AAAC,SAAOC,IAAP;AAAc;;AAEvL,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGnG,MAAM,CAACmG,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIjG,MAAM,CAACoG,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGrG,MAAM,CAACoG,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOvG,MAAM,CAACmE,wBAAP,CAAgC8B,MAAhC,EAAwCM,GAAxC,EAA6CC,UAApD;AAAiE,KAAjG,CAAV;AAA8GL,IAAAA,IAAI,CAACM,IAAL,CAAUC,KAAV,CAAgBP,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASQ,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGe,SAAS,CAAChB,MAA9B,EAAsCC,CAAC,EAAvC,EAA2C;AAAE,QAAIgB,MAAM,GAAGD,SAAS,CAACf,CAAD,CAAT,IAAgB,IAAhB,GAAuBe,SAAS,CAACf,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEE,MAAAA,OAAO,CAAChG,MAAM,CAAC8G,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAU3C,GAAV,EAAe;AAAE4C,QAAAA,eAAe,CAACJ,MAAD,EAASxC,GAAT,EAAc0C,MAAM,CAAC1C,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAIpE,MAAM,CAACiH,yBAAX,EAAsC;AAAEjH,MAAAA,MAAM,CAACkH,gBAAP,CAAwBN,MAAxB,EAAgC5G,MAAM,CAACiH,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEd,MAAAA,OAAO,CAAChG,MAAM,CAAC8G,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAU3C,GAAV,EAAe;AAAEpE,QAAAA,MAAM,CAACC,cAAP,CAAsB2G,MAAtB,EAA8BxC,GAA9B,EAAmCpE,MAAM,CAACmE,wBAAP,CAAgC2C,MAAhC,EAAwC1C,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAOwC,MAAP;AAAgB;;AAEthB,SAASI,eAAT,CAAyBrH,GAAzB,EAA8ByE,GAA9B,EAAmCjE,KAAnC,EAA0C;AAAE,MAAIiE,GAAG,IAAIzE,GAAX,EAAgB;AAAEK,IAAAA,MAAM,CAACC,cAAP,CAAsBN,GAAtB,EAA2ByE,GAA3B,EAAgC;AAAEjE,MAAAA,KAAK,EAAEA,KAAT;AAAgBqG,MAAAA,UAAU,EAAE,IAA5B;AAAkCW,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEzH,IAAAA,GAAG,CAACyE,GAAD,CAAH,GAAWjE,KAAX;AAAmB;;AAAC,SAAOR,GAAP;AAAa;;AAEjN,SAASS,iBAAT,CAA2BT,GAA3B,EAAgC0H,OAAhC,EAAyCC,YAAzC,EAAuD;AACrD,MAAI,CAAC,GAAGnE,OAAO,CAAC,SAAD,CAAX,EAAwBxD,GAAxB,KAAgC,CAAC,GAAGwD,OAAO,CAAC,SAAD,CAAX,EAAwBkE,OAAxB,CAApC,EAAsE;AACpE,WAAOC,YAAP;AACD;;AAED,MAAI,CAAC,GAAG9D,UAAU,CAAC+D,UAAf,EAA2BF,OAA3B,CAAJ,EAAyC;AACvC,WAAO,CAAC,GAAGnE,KAAK,CAAC,SAAD,CAAT,EAAsBvD,GAAtB,EAA2B0H,OAA3B,EAAoCC,YAApC,CAAP;AACD;;AAED,MAAI,CAAC,GAAGrE,YAAY,CAAC,SAAD,CAAhB,EAA6BoE,OAA7B,CAAJ,EAA2C;AACzC,WAAOA,OAAO,CAAC1H,GAAD,CAAd;AACD;;AAED,SAAO2H,YAAP;AACD;AACD;;;;;;;;;;AAUA,SAASjH,oBAAT,CAA8BmH,IAA9B,EAAoCpD,GAApC,EAAyCqD,IAAzC,EAA+CC,SAA/C,EAA0D;AACxD,MAAIC,WAAW,GAAG,CAAC,GAAG3E,SAAS,CAAC,SAAD,CAAb,EAA0BwE,IAA1B,EAAgC,UAAUI,KAAV,EAAiB;AACjE,WAAOxH,iBAAiB,CAACwH,KAAD,EAAQxD,GAAR,CAAxB;AACD,GAFiB,CAAlB;;AAIA,MAAIqD,IAAI,KAAK,QAAb,EAAuB;AACrB,QAAII,MAAM,GAAGF,WAAW,CAACrB,MAAZ,CAAmB,UAAUsB,KAAV,EAAiB;AAC/C,aAAO,CAAC,GAAGpE,UAAU,CAACsE,QAAf,EAAyBF,KAAzB,KAAmCG,UAAU,CAACH,KAAD,CAApD;AACD,KAFY,CAAb;AAGA,WAAOC,MAAM,CAAChC,MAAP,GAAgB,CAAC,CAAC,GAAG9C,KAAK,CAAC,SAAD,CAAT,EAAsB8E,MAAtB,CAAD,EAAgC,CAAC,GAAG/E,KAAK,CAAC,SAAD,CAAT,EAAsB+E,MAAtB,CAAhC,CAAhB,GAAiF,CAACG,QAAD,EAAW,CAACA,QAAZ,CAAxF;AACD;;AAED,MAAIC,YAAY,GAAGP,SAAS,GAAGC,WAAW,CAACrB,MAAZ,CAAmB,UAAUsB,KAAV,EAAiB;AACjE,WAAO,CAAC,CAAC,GAAGzE,OAAO,CAAC,SAAD,CAAX,EAAwByE,KAAxB,CAAR;AACD,GAF8B,CAAH,GAEvBD,WAFL,CAZwD,CActC;;AAElB,SAAOM,YAAY,CAACC,GAAb,CAAiB,UAAUN,KAAV,EAAiB;AACvC,WAAO,CAAC,GAAGpE,UAAU,CAAC+D,UAAf,EAA2BK,KAA3B,KAAqCA,KAAK,YAAYO,IAAtD,GAA6DP,KAA7D,GAAqE,EAA5E;AACD,GAFM,CAAP;AAGD;;AAED,IAAIvF,wBAAwB,GAAG,SAASA,wBAAT,CAAkC+F,UAAlC,EAA8CC,KAA9C,EAAqDC,aAArD,EAAoEC,IAApE,EAA0E;AACvG,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAI5C,GAAG,GAAGyC,KAAK,CAACxC,MAAhB;;AAEA,MAAID,GAAG,GAAG,CAAV,EAAa;AACX,QAAI2C,IAAI,IAAIA,IAAI,CAACE,QAAL,KAAkB,WAA1B,IAAyCC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASJ,IAAI,CAACK,KAAL,CAAW,CAAX,IAAgBL,IAAI,CAACK,KAAL,CAAW,CAAX,CAAzB,IAA0C,GAAnD,KAA2D,IAAxG,EAA8G;AAC5G,UAAIA,KAAK,GAAGL,IAAI,CAACK,KAAjB,CAD4G,CACpF;;AAExB,WAAK,IAAI9C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,YAAI+C,MAAM,GAAG/C,CAAC,GAAG,CAAJ,GAAQwC,aAAa,CAACxC,CAAC,GAAG,CAAL,CAAb,CAAqBsC,UAA7B,GAA0CE,aAAa,CAAC1C,GAAG,GAAG,CAAP,CAAb,CAAuBwC,UAA9E;AACA,YAAIU,GAAG,GAAGR,aAAa,CAACxC,CAAD,CAAb,CAAiBsC,UAA3B;AACA,YAAIW,KAAK,GAAGjD,CAAC,IAAIF,GAAG,GAAG,CAAX,GAAe0C,aAAa,CAAC,CAAD,CAAb,CAAiBF,UAAhC,GAA6CE,aAAa,CAACxC,CAAC,GAAG,CAAL,CAAb,CAAqBsC,UAA9E;AACA,YAAIY,kBAAkB,GAAG,KAAK,CAA9B;;AAEA,YAAI,CAAC,GAAGxF,UAAU,CAACyF,QAAf,EAAyBH,GAAG,GAAGD,MAA/B,MAA2C,CAAC,GAAGrF,UAAU,CAACyF,QAAf,EAAyBF,KAAK,GAAGD,GAAjC,CAA/C,EAAsF;AACpF,cAAII,YAAY,GAAG,EAAnB;;AAEA,cAAI,CAAC,GAAG1F,UAAU,CAACyF,QAAf,EAAyBF,KAAK,GAAGD,GAAjC,MAA0C,CAAC,GAAGtF,UAAU,CAACyF,QAAf,EAAyBL,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAzC,CAA9C,EAA6F;AAC3FI,YAAAA,kBAAkB,GAAGD,KAArB;AACA,gBAAII,UAAU,GAAGL,GAAG,GAAGF,KAAK,CAAC,CAAD,CAAX,GAAiBA,KAAK,CAAC,CAAD,CAAvC;AACAM,YAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBR,IAAI,CAACU,GAAL,CAASD,UAAT,EAAqB,CAACA,UAAU,GAAGN,MAAd,IAAwB,CAA7C,CAAlB;AACAK,YAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBR,IAAI,CAACW,GAAL,CAASF,UAAT,EAAqB,CAACA,UAAU,GAAGN,MAAd,IAAwB,CAA7C,CAAlB;AACD,WALD,MAKO;AACLG,YAAAA,kBAAkB,GAAGH,MAArB;AACA,gBAAIS,YAAY,GAAGP,KAAK,GAAGH,KAAK,CAAC,CAAD,CAAb,GAAmBA,KAAK,CAAC,CAAD,CAA3C;AACAM,YAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBR,IAAI,CAACU,GAAL,CAASN,GAAT,EAAc,CAACQ,YAAY,GAAGR,GAAhB,IAAuB,CAArC,CAAlB;AACAI,YAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBR,IAAI,CAACW,GAAL,CAASP,GAAT,EAAc,CAACQ,YAAY,GAAGR,GAAhB,IAAuB,CAArC,CAAlB;AACD;;AAED,cAAIS,YAAY,GAAG,CAACb,IAAI,CAACU,GAAL,CAASN,GAAT,EAAc,CAACE,kBAAkB,GAAGF,GAAtB,IAA6B,CAA3C,CAAD,EAAgDJ,IAAI,CAACW,GAAL,CAASP,GAAT,EAAc,CAACE,kBAAkB,GAAGF,GAAtB,IAA6B,CAA3C,CAAhD,CAAnB;;AAEA,cAAIV,UAAU,GAAGmB,YAAY,CAAC,CAAD,CAAzB,IAAgCnB,UAAU,IAAImB,YAAY,CAAC,CAAD,CAA1D,IAAiEnB,UAAU,IAAIc,YAAY,CAAC,CAAD,CAA1B,IAAiCd,UAAU,IAAIc,YAAY,CAAC,CAAD,CAAhI,EAAqI;AACnIV,YAAAA,KAAK,GAAGF,aAAa,CAACxC,CAAD,CAAb,CAAiB0C,KAAzB;AACA;AACD;AACF,SArBD,MAqBO;AACL,cAAIY,GAAG,GAAGV,IAAI,CAACU,GAAL,CAASP,MAAT,EAAiBE,KAAjB,CAAV;AACA,cAAIM,GAAG,GAAGX,IAAI,CAACW,GAAL,CAASR,MAAT,EAAiBE,KAAjB,CAAV;;AAEA,cAAIX,UAAU,GAAG,CAACgB,GAAG,GAAGN,GAAP,IAAc,CAA3B,IAAgCV,UAAU,IAAI,CAACiB,GAAG,GAAGP,GAAP,IAAc,CAAhE,EAAmE;AACjEN,YAAAA,KAAK,GAAGF,aAAa,CAACxC,CAAD,CAAb,CAAiB0C,KAAzB;AACA;AACD;AACF;AACF;AACF,KAxCD,MAwCO;AACL;AACA,WAAK,IAAIgB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAG5D,GAAtB,EAA2B4D,EAAE,EAA7B,EAAiC;AAC/B,YAAIA,EAAE,KAAK,CAAP,IAAYpB,UAAU,IAAI,CAACC,KAAK,CAACmB,EAAD,CAAL,CAAUpB,UAAV,GAAuBC,KAAK,CAACmB,EAAE,GAAG,CAAN,CAAL,CAAcpB,UAAtC,IAAoD,CAA9E,IAAmFoB,EAAE,GAAG,CAAL,IAAUA,EAAE,GAAG5D,GAAG,GAAG,CAArB,IAA0BwC,UAAU,GAAG,CAACC,KAAK,CAACmB,EAAD,CAAL,CAAUpB,UAAV,GAAuBC,KAAK,CAACmB,EAAE,GAAG,CAAN,CAAL,CAAcpB,UAAtC,IAAoD,CAA3F,IAAgGA,UAAU,IAAI,CAACC,KAAK,CAACmB,EAAD,CAAL,CAAUpB,UAAV,GAAuBC,KAAK,CAACmB,EAAE,GAAG,CAAN,CAAL,CAAcpB,UAAtC,IAAoD,CAArP,IAA0PoB,EAAE,KAAK5D,GAAG,GAAG,CAAb,IAAkBwC,UAAU,GAAG,CAACC,KAAK,CAACmB,EAAD,CAAL,CAAUpB,UAAV,GAAuBC,KAAK,CAACmB,EAAE,GAAG,CAAN,CAAL,CAAcpB,UAAtC,IAAoD,CAAjV,EAAoV;AAClVI,UAAAA,KAAK,GAAGH,KAAK,CAACmB,EAAD,CAAL,CAAUhB,KAAlB;AACA;AACD;AACF;AACF;AACF,GAlDD,MAkDO;AACLA,IAAAA,KAAK,GAAG,CAAR;AACD;;AAED,SAAOA,KAAP;AACD,CA3DD;AA4DA;;;;;;;AAOAtI,OAAO,CAACmC,wBAAR,GAAmCA,wBAAnC;;AAEA,IAAID,yBAAyB,GAAG,SAASA,yBAAT,CAAmCqH,IAAnC,EAAyC;AACvE,MAAIC,IAAI,GAAGD,IAAX;AAAA,MACIE,WAAW,GAAGD,IAAI,CAACjC,IAAL,CAAUkC,WAD5B,CADuE,CAE9B;;AAEzC,MAAIC,WAAW,GAAGH,IAAI,CAACI,KAAvB;AAAA,MACIC,MAAM,GAAGF,WAAW,CAACE,MADzB;AAAA,MAEIC,IAAI,GAAGH,WAAW,CAACG,IAFvB;AAGA,MAAIC,MAAJ;;AAEA,UAAQL,WAAR;AACE,SAAK,MAAL;AACEK,MAAAA,MAAM,GAAGF,MAAT;AACA;;AAEF,SAAK,MAAL;AACA,SAAK,OAAL;AACEE,MAAAA,MAAM,GAAGF,MAAM,IAAIA,MAAM,KAAK,MAArB,GAA8BA,MAA9B,GAAuCC,IAAhD;AACA;;AAEF;AACEC,MAAAA,MAAM,GAAGD,IAAT;AACA;AAZJ;;AAeA,SAAOC,MAAP;AACD,CAzBD,C,CAyBG;;;AAGH9J,OAAO,CAACkC,yBAAR,GAAoCA,yBAApC;;AAEA,IAAID,cAAc,GAAG,SAASA,cAAT,CAAwB8H,KAAxB,EAA+B;AAClD,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,sBAAsB,GAAGF,KAAK,CAACE,sBADnC;AAAA,MAEIC,WAAW,GAAGH,KAAK,CAACG,WAFxB;AAAA,MAGIC,aAAa,GAAGJ,KAAK,CAACI,aAH1B;AAIA,MAAIC,UAAU,GAAG,CAAC,GAAG5G,WAAW,CAAC6G,eAAhB,EAAiCL,QAAjC,EAA2CzG,OAAO,CAAC,SAAD,CAAP,CAAmBkG,WAA9D,CAAjB;;AAEA,MAAI,CAACW,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AAED,MAAIE,UAAJ;;AAEA,MAAIF,UAAU,CAACT,KAAX,IAAoBS,UAAU,CAACT,KAAX,CAAiBY,OAAzC,EAAkD;AAChDD,IAAAA,UAAU,GAAGF,UAAU,CAACT,KAAX,IAAoBS,UAAU,CAACT,KAAX,CAAiBY,OAAlD;AACD,GAFD,MAEO,IAAIJ,aAAa,KAAK,UAAtB,EAAkC;AACvCG,IAAAA,UAAU,GAAG,CAACL,sBAAsB,IAAI,EAA3B,EAA+BO,MAA/B,CAAsC,UAAUV,MAAV,EAAkBW,KAAlB,EAAyB;AAC1E,UAAIlB,IAAI,GAAGkB,KAAK,CAAClB,IAAjB;AAAA,UACII,KAAK,GAAGc,KAAK,CAACd,KADlB;AAEA,UAAIrC,IAAI,GAAGqC,KAAK,CAACe,OAAN,IAAiBf,KAAK,CAACrC,IAAvB,IAA+B,EAA1C;AACA,aAAOwC,MAAM,CAACa,MAAP,CAAcrD,IAAI,CAACU,GAAL,CAAS,UAAUN,KAAV,EAAiB;AAC7C,eAAO;AACLH,UAAAA,IAAI,EAAE6C,UAAU,CAACT,KAAX,CAAiBiB,QAAjB,IAA6BrB,IAAI,CAACI,KAAL,CAAWkB,UADzC;AAEL5K,UAAAA,KAAK,EAAEyH,KAAK,CAACtC,IAFR;AAGL0F,UAAAA,KAAK,EAAEpD,KAAK,CAACmC,IAHR;AAILU,UAAAA,OAAO,EAAE7C;AAJJ,SAAP;AAMD,OAPoB,CAAd,CAAP;AAQD,KAZY,EAYV,EAZU,CAAb;AAaD,GAdM,MAcA;AACL4C,IAAAA,UAAU,GAAG,CAACL,sBAAsB,IAAI,EAA3B,EAA+BjC,GAA/B,CAAmC,UAAU+C,KAAV,EAAiB;AAC/D,UAAIxB,IAAI,GAAGwB,KAAK,CAACxB,IAAjB;AACA,UAAIyB,YAAY,GAAGzB,IAAI,CAACI,KAAxB;AAAA,UACIxC,OAAO,GAAG6D,YAAY,CAAC7D,OAD3B;AAAA,UAEI/B,IAAI,GAAG4F,YAAY,CAAC5F,IAFxB;AAAA,UAGIyF,UAAU,GAAGG,YAAY,CAACH,UAH9B;AAAA,UAIII,IAAI,GAAGD,YAAY,CAACC,IAJxB;AAKA,aAAO;AACLC,QAAAA,QAAQ,EAAED,IADL;AAEL9D,QAAAA,OAAO,EAAEA,OAFJ;AAGLI,QAAAA,IAAI,EAAE6C,UAAU,CAACT,KAAX,CAAiBiB,QAAjB,IAA6BC,UAA7B,IAA2C,QAH5C;AAILC,QAAAA,KAAK,EAAE5I,yBAAyB,CAACqH,IAAD,CAJ3B;AAKLtJ,QAAAA,KAAK,EAAEmF,IAAI,IAAI+B,OALV;AAMLoD,QAAAA,OAAO,EAAEhB,IAAI,CAACI;AANT,OAAP;AAQD,KAfY,CAAb;AAgBD;;AAED,SAAOlD,aAAa,CAAC,EAAD,EAAK2D,UAAU,CAACT,KAAhB,EAAuB,EAAvB,EAA2BpG,OAAO,CAAC,SAAD,CAAP,CAAmB4H,aAAnB,CAAiCf,UAAjC,EAA6CF,WAA7C,CAA3B,EAAsF;AACxGK,IAAAA,OAAO,EAAED,UAD+F;AAExGf,IAAAA,IAAI,EAAEa;AAFkG,GAAtF,CAApB;AAID,CApDD;AAqDA;;;;;;;AAOApK,OAAO,CAACiC,cAAR,GAAyBA,cAAzB;;AAEA,IAAID,cAAc,GAAG,SAASA,cAAT,CAAwBoJ,KAAxB,EAA+B;AAClD,MAAIC,UAAU,GAAGD,KAAK,CAACE,OAAvB;AAAA,MACIC,iBAAiB,GAAGH,KAAK,CAACI,WAD9B;AAAA,MAEIA,WAAW,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,EAA/B,GAAoCA,iBAFtD;;AAIA,MAAI,CAACC,WAAL,EAAkB;AAChB,WAAO,EAAP;AACD;;AAED,MAAI1B,MAAM,GAAG,EAAb;AACA,MAAI2B,cAAc,GAAG3L,MAAM,CAACmG,IAAP,CAAYuF,WAAZ,CAArB;;AAEA,OAAK,IAAI5F,CAAC,GAAG,CAAR,EAAWF,GAAG,GAAG+F,cAAc,CAAC9F,MAArC,EAA6CC,CAAC,GAAGF,GAAjD,EAAsDE,CAAC,EAAvD,EAA2D;AACzD,QAAI8F,GAAG,GAAGF,WAAW,CAACC,cAAc,CAAC7F,CAAD,CAAf,CAAX,CAA+B4F,WAAzC;AACA,QAAIG,QAAQ,GAAG7L,MAAM,CAACmG,IAAP,CAAYyF,GAAZ,CAAf;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGF,QAAQ,CAAChG,MAAhC,EAAwCiG,CAAC,GAAGC,IAA5C,EAAkDD,CAAC,EAAnD,EAAuD;AACrD,UAAIE,eAAe,GAAGJ,GAAG,CAACC,QAAQ,CAACC,CAAD,CAAT,CAAzB;AAAA,UACIG,KAAK,GAAGD,eAAe,CAACC,KAD5B;AAAA,UAEIC,UAAU,GAAGF,eAAe,CAACE,UAFjC;AAGA,UAAIC,QAAQ,GAAGF,KAAK,CAAC3F,MAAN,CAAa,UAAUmD,IAAV,EAAgB;AAC1C,eAAO,CAAC,GAAG/F,WAAW,CAAC0I,cAAhB,EAAgC3C,IAAI,CAAChC,IAArC,EAA2C4E,OAA3C,CAAmD,KAAnD,KAA6D,CAApE;AACD,OAFc,CAAf;;AAIA,UAAIF,QAAQ,IAAIA,QAAQ,CAACtG,MAAzB,EAAiC;AAC/B,YAAIyG,QAAQ,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYtC,KAAZ,CAAkB2B,OAAjC;AACA,YAAIe,MAAM,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYtC,KAAZ,CAAkBqC,UAAlB,CAAb;;AAEA,YAAI,CAAClC,MAAM,CAACuC,MAAD,CAAX,EAAqB;AACnBvC,UAAAA,MAAM,CAACuC,MAAD,CAAN,GAAiB,EAAjB;AACD;;AAEDvC,QAAAA,MAAM,CAACuC,MAAD,CAAN,CAAe9F,IAAf,CAAoB;AAClBgD,UAAAA,IAAI,EAAE0C,QAAQ,CAAC,CAAD,CADI;AAElBK,UAAAA,SAAS,EAAEL,QAAQ,CAAC9G,KAAT,CAAe,CAAf,CAFO;AAGlBmG,UAAAA,OAAO,EAAE,CAAC,GAAGrI,OAAO,CAAC,SAAD,CAAX,EAAwBmJ,QAAxB,IAAoCf,UAApC,GAAiDe;AAHxC,SAApB;AAKD;AACF;AACF;;AAED,SAAOtC,MAAP;AACD,CA1CD;AA2CA;;;;;;;;;AASA9J,OAAO,CAACgC,cAAR,GAAyBA,cAAzB;;AAEA,IAAID,cAAc,GAAG,SAASA,cAAT,CAAwBwK,KAAxB,EAA+B;AAClD,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,cAAc,GAAGF,KAAK,CAACE,cAD3B;AAAA,MAEIC,QAAQ,GAAGH,KAAK,CAACG,QAFrB;AAAA,MAGIC,cAAc,GAAGJ,KAAK,CAACK,QAH3B;AAAA,MAIIA,QAAQ,GAAGD,cAAc,KAAK,KAAK,CAAxB,GAA4B,EAA5B,GAAiCA,cAJhD;AAAA,MAKIE,UAAU,GAAGN,KAAK,CAACM,UALvB;AAMA,MAAInH,GAAG,GAAGkH,QAAQ,CAACjH,MAAnB;AACA,MAAID,GAAG,GAAG,CAAV,EAAa,OAAO,IAAP;AACb,MAAIoH,UAAU,GAAG,CAAC,GAAGxJ,UAAU,CAACyJ,eAAf,EAAgCP,MAAhC,EAAwCE,QAAxC,EAAkD,CAAlD,EAAqD,IAArD,CAAjB;AACA,MAAI5C,MAAJ,CAVkD,CAUtC;;AAEZ,MAAI8C,QAAQ,CAAC,CAAD,CAAR,CAAYtB,OAAZ,KAAwB,CAACsB,QAAQ,CAAC,CAAD,CAAR,CAAYtB,OAAzC,EAAkD;AAChD,QAAI0B,OAAO,GAAG,KAAd;AACA,QAAIC,WAAW,GAAGP,QAAQ,GAAGhH,GAA7B;AACA,QAAIwH,GAAG,GAAGN,QAAQ,CAACpC,MAAT,CAAgB,UAAU2C,GAAV,EAAezF,KAAf,EAAsB;AAC9C,aAAOyF,GAAG,GAAGzF,KAAK,CAAC4D,OAAZ,IAAuB,CAA9B;AACD,KAFS,EAEP,CAFO,CAAV;AAGA4B,IAAAA,GAAG,IAAI,CAACxH,GAAG,GAAG,CAAP,IAAYoH,UAAnB;;AAEA,QAAII,GAAG,IAAIR,QAAX,EAAqB;AACnBQ,MAAAA,GAAG,IAAI,CAACxH,GAAG,GAAG,CAAP,IAAYoH,UAAnB;AACAA,MAAAA,UAAU,GAAG,CAAb;AACD;;AAED,QAAII,GAAG,IAAIR,QAAP,IAAmBO,WAAW,GAAG,CAArC,EAAwC;AACtCD,MAAAA,OAAO,GAAG,IAAV;AACAC,MAAAA,WAAW,IAAI,GAAf;AACAC,MAAAA,GAAG,GAAGxH,GAAG,GAAGuH,WAAZ;AACD;;AAED,QAAIG,MAAM,GAAG,CAACV,QAAQ,GAAGQ,GAAZ,IAAmB,CAAnB,IAAwB,CAArC;AACA,QAAIG,IAAI,GAAG;AACTD,MAAAA,MAAM,EAAEA,MAAM,GAAGN,UADR;AAETQ,MAAAA,IAAI,EAAE;AAFG,KAAX;AAIAxD,IAAAA,MAAM,GAAG8C,QAAQ,CAACpC,MAAT,CAAgB,UAAU2C,GAAV,EAAezF,KAAf,EAAsB;AAC7C,UAAI6F,MAAM,GAAG,GAAG5C,MAAH,CAAUpG,kBAAkB,CAAC4I,GAAD,CAA5B,EAAmC,CAAC;AAC/C5D,QAAAA,IAAI,EAAE7B,KAAK,CAAC6B,IADmC;AAE/CiE,QAAAA,QAAQ,EAAE;AACRJ,UAAAA,MAAM,EAAEC,IAAI,CAACD,MAAL,GAAcC,IAAI,CAACC,IAAnB,GAA0BR,UAD1B;AAERQ,UAAAA,IAAI,EAAEN,OAAO,GAAGC,WAAH,GAAiBvF,KAAK,CAAC4D;AAF5B;AAFqC,OAAD,CAAnC,CAAb;AAOA+B,MAAAA,IAAI,GAAGE,MAAM,CAACA,MAAM,CAAC5H,MAAP,GAAgB,CAAjB,CAAN,CAA0B6H,QAAjC;;AAEA,UAAI9F,KAAK,CAAC4E,SAAN,IAAmB5E,KAAK,CAAC4E,SAAN,CAAgB3G,MAAvC,EAA+C;AAC7C+B,QAAAA,KAAK,CAAC4E,SAAN,CAAgBzF,OAAhB,CAAwB,UAAU0C,IAAV,EAAgB;AACtCgE,UAAAA,MAAM,CAAChH,IAAP,CAAY;AACVgD,YAAAA,IAAI,EAAEA,IADI;AAEViE,YAAAA,QAAQ,EAAEH;AAFA,WAAZ;AAID,SALD;AAMD;;AAED,aAAOE,MAAP;AACD,KApBQ,EAoBN,EApBM,CAAT;AAqBD,GA7CD,MA6CO;AACL,QAAIE,OAAO,GAAG,CAAC,GAAGnK,UAAU,CAACyJ,eAAf,EAAgCN,cAAhC,EAAgDC,QAAhD,EAA0D,CAA1D,EAA6D,IAA7D,CAAd;;AAEA,QAAIA,QAAQ,GAAG,IAAIe,OAAf,GAAyB,CAAC/H,GAAG,GAAG,CAAP,IAAYoH,UAArC,IAAmD,CAAvD,EAA0D;AACxDA,MAAAA,UAAU,GAAG,CAAb;AACD;;AAED,QAAIY,YAAY,GAAG,CAAChB,QAAQ,GAAG,IAAIe,OAAf,GAAyB,CAAC/H,GAAG,GAAG,CAAP,IAAYoH,UAAtC,IAAoDpH,GAAvE;;AAEA,QAAIgI,YAAY,GAAG,CAAnB,EAAsB;AACpBA,MAAAA,YAAY,KAAK,CAAjB;AACD;;AAED,QAAIJ,IAAI,GAAGT,UAAU,KAAK,CAACA,UAAhB,GAA6BrE,IAAI,CAACU,GAAL,CAASwE,YAAT,EAAuBb,UAAvB,CAA7B,GAAkEa,YAA7E;AACA5D,IAAAA,MAAM,GAAG8C,QAAQ,CAACpC,MAAT,CAAgB,UAAU2C,GAAV,EAAezF,KAAf,EAAsB9B,CAAtB,EAAyB;AAChD,UAAI2H,MAAM,GAAG,GAAG5C,MAAH,CAAUpG,kBAAkB,CAAC4I,GAAD,CAA5B,EAAmC,CAAC;AAC/C5D,QAAAA,IAAI,EAAE7B,KAAK,CAAC6B,IADmC;AAE/CiE,QAAAA,QAAQ,EAAE;AACRJ,UAAAA,MAAM,EAAEK,OAAO,GAAG,CAACC,YAAY,GAAGZ,UAAhB,IAA8BlH,CAAxC,GAA4C,CAAC8H,YAAY,GAAGJ,IAAhB,IAAwB,CADpE;AAERA,UAAAA,IAAI,EAAEA;AAFE;AAFqC,OAAD,CAAnC,CAAb;;AAQA,UAAI5F,KAAK,CAAC4E,SAAN,IAAmB5E,KAAK,CAAC4E,SAAN,CAAgB3G,MAAvC,EAA+C;AAC7C+B,QAAAA,KAAK,CAAC4E,SAAN,CAAgBzF,OAAhB,CAAwB,UAAU0C,IAAV,EAAgB;AACtCgE,UAAAA,MAAM,CAAChH,IAAP,CAAY;AACVgD,YAAAA,IAAI,EAAEA,IADI;AAEViE,YAAAA,QAAQ,EAAED,MAAM,CAACA,MAAM,CAAC5H,MAAP,GAAgB,CAAjB,CAAN,CAA0B6H;AAF1B,WAAZ;AAID,SALD;AAMD;;AAED,aAAOD,MAAP;AACD,KAnBQ,EAmBN,EAnBM,CAAT;AAoBD;;AAED,SAAOzD,MAAP;AACD,CA9FD;;AAgGA9J,OAAO,CAAC+B,cAAR,GAAyBA,cAAzB;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8BsL,MAA9B,EAAsCrB,KAAtC,EAA6CpC,KAA7C,EAAoDgE,SAApD,EAA+D;AACxF,MAAI3D,QAAQ,GAAGL,KAAK,CAACK,QAArB;AAAA,MACI4D,KAAK,GAAGjE,KAAK,CAACiE,KADlB;AAAA,MAEIC,MAAM,GAAGlE,KAAK,CAACkE,MAFnB;AAGA,MAAI3D,WAAW,GAAG0D,KAAK,IAAIC,MAAM,CAACC,IAAP,IAAe,CAAnB,CAAL,IAA8BD,MAAM,CAACE,KAAP,IAAgB,CAA9C,CAAlB,CAJwF,CAIpB;;AAEpE,MAAIC,WAAW,GAAG/L,cAAc,CAAC;AAC/B+H,IAAAA,QAAQ,EAAEA,QADqB;AAE/BE,IAAAA,WAAW,EAAEA;AAFkB,GAAD,CAAhC;AAIA,MAAI+D,SAAS,GAAGb,MAAhB;;AAEA,MAAIY,WAAJ,EAAiB;AACf,QAAIE,GAAG,GAAGP,SAAS,IAAI,EAAvB;AACA,QAAIQ,KAAK,GAAGH,WAAW,CAACG,KAAxB;AAAA,QACIC,aAAa,GAAGJ,WAAW,CAACI,aADhC;AAAA,QAEIC,MAAM,GAAGL,WAAW,CAACK,MAFzB;;AAIA,QAAI,CAACA,MAAM,KAAK,UAAX,IAAyBA,MAAM,KAAK,YAAX,IAA2BD,aAAa,KAAK,QAAvE,KAAoF,CAAC,GAAG9K,UAAU,CAACsE,QAAf,EAAyBwF,MAAM,CAACe,KAAD,CAA/B,CAAxF,EAAiI;AAC/HF,MAAAA,SAAS,GAAGxH,aAAa,CAAC,EAAD,EAAK2G,MAAL,EAAatG,eAAe,CAAC,EAAD,EAAKqH,KAAL,EAAYF,SAAS,CAACE,KAAD,CAAT,IAAoBD,GAAG,CAACN,KAAJ,IAAa,CAAjC,CAAZ,CAA5B,CAAzB;AACD;;AAED,QAAI,CAACS,MAAM,KAAK,YAAX,IAA2BA,MAAM,KAAK,UAAX,IAAyBF,KAAK,KAAK,QAA/D,KAA4E,CAAC,GAAG7K,UAAU,CAACsE,QAAf,EAAyBwF,MAAM,CAACgB,aAAD,CAA/B,CAAhF,EAAiI;AAC/HH,MAAAA,SAAS,GAAGxH,aAAa,CAAC,EAAD,EAAK2G,MAAL,EAAatG,eAAe,CAAC,EAAD,EAAKsH,aAAL,EAAoBH,SAAS,CAACG,aAAD,CAAT,IAA4BF,GAAG,CAACI,MAAJ,IAAc,CAA1C,CAApB,CAA5B,CAAzB;AACD;AACF;;AAED,SAAOL,SAAP;AACD,CA5BD;;AA8BAjO,OAAO,CAAC8B,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8ByF,IAA9B,EAAoCiC,IAApC,EAA0CpC,OAA1C,EAAmDoB,QAAnD,EAA6D;AACtF,MAAIyB,QAAQ,GAAGT,IAAI,CAACI,KAAL,CAAWK,QAA1B;AACA,MAAIuE,SAAS,GAAG,CAAC,GAAG/K,WAAW,CAACgL,aAAhB,EAA+BxE,QAA/B,EAAyC,UAAzC,EAAqD5D,MAArD,CAA4D,UAAUqI,aAAV,EAAyB;AACnG,QAAIC,SAAS,GAAGD,aAAa,CAAC9E,KAAd,CAAoB+E,SAApC;AACA,WAAO,CAAC,GAAGzL,OAAO,CAAC,SAAD,CAAX,EAAwByL,SAAxB,KAAsC,CAAC,GAAGzL,OAAO,CAAC,SAAD,CAAX,EAAwBsF,QAAxB,CAAtC,GAA0E,IAA1E,GAAiFA,QAAQ,CAAC4D,OAAT,CAAiBuC,SAAjB,KAA+B,CAAvH;AACD,GAHe,CAAhB;;AAKA,MAAIH,SAAS,IAAIA,SAAS,CAAC5I,MAA3B,EAAmC;AACjC,QAAIM,IAAI,GAAGsI,SAAS,CAACvG,GAAV,CAAc,UAAUyG,aAAV,EAAyB;AAChD,aAAOA,aAAa,CAAC9E,KAAd,CAAoBxC,OAA3B;AACD,KAFU,CAAX;AAGA,WAAOG,IAAI,CAACkD,MAAL,CAAY,UAAUV,MAAV,EAAkBpC,KAAlB,EAAyB;AAC1C,UAAIiH,UAAU,GAAGzO,iBAAiB,CAACwH,KAAD,EAAQP,OAAR,EAAiB,CAAjB,CAAlC;AACA,UAAIyH,SAAS,GAAG,CAAC,GAAGjM,SAAS,CAAC,SAAD,CAAb,EAA0BgM,UAA1B,IAAwC,CAAC,CAAC,GAAG9L,KAAK,CAAC,SAAD,CAAT,EAAsB8L,UAAtB,CAAD,EAAoC,CAAC,GAAG/L,KAAK,CAAC,SAAD,CAAT,EAAsB+L,UAAtB,CAApC,CAAxC,GAAiH,CAACA,UAAD,EAAaA,UAAb,CAAjI;AACA,UAAIE,WAAW,GAAG5I,IAAI,CAACuE,MAAL,CAAY,UAAUsE,YAAV,EAAwBC,CAAxB,EAA2B;AACvD,YAAIC,UAAU,GAAG9O,iBAAiB,CAACwH,KAAD,EAAQqH,CAAR,EAAW,CAAX,CAAlC;AACA,YAAIE,UAAU,GAAGL,SAAS,CAAC,CAAD,CAAT,GAAepG,IAAI,CAACC,GAAL,CAAS,CAAC,GAAG9F,SAAS,CAAC,SAAD,CAAb,EAA0BqM,UAA1B,IAAwCA,UAAU,CAAC,CAAD,CAAlD,GAAwDA,UAAjE,CAAhC;AACA,YAAIE,UAAU,GAAGN,SAAS,CAAC,CAAD,CAAT,GAAepG,IAAI,CAACC,GAAL,CAAS,CAAC,GAAG9F,SAAS,CAAC,SAAD,CAAb,EAA0BqM,UAA1B,IAAwCA,UAAU,CAAC,CAAD,CAAlD,GAAwDA,UAAjE,CAAhC;AACA,eAAO,CAACxG,IAAI,CAACU,GAAL,CAAS+F,UAAT,EAAqBH,YAAY,CAAC,CAAD,CAAjC,CAAD,EAAwCtG,IAAI,CAACW,GAAL,CAAS+F,UAAT,EAAqBJ,YAAY,CAAC,CAAD,CAAjC,CAAxC,CAAP;AACD,OALiB,EAKf,CAAChH,QAAD,EAAW,CAACA,QAAZ,CALe,CAAlB;AAMA,aAAO,CAACU,IAAI,CAACU,GAAL,CAAS2F,WAAW,CAAC,CAAD,CAApB,EAAyB/E,MAAM,CAAC,CAAD,CAA/B,CAAD,EAAsCtB,IAAI,CAACW,GAAL,CAAS0F,WAAW,CAAC,CAAD,CAApB,EAAyB/E,MAAM,CAAC,CAAD,CAA/B,CAAtC,CAAP;AACD,KAVM,EAUJ,CAAChC,QAAD,EAAW,CAACA,QAAZ,CAVI,CAAP;AAWD;;AAED,SAAO,IAAP;AACD,CAzBD;;AA2BA9H,OAAO,CAAC6B,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8B0F,IAA9B,EAAoCyE,KAApC,EAA2C5E,OAA3C,EAAoDoB,QAApD,EAA8D;AACvF,MAAI4G,OAAO,GAAGpD,KAAK,CAAC/D,GAAN,CAAU,UAAUuB,IAAV,EAAgB;AACtC,WAAO1H,oBAAoB,CAACyF,IAAD,EAAOiC,IAAP,EAAapC,OAAb,EAAsBoB,QAAtB,CAA3B;AACD,GAFa,EAEXnC,MAFW,CAEJ,UAAUsB,KAAV,EAAiB;AACzB,WAAO,CAAC,CAAC,GAAGzE,OAAO,CAAC,SAAD,CAAX,EAAwByE,KAAxB,CAAR;AACD,GAJa,CAAd;;AAMA,MAAIyH,OAAO,IAAIA,OAAO,CAACxJ,MAAvB,EAA+B;AAC7B,WAAOwJ,OAAO,CAAC3E,MAAR,CAAe,UAAUV,MAAV,EAAkBpC,KAAlB,EAAyB;AAC7C,aAAO,CAACc,IAAI,CAACU,GAAL,CAASY,MAAM,CAAC,CAAD,CAAf,EAAoBpC,KAAK,CAAC,CAAD,CAAzB,CAAD,EAAgCc,IAAI,CAACW,GAAL,CAASW,MAAM,CAAC,CAAD,CAAf,EAAoBpC,KAAK,CAAC,CAAD,CAAzB,CAAhC,CAAP;AACD,KAFM,EAEJ,CAACI,QAAD,EAAW,CAACA,QAAZ,CAFI,CAAP;AAGD;;AAED,SAAO,IAAP;AACD,CAdD;AAeA;;;;;;;;;;AAUA9H,OAAO,CAAC4B,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,4BAA4B,GAAG,SAASA,4BAAT,CAAsC2F,IAAtC,EAA4CyE,KAA5C,EAAmDxE,IAAnD,EAAyDC,SAAzD,EAAoE;AACrG,MAAI2H,OAAO,GAAGpD,KAAK,CAAC/D,GAAN,CAAU,UAAUuB,IAAV,EAAgB;AACtC,QAAIpC,OAAO,GAAGoC,IAAI,CAACI,KAAL,CAAWxC,OAAzB;;AAEA,QAAII,IAAI,KAAK,QAAT,IAAqBJ,OAAzB,EAAkC;AAChC,aAAOtF,oBAAoB,CAACyF,IAAD,EAAOiC,IAAP,EAAapC,OAAb,CAApB,IAA6ChH,oBAAoB,CAACmH,IAAD,EAAOH,OAAP,EAAgBI,IAAhB,EAAsBC,SAAtB,CAAxE;AACD;;AAED,WAAOrH,oBAAoB,CAACmH,IAAD,EAAOH,OAAP,EAAgBI,IAAhB,EAAsBC,SAAtB,CAA3B;AACD,GARa,CAAd;;AAUA,MAAID,IAAI,KAAK,QAAb,EAAuB;AACrB;AACA,WAAO4H,OAAO,CAAC3E,MAAR,CAAe,UAAUV,MAAV,EAAkBpC,KAAlB,EAAyB;AAC7C,aAAO,CAACc,IAAI,CAACU,GAAL,CAASY,MAAM,CAAC,CAAD,CAAf,EAAoBpC,KAAK,CAAC,CAAD,CAAzB,CAAD,EAAgCc,IAAI,CAACW,GAAL,CAASW,MAAM,CAAC,CAAD,CAAf,EAAoBpC,KAAK,CAAC,CAAD,CAAzB,CAAhC,CAAP;AACD,KAFM,EAEJ,CAACI,QAAD,EAAW,CAACA,QAAZ,CAFI,CAAP;AAGD;;AAED,MAAIsH,GAAG,GAAG,EAAV,CAlBqG,CAkBvF;;AAEd,SAAOD,OAAO,CAAC3E,MAAR,CAAe,UAAUV,MAAV,EAAkBpC,KAAlB,EAAyB;AAC7C,SAAK,IAAI9B,CAAC,GAAG,CAAR,EAAWF,GAAG,GAAGgC,KAAK,CAAC/B,MAA5B,EAAoCC,CAAC,GAAGF,GAAxC,EAA6CE,CAAC,EAA9C,EAAkD;AAChD,UAAI,CAACwJ,GAAG,CAAC1H,KAAK,CAAC9B,CAAD,CAAN,CAAR,EAAoB;AAClBwJ,QAAAA,GAAG,CAAC1H,KAAK,CAAC9B,CAAD,CAAN,CAAH,GAAgB,IAAhB;AACAkE,QAAAA,MAAM,CAACvD,IAAP,CAAYmB,KAAK,CAAC9B,CAAD,CAAjB;AACD;AACF;;AAED,WAAOkE,MAAP;AACD,GATM,EASJ,EATI,CAAP;AAUD,CA9BD;;AAgCA9J,OAAO,CAAC2B,4BAAR,GAAuCA,4BAAvC;;AAEA,IAAID,iBAAiB,GAAG,SAASA,iBAAT,CAA2B2M,MAA3B,EAAmC9F,QAAnC,EAA6C;AACnE,SAAO8F,MAAM,KAAK,YAAX,IAA2B9F,QAAQ,KAAK,OAAxC,IAAmD8F,MAAM,KAAK,UAAX,IAAyB9F,QAAQ,KAAK,OAAzF,IAAoG8F,MAAM,KAAK,SAAX,IAAwB9F,QAAQ,KAAK,WAAzI,IAAwJ8F,MAAM,KAAK,QAAX,IAAuB9F,QAAQ,KAAK,YAAnM;AACD,CAFD;AAGA;;;;;;;;;AASAvI,OAAO,CAAC0B,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8B0G,KAA9B,EAAqCe,GAArC,EAA0CC,GAA1C,EAA+C;AACxE,MAAIkG,MAAJ,EAAYC,MAAZ;AACA,MAAIC,MAAM,GAAGpH,KAAK,CAACH,GAAN,CAAU,UAAUN,KAAV,EAAiB;AACtC,QAAIA,KAAK,CAACQ,UAAN,KAAqBgB,GAAzB,EAA8B;AAC5BmG,MAAAA,MAAM,GAAG,IAAT;AACD;;AAED,QAAI3H,KAAK,CAACQ,UAAN,KAAqBiB,GAAzB,EAA8B;AAC5BmG,MAAAA,MAAM,GAAG,IAAT;AACD;;AAED,WAAO5H,KAAK,CAACQ,UAAb;AACD,GAVY,CAAb;;AAYA,MAAI,CAACmH,MAAL,EAAa;AACXE,IAAAA,MAAM,CAAChJ,IAAP,CAAY2C,GAAZ;AACD;;AAED,MAAI,CAACoG,MAAL,EAAa;AACXC,IAAAA,MAAM,CAAChJ,IAAP,CAAY4C,GAAZ;AACD;;AAED,SAAOoG,MAAP;AACD,CAvBD;AAwBA;;;;;;;;;AASAvP,OAAO,CAACyB,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,cAAc,GAAG,SAASA,cAAT,CAAwB6G,IAAxB,EAA8BmH,MAA9B,EAAsCC,KAAtC,EAA6C;AAChE,MAAI,CAACpH,IAAL,EAAW,OAAO,IAAP;AACX,MAAIqH,KAAK,GAAGrH,IAAI,CAACqH,KAAjB;AACA,MAAIC,eAAe,GAAGtH,IAAI,CAACsH,eAA3B;AAAA,MACIpI,IAAI,GAAGc,IAAI,CAACd,IADhB;AAAA,MAEImB,KAAK,GAAGL,IAAI,CAACK,KAFjB;AAGA,MAAI0E,MAAM,GAAG,CAACoC,MAAM,IAAIC,KAAX,KAAqBlI,IAAI,KAAK,UAA9B,IAA4CmI,KAAK,CAACE,SAAlD,GAA8DF,KAAK,CAACE,SAAN,KAAoB,CAAlF,GAAsF,CAAnG;AACAxC,EAAAA,MAAM,GAAG/E,IAAI,CAACE,QAAL,KAAkB,WAAlB,GAAgC,CAAC,GAAGjF,UAAU,CAACyF,QAAf,EAAyBL,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAzC,IAAgD,CAAhD,GAAoD0E,MAApF,GAA6FA,MAAtG,CAPgE,CAO8C;;AAE9G,MAAIoC,MAAM,KAAKnH,IAAI,CAACF,KAAL,IAAcE,IAAI,CAACwH,SAAxB,CAAV,EAA8C;AAC5C,WAAO,CAACxH,IAAI,CAACF,KAAL,IAAcE,IAAI,CAACwH,SAApB,EAA+B7H,GAA/B,CAAmC,UAAUN,KAAV,EAAiB;AACzD,UAAIoI,YAAY,GAAGH,eAAe,GAAGA,eAAe,CAACxD,OAAhB,CAAwBzE,KAAxB,CAAH,GAAoCA,KAAtE;AACA,aAAO;AACLQ,QAAAA,UAAU,EAAEwH,KAAK,CAACI,YAAD,CAAL,GAAsB1C,MAD7B;AAELnN,QAAAA,KAAK,EAAEyH,KAFF;AAGL0F,QAAAA,MAAM,EAAEA;AAHH,OAAP;AAKD,KAPM,CAAP;AAQD,GAlB+D,CAkB9D;;;AAGF,MAAI/E,IAAI,CAAC0H,aAAL,IAAsB1H,IAAI,CAAC2H,iBAA/B,EAAkD;AAChD,WAAO3H,IAAI,CAAC2H,iBAAL,CAAuBhI,GAAvB,CAA2B,UAAUN,KAAV,EAAiBY,KAAjB,EAAwB;AACxD,aAAO;AACLJ,QAAAA,UAAU,EAAEwH,KAAK,CAAChI,KAAD,CAAL,GAAe0F,MADtB;AAELnN,QAAAA,KAAK,EAAEyH,KAFF;AAGLY,QAAAA,KAAK,EAAEA,KAHF;AAIL8E,QAAAA,MAAM,EAAEA;AAJH,OAAP;AAMD,KAPM,CAAP;AAQD;;AAED,MAAIsC,KAAK,CAACvH,KAAN,IAAe,CAACsH,KAApB,EAA2B;AACzB,WAAOC,KAAK,CAACvH,KAAN,CAAYE,IAAI,CAAC4H,SAAjB,EAA4BjI,GAA5B,CAAgC,UAAUN,KAAV,EAAiB;AACtD,aAAO;AACLQ,QAAAA,UAAU,EAAEwH,KAAK,CAAChI,KAAD,CAAL,GAAe0F,MADtB;AAELnN,QAAAA,KAAK,EAAEyH,KAFF;AAGL0F,QAAAA,MAAM,EAAEA;AAHH,OAAP;AAKD,KANM,CAAP;AAOD,GAxC+D,CAwC9D;;;AAGF,SAAOsC,KAAK,CAAC/H,MAAN,GAAeK,GAAf,CAAmB,UAAUN,KAAV,EAAiBY,KAAjB,EAAwB;AAChD,WAAO;AACLJ,MAAAA,UAAU,EAAEwH,KAAK,CAAChI,KAAD,CAAL,GAAe0F,MADtB;AAELnN,MAAAA,KAAK,EAAE0P,eAAe,GAAGA,eAAe,CAACjI,KAAD,CAAlB,GAA4BA,KAF7C;AAGLY,MAAAA,KAAK,EAAEA,KAHF;AAIL8E,MAAAA,MAAM,EAAEA;AAJH,KAAP;AAMD,GAPM,CAAP;AAQD,CAnDD;AAoDA;;;;;;;;;AASApN,OAAO,CAACwB,cAAR,GAAyBA,cAAzB;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8B2O,cAA9B,EAA8CC,aAA9C,EAA6DC,YAA7D,EAA2E;AACpG,MAAIC,iBAAJ;;AAEA,MAAI,CAAC,GAAGtN,YAAY,CAAC,SAAD,CAAhB,EAA6BqN,YAA7B,CAAJ,EAAgD;AAC9CC,IAAAA,iBAAiB,GAAGD,YAApB;AACD,GAFD,MAEO,IAAI,CAAC,GAAGrN,YAAY,CAAC,SAAD,CAAhB,EAA6BoN,aAA7B,CAAJ,EAAiD;AACtDE,IAAAA,iBAAiB,GAAGF,aAApB;AACD;;AAED,MAAI,CAAC,GAAGpN,YAAY,CAAC,SAAD,CAAhB,EAA6BmN,cAA7B,KAAgDG,iBAApD,EAAuE;AACrE,WAAO,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;AACvC,UAAI,CAAC,GAAG1N,YAAY,CAAC,SAAD,CAAhB,EAA6BmN,cAA7B,CAAJ,EAAkD;AAChDA,QAAAA,cAAc,CAACI,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,CAAd;AACD;;AAED,UAAI,CAAC,GAAG1N,YAAY,CAAC,SAAD,CAAhB,EAA6BsN,iBAA7B,CAAJ,EAAqD;AACnDA,QAAAA,iBAAiB,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,CAAjB;AACD;AACF,KARD;AASD;;AAED,SAAO,IAAP;AACD,CAtBD;AAuBA;;;;;;;;AAQAzQ,OAAO,CAACuB,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,UAAU,GAAG,SAASA,UAAT,CAAoB+G,IAApB,EAA0BqI,SAA1B,EAAqC;AACpD,MAAIhB,KAAK,GAAGrH,IAAI,CAACqH,KAAjB;AAAA,MACInI,IAAI,GAAGc,IAAI,CAACd,IADhB;AAAA,MAEI8G,MAAM,GAAGhG,IAAI,CAACgG,MAFlB;AAAA,MAGI9F,QAAQ,GAAGF,IAAI,CAACE,QAHpB;;AAKA,MAAImH,KAAK,KAAK,MAAd,EAAsB;AACpB,QAAIrB,MAAM,KAAK,QAAX,IAAuB9F,QAAQ,KAAK,YAAxC,EAAsD;AACpD,aAAO;AACLmH,QAAAA,KAAK,EAAEvM,QAAQ,CAACwN,SAAT,EADF;AAELC,QAAAA,aAAa,EAAE;AAFV,OAAP;AAID;;AAED,QAAIvC,MAAM,KAAK,QAAX,IAAuB9F,QAAQ,KAAK,WAAxC,EAAqD;AACnD,aAAO;AACLmH,QAAAA,KAAK,EAAEvM,QAAQ,CAAC0N,WAAT,EADF;AAELD,QAAAA,aAAa,EAAE;AAFV,OAAP;AAID;;AAED,QAAIrJ,IAAI,KAAK,UAAT,IAAuBmJ,SAAvB,KAAqCA,SAAS,CAACvE,OAAV,CAAkB,WAAlB,KAAkC,CAAlC,IAAuCuE,SAAS,CAACvE,OAAV,CAAkB,WAAlB,KAAkC,CAAzE,IAA8EuE,SAAS,CAACvE,OAAV,CAAkB,eAAlB,KAAsC,CAAzJ,CAAJ,EAAiK;AAC/J,aAAO;AACLuD,QAAAA,KAAK,EAAEvM,QAAQ,CAAC2N,UAAT,EADF;AAELF,QAAAA,aAAa,EAAE;AAFV,OAAP;AAID;;AAED,QAAIrJ,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAO;AACLmI,QAAAA,KAAK,EAAEvM,QAAQ,CAACwN,SAAT,EADF;AAELC,QAAAA,aAAa,EAAE;AAFV,OAAP;AAID;;AAED,WAAO;AACLlB,MAAAA,KAAK,EAAEvM,QAAQ,CAAC0N,WAAT,EADF;AAELD,MAAAA,aAAa,EAAE;AAFV,KAAP;AAID;;AAED,MAAI,CAAC,GAAGlO,UAAU,CAAC,SAAD,CAAd,EAA2BgN,KAA3B,CAAJ,EAAuC;AACrC,QAAItK,IAAI,GAAG,QAAQuF,MAAR,CAAe,CAAC,GAAGlI,YAAY,CAAC,SAAD,CAAhB,EAA6BiN,KAA7B,CAAf,CAAX;AACA,WAAO;AACLA,MAAAA,KAAK,EAAE,CAACvM,QAAQ,CAACiC,IAAD,CAAR,IAAkBjC,QAAQ,CAAC2N,UAA5B,GADF;AAELF,MAAAA,aAAa,EAAEzN,QAAQ,CAACiC,IAAD,CAAR,GAAiBA,IAAjB,GAAwB;AAFlC,KAAP;AAID;;AAED,SAAO,CAAC,GAAGrC,YAAY,CAAC,SAAD,CAAhB,EAA6B2M,KAA7B,IAAsC;AAC3CA,IAAAA,KAAK,EAAEA;AADoC,GAAtC,GAEH;AACFA,IAAAA,KAAK,EAAEvM,QAAQ,CAAC2N,UAAT,EADL;AAEFF,IAAAA,aAAa,EAAE;AAFb,GAFJ;AAMD,CAvDD;;AAyDA5Q,OAAO,CAACsB,UAAR,GAAqBA,UAArB;AACA,IAAIyP,GAAG,GAAG,IAAV;;AAEA,IAAI1P,kBAAkB,GAAG,SAASA,kBAAT,CAA4BqO,KAA5B,EAAmC;AAC1D,MAAI/H,MAAM,GAAG+H,KAAK,CAAC/H,MAAN,EAAb;;AAEA,MAAI,CAACA,MAAD,IAAWA,MAAM,CAAChC,MAAP,IAAiB,CAAhC,EAAmC;AACjC;AACD;;AAED,MAAID,GAAG,GAAGiC,MAAM,CAAChC,MAAjB;AACA,MAAI+C,KAAK,GAAGgH,KAAK,CAAChH,KAAN,EAAZ;AACA,MAAIQ,GAAG,GAAGV,IAAI,CAACU,GAAL,CAASR,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,IAA+BqI,GAAzC;AACA,MAAI5H,GAAG,GAAGX,IAAI,CAACW,GAAL,CAAST,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,IAA+BqI,GAAzC;AACA,MAAIC,KAAK,GAAGtB,KAAK,CAAC/H,MAAM,CAAC,CAAD,CAAP,CAAjB;AACA,MAAIsJ,IAAI,GAAGvB,KAAK,CAAC/H,MAAM,CAACjC,GAAG,GAAG,CAAP,CAAP,CAAhB;;AAEA,MAAIsL,KAAK,GAAG9H,GAAR,IAAe8H,KAAK,GAAG7H,GAAvB,IAA8B8H,IAAI,GAAG/H,GAArC,IAA4C+H,IAAI,GAAG9H,GAAvD,EAA4D;AAC1DuG,IAAAA,KAAK,CAAC/H,MAAN,CAAa,CAACA,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAACjC,GAAG,GAAG,CAAP,CAAlB,CAAb;AACD;AACF,CAjBD;;AAmBA1F,OAAO,CAACqB,kBAAR,GAA6BA,kBAA7B;;AAEA,IAAID,iBAAiB,GAAG,SAASA,iBAAT,CAA2B8P,WAA3B,EAAwCC,KAAxC,EAA+C;AACrE,MAAI,CAACD,WAAL,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,OAAK,IAAItL,CAAC,GAAG,CAAR,EAAWF,GAAG,GAAGwL,WAAW,CAACvL,MAAlC,EAA0CC,CAAC,GAAGF,GAA9C,EAAmDE,CAAC,EAApD,EAAwD;AACtD,QAAIsL,WAAW,CAACtL,CAAD,CAAX,CAAe2D,IAAf,KAAwB4H,KAA5B,EAAmC;AACjC,aAAOD,WAAW,CAACtL,CAAD,CAAX,CAAe4H,QAAtB;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAZD;;AAcAxN,OAAO,CAACoB,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAID,gBAAgB,GAAG,SAASA,gBAAT,CAA0BlB,KAA1B,EAAiC0H,MAAjC,EAAyC;AAC9D,MAAI,CAACA,MAAD,IAAWA,MAAM,CAAChC,MAAP,KAAkB,CAA7B,IAAkC,CAAC,CAAC,GAAGrC,UAAU,CAACsE,QAAf,EAAyBD,MAAM,CAAC,CAAD,CAA/B,CAAnC,IAA0E,CAAC,CAAC,GAAGrE,UAAU,CAACsE,QAAf,EAAyBD,MAAM,CAAC,CAAD,CAA/B,CAA/E,EAAoH;AAClH,WAAO1H,KAAP;AACD;;AAED,MAAIiJ,GAAG,GAAGV,IAAI,CAACU,GAAL,CAASvB,MAAM,CAAC,CAAD,CAAf,EAAoBA,MAAM,CAAC,CAAD,CAA1B,CAAV;AACA,MAAIwB,GAAG,GAAGX,IAAI,CAACW,GAAL,CAASxB,MAAM,CAAC,CAAD,CAAf,EAAoBA,MAAM,CAAC,CAAD,CAA1B,CAAV;AACA,MAAImC,MAAM,GAAG,CAAC7J,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAb;;AAEA,MAAI,CAAC,CAAC,GAAGqD,UAAU,CAACsE,QAAf,EAAyB3H,KAAK,CAAC,CAAD,CAA9B,CAAD,IAAuCA,KAAK,CAAC,CAAD,CAAL,GAAWiJ,GAAtD,EAA2D;AACzDY,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYZ,GAAZ;AACD;;AAED,MAAI,CAAC,CAAC,GAAG5F,UAAU,CAACsE,QAAf,EAAyB3H,KAAK,CAAC,CAAD,CAA9B,CAAD,IAAuCA,KAAK,CAAC,CAAD,CAAL,GAAWkJ,GAAtD,EAA2D;AACzDW,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYX,GAAZ;AACD;;AAED,MAAIW,MAAM,CAAC,CAAD,CAAN,GAAYX,GAAhB,EAAqB;AACnBW,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYX,GAAZ;AACD;;AAED,MAAIW,MAAM,CAAC,CAAD,CAAN,GAAYZ,GAAhB,EAAqB;AACnBY,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYZ,GAAZ;AACD;;AAED,SAAOY,MAAP;AACD,CA1BD;AA2BA;;;AAGA9J,OAAO,CAACmB,gBAAR,GAA2BA,gBAA3B;;AAEA,IAAID,UAAU,GAAG,SAASA,UAAT,CAAoBkQ,MAApB,EAA4B;AAC3C,MAAInM,CAAC,GAAGmM,MAAM,CAACzL,MAAf;;AAEA,MAAIV,CAAC,IAAI,CAAT,EAAY;AACV;AACD;;AAED,OAAK,IAAI2G,CAAC,GAAG,CAAR,EAAWyF,CAAC,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAUzL,MAA9B,EAAsCiG,CAAC,GAAGyF,CAA1C,EAA6C,EAAEzF,CAA/C,EAAkD;AAChD,QAAI0F,QAAQ,GAAG,CAAf;AACA,QAAIC,QAAQ,GAAG,CAAf;;AAEA,SAAK,IAAI3L,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,CAApB,EAAuB,EAAEW,CAAzB,EAA4B;AAC1B,UAAI3F,KAAK,GAAG,CAAC,GAAGuC,OAAO,CAAC,SAAD,CAAX,EAAwB4O,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,CAAxB,IAA2CwF,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,CAA3C,GAA6DwF,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,CAAzE;AACA;;AAEA,UAAI3L,KAAK,IAAI,CAAb,EAAgB;AACdmR,QAAAA,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,IAAkB0F,QAAlB;AACAF,QAAAA,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,IAAkB0F,QAAQ,GAAGrR,KAA7B;AACAqR,QAAAA,QAAQ,GAAGF,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,CAAX;AACD,OAJD,MAIO;AACLwF,QAAAA,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,IAAkB2F,QAAlB;AACAH,QAAAA,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,IAAkB2F,QAAQ,GAAGtR,KAA7B;AACAsR,QAAAA,QAAQ,GAAGH,MAAM,CAACxL,CAAD,CAAN,CAAUgG,CAAV,EAAa,CAAb,CAAX;AACD;AACD;;AAED;AACF;AACF,CA5BD;;AA8BA5L,OAAO,CAACkB,UAAR,GAAqBA,UAArB;AACA,IAAIsQ,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAEvQ,UADe;AAErBwQ,EAAAA,MAAM,EAAErO,QAAQ,CAACsO,iBAFI;AAGrBC,EAAAA,IAAI,EAAEvO,QAAQ,CAACwO,eAHM;AAIrBC,EAAAA,UAAU,EAAEzO,QAAQ,CAAC0O,qBAJA;AAKrBC,EAAAA,MAAM,EAAE3O,QAAQ,CAAC4O;AALI,CAAvB;;AAQA,IAAIhR,cAAc,GAAG,SAASA,cAAT,CAAwBqG,IAAxB,EAA8B4K,UAA9B,EAA0CC,UAA1C,EAAsD;AACzE,MAAIC,QAAQ,GAAGF,UAAU,CAAClK,GAAX,CAAe,UAAUuB,IAAV,EAAgB;AAC5C,WAAOA,IAAI,CAACI,KAAL,CAAWxC,OAAlB;AACD,GAFc,CAAf;AAGA,MAAIkL,KAAK,GAAG,CAAC,GAAGhP,QAAQ,CAACgP,KAAb,IAAsBpM,IAAtB,CAA2BmM,QAA3B,EAAqCnS,KAArC,CAA2C,UAAUqS,CAAV,EAAapO,GAAb,EAAkB;AACvE,WAAOsE,IAAI,CAACW,GAAL,CAAS,CAACjJ,iBAAiB,CAACoS,CAAD,EAAIpO,GAAJ,EAAS,CAAT,CAA3B,EAAwC,CAAxC,CAAP;AACD,GAFW,EAETqO,KAFS,CAEHlP,QAAQ,CAACmP,cAFN,EAEsBpF,MAFtB,CAE6BoE,gBAAgB,CAACW,UAAD,CAF7C,CAAZ;AAGA,SAAOE,KAAK,CAAC/K,IAAD,CAAZ;AACD,CARD;;AAUAtH,OAAO,CAACiB,cAAR,GAAyBA,cAAzB;;AAEA,IAAID,sBAAsB,GAAG,SAASA,sBAAT,CAAgCsG,IAAhC,EAAsCmL,MAAtC,EAA8CC,aAA9C,EAA6D1G,UAA7D,EAAyEmG,UAAzE,EAAqFQ,iBAArF,EAAwG;AACnI,MAAI,CAACrL,IAAL,EAAW;AACT,WAAO,IAAP;AACD,GAHkI,CAGjI;;;AAGF,MAAIyE,KAAK,GAAG4G,iBAAiB,GAAGF,MAAM,CAACG,OAAP,EAAH,GAAsBH,MAAnD;AACA,MAAIjH,WAAW,GAAGO,KAAK,CAACvB,MAAN,CAAa,UAAUV,MAAV,EAAkBP,IAAlB,EAAwB;AACrD,QAAIsJ,YAAY,GAAGtJ,IAAI,CAACI,KAAxB;AAAA,QACImJ,OAAO,GAAGD,YAAY,CAACC,OAD3B;AAAA,QAEI7H,IAAI,GAAG4H,YAAY,CAAC5H,IAFxB;;AAIA,QAAIA,IAAJ,EAAU;AACR,aAAOnB,MAAP;AACD;;AAED,QAAIiJ,MAAM,GAAGxJ,IAAI,CAACI,KAAL,CAAW+I,aAAX,CAAb;AACA,QAAIM,WAAW,GAAGlJ,MAAM,CAACiJ,MAAD,CAAN,IAAkB;AAClCE,MAAAA,QAAQ,EAAE,KADwB;AAElCzH,MAAAA,WAAW,EAAE;AAFqB,KAApC;;AAKA,QAAI,CAAC,GAAGlI,UAAU,CAAC+D,UAAf,EAA2ByL,OAA3B,CAAJ,EAAyC;AACvC,UAAII,UAAU,GAAGF,WAAW,CAACxH,WAAZ,CAAwBsH,OAAxB,KAAoC;AACnDJ,QAAAA,aAAa,EAAEA,aADoC;AAEnD1G,QAAAA,UAAU,EAAEA,UAFuC;AAGnDD,QAAAA,KAAK,EAAE;AAH4C,OAArD;AAKAmH,MAAAA,UAAU,CAACnH,KAAX,CAAiBxF,IAAjB,CAAsBgD,IAAtB;AACAyJ,MAAAA,WAAW,CAACC,QAAZ,GAAuB,IAAvB;AACAD,MAAAA,WAAW,CAACxH,WAAZ,CAAwBsH,OAAxB,IAAmCI,UAAnC;AACD,KATD,MASO;AACLF,MAAAA,WAAW,CAACxH,WAAZ,CAAwB,CAAC,GAAGlI,UAAU,CAAC6P,QAAf,EAAyB,WAAzB,CAAxB,IAAiE;AAC/DT,QAAAA,aAAa,EAAEA,aADgD;AAE/D1G,QAAAA,UAAU,EAAEA,UAFmD;AAG/DD,QAAAA,KAAK,EAAE,CAACxC,IAAD;AAHwD,OAAjE;AAKD;;AAED,WAAO9C,aAAa,CAAC,EAAD,EAAKqD,MAAL,EAAahD,eAAe,CAAC,EAAD,EAAKiM,MAAL,EAAaC,WAAb,CAA5B,CAApB;AACD,GAjCiB,EAiCf,EAjCe,CAAlB;AAkCA,SAAOlT,MAAM,CAACmG,IAAP,CAAYuF,WAAZ,EAAyBhB,MAAzB,CAAgC,UAAUV,MAAV,EAAkBiJ,MAAlB,EAA0B;AAC/D,QAAIK,KAAK,GAAG5H,WAAW,CAACuH,MAAD,CAAvB;;AAEA,QAAIK,KAAK,CAACH,QAAV,EAAoB;AAClBG,MAAAA,KAAK,CAAC5H,WAAN,GAAoB1L,MAAM,CAACmG,IAAP,CAAYmN,KAAK,CAAC5H,WAAlB,EAA+BhB,MAA/B,CAAsC,UAAU2C,GAAV,EAAe2F,OAAf,EAAwB;AAChF,YAAIO,CAAC,GAAGD,KAAK,CAAC5H,WAAN,CAAkBsH,OAAlB,CAAR;AACA,eAAOrM,aAAa,CAAC,EAAD,EAAK0G,GAAL,EAAUrG,eAAe,CAAC,EAAD,EAAKgM,OAAL,EAAc;AACzDJ,UAAAA,aAAa,EAAEA,aAD0C;AAEzD1G,UAAAA,UAAU,EAAEA,UAF6C;AAGzDD,UAAAA,KAAK,EAAEsH,CAAC,CAACtH,KAHgD;AAIzDuH,UAAAA,WAAW,EAAErS,cAAc,CAACqG,IAAD,EAAO+L,CAAC,CAACtH,KAAT,EAAgBoG,UAAhB;AAJ8B,SAAd,CAAzB,CAApB;AAMD,OARmB,EAQjB,EARiB,CAApB;AASD;;AAED,WAAO1L,aAAa,CAAC,EAAD,EAAKqD,MAAL,EAAahD,eAAe,CAAC,EAAD,EAAKiM,MAAL,EAAaK,KAAb,CAA5B,CAApB;AACD,GAhBM,EAgBJ,EAhBI,CAAP;AAiBD,CA1DD;AA2DA;;;;;;;;AAQApT,OAAO,CAACgB,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAID,sBAAsB,GAAG,SAASA,sBAAT,CAAgCoH,KAAhC,EAAuCZ,IAAvC,EAA6C;AACxE,MAAIA,IAAI,KAAK,QAAb,EAAuB;AACrB,WAAO,CAAC,CAAC,GAAG1E,KAAK,CAAC,SAAD,CAAT,EAAsBsF,KAAtB,CAAD,EAA+B,CAAC,GAAGvF,KAAK,CAAC,SAAD,CAAT,EAAsBuF,KAAtB,CAA/B,CAAP;AACD;;AAED,SAAOA,KAAP;AACD,CAND;AAOA;;;;;;;;AAQAnI,OAAO,CAACe,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAID,eAAe,GAAG,SAASA,eAAT,CAAyB4O,KAAzB,EAAgC6D,IAAhC,EAAsC;AAC1D,MAAI3C,aAAa,GAAG2C,IAAI,CAAC3C,aAAzB;AAAA,MACIrJ,IAAI,GAAGgM,IAAI,CAAChM,IADhB;AAAA,MAEI0I,SAAS,GAAGsD,IAAI,CAACtD,SAFrB;AAAA,MAGIuD,cAAc,GAAGD,IAAI,CAACC,cAH1B;AAAA,MAIIC,aAAa,GAAGF,IAAI,CAACE,aAJzB;AAKA,MAAIC,SAAS,GAAG9C,aAAa,IAAI2C,IAAI,CAAC7D,KAAtC;;AAEA,MAAIgE,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,QAA1C,EAAoD;AAClD,WAAO,IAAP;AACD;;AAED,MAAIzD,SAAS,IAAI1I,IAAI,KAAK,QAAtB,IAAkCiM,cAAlC,KAAqDA,cAAc,CAAC,CAAD,CAAd,KAAsB,MAAtB,IAAgCA,cAAc,CAAC,CAAD,CAAd,KAAsB,MAA3G,CAAJ,EAAwH;AACtH;AACA,QAAI7L,MAAM,GAAG+H,KAAK,CAAC/H,MAAN,EAAb;;AAEA,QAAI,CAACA,MAAM,CAAChC,MAAZ,EAAoB;AAClB,aAAO,IAAP;AACD;;AAED,QAAIgO,UAAU,GAAG,CAAC,GAAGzQ,cAAc,CAAC0Q,iBAAnB,EAAsCjM,MAAtC,EAA8CsI,SAA9C,EAAyDwD,aAAzD,CAAjB;AACA/D,IAAAA,KAAK,CAAC/H,MAAN,CAAa5G,sBAAsB,CAAC4S,UAAD,EAAapM,IAAb,CAAnC;AACA,WAAO;AACLsI,MAAAA,SAAS,EAAE8D;AADN,KAAP;AAGD;;AAED,MAAI1D,SAAS,IAAI1I,IAAI,KAAK,QAA1B,EAAoC;AAClC,QAAIsM,OAAO,GAAGnE,KAAK,CAAC/H,MAAN,EAAd;;AAEA,QAAImM,WAAW,GAAG,CAAC,GAAG5Q,cAAc,CAAC6Q,wBAAnB,EAA6CF,OAA7C,EAAsD5D,SAAtD,EAAiEwD,aAAjE,CAAlB;;AAEA,WAAO;AACL5D,MAAAA,SAAS,EAAEiE;AADN,KAAP;AAGD;;AAED,SAAO,IAAP;AACD,CAtCD;;AAwCA9T,OAAO,CAACc,eAAR,GAA0BA,eAA1B;;AAEA,IAAID,uBAAuB,GAAG,SAASA,uBAAT,CAAiCmT,KAAjC,EAAwC;AACpE,MAAI3L,IAAI,GAAG2L,KAAK,CAAC3L,IAAjB;AAAA,MACIF,KAAK,GAAG6L,KAAK,CAAC7L,KADlB;AAAA,MAEIuE,QAAQ,GAAGsH,KAAK,CAACtH,QAFrB;AAAA,MAGIhF,KAAK,GAAGsM,KAAK,CAACtM,KAHlB;AAAA,MAIIY,KAAK,GAAG0L,KAAK,CAAC1L,KAJlB;AAAA,MAKInB,OAAO,GAAG6M,KAAK,CAAC7M,OALpB;;AAOA,MAAIkB,IAAI,CAACd,IAAL,KAAc,UAAlB,EAA8B;AAC5B;AACA,QAAI,CAACc,IAAI,CAAC4L,uBAAN,IAAiC5L,IAAI,CAAClB,OAAtC,IAAiD,CAAC,CAAC,GAAGlE,OAAO,CAAC,SAAD,CAAX,EAAwByE,KAAK,CAACW,IAAI,CAAClB,OAAN,CAA7B,CAAtD,EAAoG;AAClG,UAAI+M,WAAW,GAAG,CAAC,GAAG5Q,UAAU,CAAC6Q,gBAAf,EAAiChM,KAAjC,EAAwC,OAAxC,EAAiDT,KAAK,CAACW,IAAI,CAAClB,OAAN,CAAtD,CAAlB;;AAEA,UAAI+M,WAAJ,EAAiB;AACf,eAAOA,WAAW,CAAChM,UAAZ,GAAyBwE,QAAQ,GAAG,CAA3C;AACD;AACF;;AAED,WAAOvE,KAAK,CAACG,KAAD,CAAL,GAAeH,KAAK,CAACG,KAAD,CAAL,CAAaJ,UAAb,GAA0BwE,QAAQ,GAAG,CAApD,GAAwD,IAA/D;AACD;;AAED,MAAIzM,KAAK,GAAGC,iBAAiB,CAACwH,KAAD,EAAQ,CAAC,CAAC,GAAGzE,OAAO,CAAC,SAAD,CAAX,EAAwBkE,OAAxB,CAAD,GAAoCA,OAApC,GAA8CkB,IAAI,CAAClB,OAA3D,CAA7B;AACA,SAAO,CAAC,CAAC,GAAGlE,OAAO,CAAC,SAAD,CAAX,EAAwBhD,KAAxB,CAAD,GAAkCoI,IAAI,CAACqH,KAAL,CAAWzP,KAAX,CAAlC,GAAsD,IAA7D;AACD,CAvBD;;AAyBAD,OAAO,CAACa,uBAAR,GAAkCA,uBAAlC;;AAEA,IAAID,sBAAsB,GAAG,SAASA,sBAAT,CAAgCwT,KAAhC,EAAuC;AAClE,MAAI/L,IAAI,GAAG+L,KAAK,CAAC/L,IAAjB;AAAA,MACIF,KAAK,GAAGiM,KAAK,CAACjM,KADlB;AAAA,MAEIiF,MAAM,GAAGgH,KAAK,CAAChH,MAFnB;AAAA,MAGIV,QAAQ,GAAG0H,KAAK,CAAC1H,QAHrB;AAAA,MAIIhF,KAAK,GAAG0M,KAAK,CAAC1M,KAJlB;AAAA,MAKIY,KAAK,GAAG8L,KAAK,CAAC9L,KALlB;;AAOA,MAAID,IAAI,CAACd,IAAL,KAAc,UAAlB,EAA8B;AAC5B,WAAOY,KAAK,CAACG,KAAD,CAAL,GAAeH,KAAK,CAACG,KAAD,CAAL,CAAaJ,UAAb,GAA0BkF,MAAzC,GAAkD,IAAzD;AACD;;AAED,MAAInN,KAAK,GAAGC,iBAAiB,CAACwH,KAAD,EAAQW,IAAI,CAAClB,OAAb,EAAsBkB,IAAI,CAACV,MAAL,CAAYW,KAAZ,CAAtB,CAA7B;AACA,SAAO,CAAC,CAAC,GAAGrF,OAAO,CAAC,SAAD,CAAX,EAAwBhD,KAAxB,CAAD,GAAkCoI,IAAI,CAACqH,KAAL,CAAWzP,KAAX,IAAoByM,QAAQ,GAAG,CAA/B,GAAmCU,MAArE,GAA8E,IAArF;AACD,CAdD;;AAgBApN,OAAO,CAACY,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAID,iBAAiB,GAAG,SAASA,iBAAT,CAA2B0T,KAA3B,EAAkC;AACxD,MAAIC,WAAW,GAAGD,KAAK,CAACC,WAAxB;AACA,MAAI3M,MAAM,GAAG2M,WAAW,CAAC5E,KAAZ,CAAkB/H,MAAlB,EAAb;;AAEA,MAAI2M,WAAW,CAAC/M,IAAZ,KAAqB,QAAzB,EAAmC;AACjC,QAAI2B,GAAG,GAAGV,IAAI,CAACU,GAAL,CAASvB,MAAM,CAAC,CAAD,CAAf,EAAoBA,MAAM,CAAC,CAAD,CAA1B,CAAV;AACA,QAAIwB,GAAG,GAAGX,IAAI,CAACW,GAAL,CAASxB,MAAM,CAAC,CAAD,CAAf,EAAoBA,MAAM,CAAC,CAAD,CAA1B,CAAV;;AAEA,QAAIuB,GAAG,IAAI,CAAP,IAAYC,GAAG,IAAI,CAAvB,EAA0B;AACxB,aAAO,CAAP;AACD;;AAED,QAAIA,GAAG,GAAG,CAAV,EAAa;AACX,aAAOA,GAAP;AACD;;AAED,WAAOD,GAAP;AACD;;AAED,SAAOvB,MAAM,CAAC,CAAD,CAAb;AACD,CApBD;;AAsBA3H,OAAO,CAACW,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8B6I,IAA9B,EAAoCiC,WAApC,EAAiD;AAC1E,MAAIsH,OAAO,GAAGvJ,IAAI,CAACI,KAAL,CAAWmJ,OAAzB;;AAEA,MAAI,CAAC,GAAGxP,UAAU,CAAC+D,UAAf,EAA2ByL,OAA3B,CAAJ,EAAyC;AACvC,QAAIM,KAAK,GAAG5H,WAAW,CAACsH,OAAD,CAAvB;;AAEA,QAAIM,KAAK,IAAIA,KAAK,CAACrH,KAAN,CAAYpG,MAAzB,EAAiC;AAC/B,UAAI4O,SAAS,GAAG,CAAC,CAAjB;;AAEA,WAAK,IAAI3O,CAAC,GAAG,CAAR,EAAWF,GAAG,GAAG0N,KAAK,CAACrH,KAAN,CAAYpG,MAAlC,EAA0CC,CAAC,GAAGF,GAA9C,EAAmDE,CAAC,EAApD,EAAwD;AACtD,YAAIwN,KAAK,CAACrH,KAAN,CAAYnG,CAAZ,MAAmB2D,IAAvB,EAA6B;AAC3BgL,UAAAA,SAAS,GAAG3O,CAAZ;AACA;AACD;AACF;;AAED,aAAO2O,SAAS,IAAI,CAAb,GAAiBnB,KAAK,CAACE,WAAN,CAAkBiB,SAAlB,CAAjB,GAAgD,IAAvD;AACD;AACF;;AAED,SAAO,IAAP;AACD,CArBD;;AAuBAvU,OAAO,CAACU,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAI8T,iBAAiB,GAAG,SAASA,iBAAT,CAA2BlN,IAA3B,EAAiC;AACvD,SAAOA,IAAI,CAACkD,MAAL,CAAY,UAAUV,MAAV,EAAkBpC,KAAlB,EAAyB;AAC1C,WAAO,CAAC,CAAC,GAAG7E,KAAK,CAAC,SAAD,CAAT,EAAsB6E,KAAK,CAACiD,MAAN,CAAa,CAACb,MAAM,CAAC,CAAD,CAAP,CAAb,EAA0B1D,MAA1B,CAAiC9C,UAAU,CAACsE,QAA5C,CAAtB,CAAD,EAA+E,CAAC,GAAGhF,KAAK,CAAC,SAAD,CAAT,EAAsB8E,KAAK,CAACiD,MAAN,CAAa,CAACb,MAAM,CAAC,CAAD,CAAP,CAAb,EAA0B1D,MAA1B,CAAiC9C,UAAU,CAACsE,QAA5C,CAAtB,CAA/E,CAAP;AACD,GAFM,EAEJ,CAACE,QAAD,EAAW,CAACA,QAAZ,CAFI,CAAP;AAGD,CAJD;;AAMA,IAAIrH,sBAAsB,GAAG,SAASA,sBAAT,CAAgC+K,WAAhC,EAA6CiJ,UAA7C,EAAyDC,QAAzD,EAAmE;AAC9F,SAAO5U,MAAM,CAACmG,IAAP,CAAYuF,WAAZ,EAAyBhB,MAAzB,CAAgC,UAAUV,MAAV,EAAkBgJ,OAAlB,EAA2B;AAChE,QAAIM,KAAK,GAAG5H,WAAW,CAACsH,OAAD,CAAvB;AACA,QAAIQ,WAAW,GAAGF,KAAK,CAACE,WAAxB;AACA,QAAI3L,MAAM,GAAG2L,WAAW,CAAC9I,MAAZ,CAAmB,UAAU2C,GAAV,EAAezF,KAAf,EAAsB;AACpD,UAAIiN,CAAC,GAAGH,iBAAiB,CAAC9M,KAAK,CAACvC,KAAN,CAAYsP,UAAZ,EAAwBC,QAAQ,GAAG,CAAnC,CAAD,CAAzB;AACA,aAAO,CAAClM,IAAI,CAACU,GAAL,CAASiE,GAAG,CAAC,CAAD,CAAZ,EAAiBwH,CAAC,CAAC,CAAD,CAAlB,CAAD,EAAyBnM,IAAI,CAACW,GAAL,CAASgE,GAAG,CAAC,CAAD,CAAZ,EAAiBwH,CAAC,CAAC,CAAD,CAAlB,CAAzB,CAAP;AACD,KAHY,EAGV,CAAC7M,QAAD,EAAW,CAACA,QAAZ,CAHU,CAAb;AAIA,WAAO,CAACU,IAAI,CAACU,GAAL,CAASvB,MAAM,CAAC,CAAD,CAAf,EAAoBmC,MAAM,CAAC,CAAD,CAA1B,CAAD,EAAiCtB,IAAI,CAACW,GAAL,CAASxB,MAAM,CAAC,CAAD,CAAf,EAAoBmC,MAAM,CAAC,CAAD,CAA1B,CAAjC,CAAP;AACD,GARM,EAQJ,CAAChC,QAAD,EAAW,CAACA,QAAZ,CARI,EAQmBE,GARnB,CAQuB,UAAU8B,MAAV,EAAkB;AAC9C,WAAOA,MAAM,KAAKhC,QAAX,IAAuBgC,MAAM,KAAK,CAAChC,QAAnC,GAA8C,CAA9C,GAAkDgC,MAAzD;AACD,GAVM,CAAP;AAWD,CAZD;;AAcA9J,OAAO,CAACS,sBAAR,GAAiCA,sBAAjC;AACA,IAAID,aAAa,GAAG,iDAApB;AACAR,OAAO,CAACQ,aAAR,GAAwBA,aAAxB;AACA,IAAID,aAAa,GAAG,kDAApB;AACAP,OAAO,CAACO,aAAR,GAAwBA,aAAxB;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8BsU,eAA9B,EAA+CC,UAA/C,EAA2DC,iBAA3D,EAA8E;AACvG,MAAI,CAAC,CAAC,GAAGnS,SAAS,CAAC,SAAD,CAAb,EAA0BiS,eAA1B,CAAL,EAAiD;AAC/C,WAAOC,UAAP;AACD;;AAED,MAAIlN,MAAM,GAAG,EAAb;AACA;;AAEA,MAAI,CAAC,GAAGrE,UAAU,CAACsE,QAAf,EAAyBgN,eAAe,CAAC,CAAD,CAAxC,CAAJ,EAAkD;AAChDjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYmN,iBAAiB,GAAGF,eAAe,CAAC,CAAD,CAAlB,GAAwBpM,IAAI,CAACU,GAAL,CAAS0L,eAAe,CAAC,CAAD,CAAxB,EAA6BC,UAAU,CAAC,CAAD,CAAvC,CAArD;AACD,GAFD,MAEO,IAAIrU,aAAa,CAAC+E,IAAd,CAAmBqP,eAAe,CAAC,CAAD,CAAlC,CAAJ,EAA4C;AACjD,QAAI3U,KAAK,GAAG,CAACO,aAAa,CAACuU,IAAd,CAAmBH,eAAe,CAAC,CAAD,CAAlC,EAAuC,CAAvC,CAAb;AACAjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYkN,UAAU,CAAC,CAAD,CAAV,GAAgB5U,KAA5B;AACD,GAHM,MAGA,IAAI,CAAC,GAAG8C,YAAY,CAAC,SAAD,CAAhB,EAA6B6R,eAAe,CAAC,CAAD,CAA5C,CAAJ,EAAsD;AAC3DjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYiN,eAAe,CAAC,CAAD,CAAf,CAAmBC,UAAU,CAAC,CAAD,CAA7B,CAAZ;AACD,GAFM,MAEA;AACLlN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYkN,UAAU,CAAC,CAAD,CAAtB;AACD;;AAED,MAAI,CAAC,GAAGvR,UAAU,CAACsE,QAAf,EAAyBgN,eAAe,CAAC,CAAD,CAAxC,CAAJ,EAAkD;AAChDjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYmN,iBAAiB,GAAGF,eAAe,CAAC,CAAD,CAAlB,GAAwBpM,IAAI,CAACW,GAAL,CAASyL,eAAe,CAAC,CAAD,CAAxB,EAA6BC,UAAU,CAAC,CAAD,CAAvC,CAArD;AACD,GAFD,MAEO,IAAItU,aAAa,CAACgF,IAAd,CAAmBqP,eAAe,CAAC,CAAD,CAAlC,CAAJ,EAA4C;AACjD,QAAII,MAAM,GAAG,CAACzU,aAAa,CAACwU,IAAd,CAAmBH,eAAe,CAAC,CAAD,CAAlC,EAAuC,CAAvC,CAAd;;AAEAjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYkN,UAAU,CAAC,CAAD,CAAV,GAAgBG,MAA5B;AACD,GAJM,MAIA,IAAI,CAAC,GAAGjS,YAAY,CAAC,SAAD,CAAhB,EAA6B6R,eAAe,CAAC,CAAD,CAA5C,CAAJ,EAAsD;AAC3DjN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYiN,eAAe,CAAC,CAAD,CAAf,CAAmBC,UAAU,CAAC,CAAD,CAA7B,CAAZ;AACD,GAFM,MAEA;AACLlN,IAAAA,MAAM,CAAC,CAAD,CAAN,GAAYkN,UAAU,CAAC,CAAD,CAAtB;AACD;AACD;;;AAGA,SAAOlN,MAAP;AACD,CAlCD;AAmCA;;;;;;;;;AASA3H,OAAO,CAACM,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,iBAAiB,GAAG,SAASA,iBAAT,CAA2BgI,IAA3B,EAAiCF,KAAjC,EAAwC8M,KAAxC,EAA+C;AACrE,MAAI5M,IAAI,IAAIA,IAAI,CAACqH,KAAb,IAAsBrH,IAAI,CAACqH,KAAL,CAAWE,SAArC,EAAgD;AAC9C,QAAIsF,SAAS,GAAG7M,IAAI,CAACqH,KAAL,CAAWE,SAAX,EAAhB;;AAEA,QAAI,CAACqF,KAAD,IAAUC,SAAS,GAAG,CAA1B,EAA6B;AAC3B,aAAOA,SAAP;AACD;AACF;;AAED,MAAI7M,IAAI,IAAIF,KAAR,IAAiBA,KAAK,CAACxC,MAAN,IAAgB,CAArC,EAAwC;AACtC,QAAIwP,YAAY,GAAG,CAAC,GAAG5S,QAAQ,CAAC,SAAD,CAAZ,EAAyB4F,KAAzB,EAAgC,UAAUrD,CAAV,EAAa;AAC9D,aAAOA,CAAC,CAACoD,UAAT;AACD,KAFkB,CAAnB;AAGA,QAAIwE,QAAQ,GAAG5E,QAAf;;AAEA,SAAK,IAAIlC,CAAC,GAAG,CAAR,EAAWF,GAAG,GAAGyP,YAAY,CAACxP,MAAnC,EAA2CC,CAAC,GAAGF,GAA/C,EAAoDE,CAAC,EAArD,EAAyD;AACvD,UAAIgD,GAAG,GAAGuM,YAAY,CAACvP,CAAD,CAAtB;AACA,UAAIyH,IAAI,GAAG8H,YAAY,CAACvP,CAAC,GAAG,CAAL,CAAvB;AACA8G,MAAAA,QAAQ,GAAGlE,IAAI,CAACU,GAAL,CAAS,CAACN,GAAG,CAACV,UAAJ,IAAkB,CAAnB,KAAyBmF,IAAI,CAACnF,UAAL,IAAmB,CAA5C,CAAT,EAAyDwE,QAAzD,CAAX;AACD;;AAED,WAAOA,QAAQ,KAAK5E,QAAb,GAAwB,CAAxB,GAA4B4E,QAAnC;AACD;;AAED,SAAO,CAAP;AACD,CAzBD;AA0BA;;;;;;;;;AASA1M,OAAO,CAACK,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAID,yBAAyB,GAAG,SAASA,yBAAT,CAAmCwU,eAAnC,EAAoDQ,gBAApD,EAAsEC,SAAtE,EAAiF;AAC/G,MAAI,CAACT,eAAD,IAAoB,CAACA,eAAe,CAACjP,MAAzC,EAAiD;AAC/C,WAAOyP,gBAAP;AACD;;AAED,MAAI,CAAC,GAAGhT,SAAS,CAAC,SAAD,CAAb,EAA0BwS,eAA1B,EAA2C,CAAC,GAAG5R,KAAK,CAAC,SAAD,CAAT,EAAsBqS,SAAtB,EAAiC,0BAAjC,CAA3C,CAAJ,EAA8G;AAC5G,WAAOD,gBAAP;AACD;;AAED,SAAOR,eAAP;AACD,CAVD;;AAYA5U,OAAO,CAACI,yBAAR,GAAoCA,yBAApC","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getValueByDataKey = getValueByDataKey;\nexports.getDomainOfDataByKey = getDomainOfDataByKey;\nexports.parseDomainOfCategoryAxis = exports.getBandSizeOfAxis = exports.parseSpecifiedDomain = exports.MAX_VALUE_REG = exports.MIN_VALUE_REG = exports.getDomainOfStackGroups = exports.getStackedDataOfItem = exports.getBaseValueOfBar = exports.getCateCoordinateOfBar = exports.getCateCoordinateOfLine = exports.getTicksOfScale = exports.calculateDomainOfTicks = exports.getStackGroupsByAxisId = exports.getStackedData = exports.offsetSign = exports.truncateByDomain = exports.findPositionOfBar = exports.checkDomainOfScale = exports.parseScale = exports.combineEventHandlers = exports.getTicksOfAxis = exports.getCoordinatesOfGrid = exports.isCategoricalAxis = exports.getDomainOfItemsWithSameAxis = exports.parseErrorBarsOfAxis = exports.getDomainOfErrorBars = exports.appendOffsetOfLegend = exports.getBarPosition = exports.getBarSizeList = exports.getLegendProps = exports.getMainColorOfGraphicItem = exports.calculateActiveTickIndex = void 0;\n\nvar _isEqual2 = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _sortBy2 = _interopRequireDefault(require(\"lodash/sortBy\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _upperFirst2 = _interopRequireDefault(require(\"lodash/upperFirst\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _max2 = _interopRequireDefault(require(\"lodash/max\"));\n\nvar _min2 = _interopRequireDefault(require(\"lodash/min\"));\n\nvar _flatMap2 = _interopRequireDefault(require(\"lodash/flatMap\"));\n\nvar _isFunction2 = _interopRequireDefault(require(\"lodash/isFunction\"));\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isNil2 = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _rechartsScale = require(\"recharts-scale\");\n\nvar d3Scales = _interopRequireWildcard(require(\"d3-scale\"));\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _DataUtils = require(\"./DataUtils\");\n\nvar _Legend = _interopRequireDefault(require(\"../component/Legend\"));\n\nvar _ReactUtils = require(\"./ReactUtils\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction getValueByDataKey(obj, dataKey, defaultValue) {\n  if ((0, _isNil2[\"default\"])(obj) || (0, _isNil2[\"default\"])(dataKey)) {\n    return defaultValue;\n  }\n\n  if ((0, _DataUtils.isNumOrStr)(dataKey)) {\n    return (0, _get2[\"default\"])(obj, dataKey, defaultValue);\n  }\n\n  if ((0, _isFunction2[\"default\"])(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n}\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\n\nfunction getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = (0, _flatMap2[\"default\"])(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return (0, _DataUtils.isNumber)(entry) || parseFloat(entry);\n    });\n    return domain.length ? [(0, _min2[\"default\"])(domain), (0, _max2[\"default\"])(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  }) : flattenData; // 支持Date类型的x轴\n\n  return validateData.map(function (entry) {\n    return (0, _DataUtils.isNumOrStr)(entry) || entry instanceof Date ? entry : '';\n  });\n}\n\nvar calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if ((0, _DataUtils.mathSign)(cur - before) !== (0, _DataUtils.mathSign)(after - cur)) {\n          var diffInterval = [];\n\n          if ((0, _DataUtils.mathSign)(after - cur) === (0, _DataUtils.mathSign)(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\n\nexports.calculateActiveTickIndex = calculateActiveTickIndex;\n\nvar getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var _ref = item,\n      displayName = _ref.type.displayName; // TODO: check if displayName is valid.\n\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n}; // TODO: Formated -> Formatted.\n\n\nexports.getMainColorOfGraphicItem = getMainColorOfGraphicItem;\n\nvar getLegendProps = function getLegendProps(_ref2) {\n  var children = _ref2.children,\n      formatedGraphicalItems = _ref2.formatedGraphicalItems,\n      legendWidth = _ref2.legendWidth,\n      legendContent = _ref2.legendContent;\n  var legendItem = (0, _ReactUtils.findChildByType)(children, _Legend[\"default\"].displayName);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref3) {\n      var item = _ref3.item,\n          props = _ref3.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref4) {\n      var item = _ref4.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, _Legend[\"default\"].getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\n\nexports.getLegendProps = getLegendProps;\n\nvar getBarSizeList = function getBarSizeList(_ref5) {\n  var globalSize = _ref5.barSize,\n      _ref5$stackGroups = _ref5.stackGroups,\n      stackGroups = _ref5$stackGroups === void 0 ? {} : _ref5$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return (0, _ReactUtils.getDisplayName)(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: (0, _isNil2[\"default\"])(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Calculate the size of each bar and the gap between two bars\n * @param  {Number} bandSize  The size of each category\n * @param  {sizeList} sizeList  The size of all groups\n * @param  {maxBarSize} maxBarSize The maximum size of bar\n * @return {Number} The size of each bar and the gap between two bars\n */\n\n\nexports.getBarSizeList = getBarSizeList;\n\nvar getBarPosition = function getBarPosition(_ref6) {\n  var barGap = _ref6.barGap,\n      barCategoryGap = _ref6.barCategoryGap,\n      bandSize = _ref6.bandSize,\n      _ref6$sizeList = _ref6.sizeList,\n      sizeList = _ref6$sizeList === void 0 ? [] : _ref6$sizeList,\n      maxBarSize = _ref6.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = (0, _DataUtils.getPercentValue)(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = (0, _DataUtils.getPercentValue)(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\n\nexports.getBarPosition = getBarPosition;\n\nvar appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0); // const legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n\n  var legendProps = getLegendProps({\n    children: children,\n    legendWidth: legendWidth\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && (0, _DataUtils.isNumber)(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && (0, _DataUtils.isNumber)(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\n\nexports.appendOffsetOfLegend = appendOffsetOfLegend;\n\nvar getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = (0, _ReactUtils.findAllByType)(children, 'ErrorBar').filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return (0, _isNil2[\"default\"])(direction) || (0, _isNil2[\"default\"])(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = (0, _isArray2[\"default\"])(entryValue) ? [(0, _min2[\"default\"])(entryValue), (0, _max2[\"default\"])(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs((0, _isArray2[\"default\"])(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n\nexports.getDomainOfErrorBars = getDomainOfErrorBars;\n\nvar parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !(0, _isNil2[\"default\"])(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\n\nexports.parseErrorBarsOfAxis = parseErrorBarsOfAxis;\n\nvar getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\n\nexports.getDomainOfItemsWithSameAxis = getDomainOfItemsWithSameAxis;\n\nvar isCategoricalAxis = function isCategoricalAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\n\nexports.isCategoricalAxis = isCategoricalAxis;\n\nvar getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\n\nexports.getCoordinatesOfGrid = getCoordinatesOfGrid;\n\nvar getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? (0, _DataUtils.mathSign)(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis is a categorial axis, but the type of axis is number or the scale of axis is not \"auto\"\n\n\n  if (axis.isCategorical && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\n\nexports.getTicksOfAxis = getTicksOfAxis;\n\nvar combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if ((0, _isFunction2[\"default\"])(childHandler)) {\n    customizedHandler = childHandler;\n  } else if ((0, _isFunction2[\"default\"])(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if ((0, _isFunction2[\"default\"])(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if ((0, _isFunction2[\"default\"])(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if ((0, _isFunction2[\"default\"])(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\n\nexports.combineEventHandlers = combineEventHandlers;\n\nvar parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0 || chartType.indexOf('ComposedChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if ((0, _isString2[\"default\"])(scale)) {\n    var name = \"scale\".concat((0, _upperFirst2[\"default\"])(scale));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return (0, _isFunction2[\"default\"])(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\n\nexports.parseScale = parseScale;\nvar EPS = 1e-4;\n\nvar checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\n\nexports.checkDomainOfScale = checkDomainOfScale;\n\nvar findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\n\nexports.findPositionOfBar = findPositionOfBar;\n\nvar truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !(0, _DataUtils.isNumber)(domain[0]) || !(0, _DataUtils.isNumber)(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!(0, _DataUtils.isNumber)(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!(0, _DataUtils.isNumber)(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\n\nexports.truncateByDomain = truncateByDomain;\n\nvar offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = (0, _isNaN2[\"default\"])(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\n\nexports.offsetSign = offsetSign;\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: _d3Shape.stackOffsetExpand,\n  none: _d3Shape.stackOffsetNone,\n  silhouette: _d3Shape.stackOffsetSilhouette,\n  wiggle: _d3Shape.stackOffsetWiggle\n};\n\nvar getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = (0, _d3Shape.stack)().keys(dataKeys).value(function (d, key) {\n    return Math.max(+getValueByDataKey(d, key, 0), 0);\n  }).order(_d3Shape.stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\n\nexports.getStackedData = getStackedData;\n\nvar getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if ((0, _DataUtils.isNumOrStr)(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[(0, _DataUtils.uniqueId)('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\n\nexports.getStackGroupsByAxisId = getStackGroupsByAxisId;\n\nvar calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [(0, _min2[\"default\"])(ticks), (0, _max2[\"default\"])(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\n\nexports.calculateDomainOfTicks = calculateDomainOfTicks;\n\nvar getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n\n    if (!domain.length) {\n      return null;\n    }\n\n    var tickValues = (0, _rechartsScale.getNiceTickValues)(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = (0, _rechartsScale.getTickValuesFixedDomain)(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\n\nexports.getTicksOfScale = getTicksOfScale;\n\nvar getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index,\n      dataKey = _ref7.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !(0, _isNil2[\"default\"])(entry[axis.dataKey])) {\n      var matchedTick = (0, _DataUtils.findEntryInArray)(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !(0, _isNil2[\"default\"])(dataKey) ? dataKey : axis.dataKey);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) : null;\n};\n\nexports.getCateCoordinateOfLine = getCateCoordinateOfLine;\n\nvar getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref8) {\n  var axis = _ref8.axis,\n      ticks = _ref8.ticks,\n      offset = _ref8.offset,\n      bandSize = _ref8.bandSize,\n      entry = _ref8.entry,\n      index = _ref8.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !(0, _isNil2[\"default\"])(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\n\nexports.getCateCoordinateOfBar = getCateCoordinateOfBar;\n\nvar getBaseValueOfBar = function getBaseValueOfBar(_ref9) {\n  var numericAxis = _ref9.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\n\nexports.getBaseValueOfBar = getBaseValueOfBar;\n\nvar getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if ((0, _DataUtils.isNumOrStr)(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nexports.getStackedDataOfItem = getStackedDataOfItem;\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [(0, _min2[\"default\"])(entry.concat([result[0]]).filter(_DataUtils.isNumber)), (0, _max2[\"default\"])(entry.concat([result[1]]).filter(_DataUtils.isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nvar getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\n\nexports.getDomainOfStackGroups = getDomainOfStackGroups;\nvar MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MIN_VALUE_REG = MIN_VALUE_REG;\nvar MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexports.MAX_VALUE_REG = MAX_VALUE_REG;\n\nvar parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!(0, _isArray2[\"default\"])(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if ((0, _DataUtils.isNumber)(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if ((0, _isFunction2[\"default\"])(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @param  {Boolean} isBar if items in axis are bars\n * @return {Number} Size\n */\n\n\nexports.parseSpecifiedDomain = parseSpecifiedDomain;\n\nvar getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks, isBar) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    var bandWidth = axis.scale.bandwidth();\n\n    if (!isBar || bandWidth > 0) {\n      return bandWidth;\n    }\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = (0, _sortBy2[\"default\"])(ticks, function (o) {\n      return o.coordinate;\n    });\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\n\nexports.getBandSizeOfAxis = getBandSizeOfAxis;\n\nvar parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if ((0, _isEqual2[\"default\"])(specifiedDomain, (0, _get2[\"default\"])(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};\n\nexports.parseDomainOfCategoryAxis = parseDomainOfCategoryAxis;"]},"metadata":{},"sourceType":"script"}