{"ast":null,"code":"import _slicedToArray from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport DataType from \"./types/DataType.js\";\nimport isDescendantOf from \"./util/isDescendantOf.js\";\nimport { camelToKebabCase } from \"./util/StringHelper.js\";\n/**\n *\n * @class\n * @public\n */\n\nvar UI5ElementMetadata = /*#__PURE__*/function () {\n  function UI5ElementMetadata(metadata) {\n    _classCallCheck(this, UI5ElementMetadata);\n\n    this.metadata = metadata;\n  }\n  /**\n   * Only intended for use by UI5Element.js\n   * @protected\n   */\n\n\n  _createClass(UI5ElementMetadata, [{\n    key: \"getTag\",\n\n    /**\n     * Returns the tag of the UI5 Element\n     * @public\n     */\n    value: function getTag() {\n      return this.metadata.tag;\n    }\n    /**\n     * Determines whether a property should have an attribute counterpart\n     * @public\n     * @param propName\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"hasAttribute\",\n    value: function hasAttribute(propName) {\n      var propData = this.getProperties()[propName];\n      return propData.type !== Object && !propData.noAttribute;\n    }\n    /**\n     * Returns an array with the properties of the UI5 Element (in camelCase)\n     * @public\n     * @returns {string[]}\n     */\n\n  }, {\n    key: \"getPropertiesList\",\n    value: function getPropertiesList() {\n      return Object.keys(this.getProperties());\n    }\n    /**\n     * Returns an array with the attributes of the UI5 Element (in kebab-case)\n     * @public\n     * @returns {string[]}\n     */\n\n  }, {\n    key: \"getAttributesList\",\n    value: function getAttributesList() {\n      return this.getPropertiesList().filter(this.hasAttribute, this).map(camelToKebabCase);\n    }\n    /**\n     * Returns an object with key-value pairs of slots and their metadata definitions\n     * @public\n     */\n\n  }, {\n    key: \"getSlots\",\n    value: function getSlots() {\n      return this.metadata.slots || {};\n    }\n    /**\n     * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"canSlotText\",\n    value: function canSlotText() {\n      var defaultSlot = this.getSlots().default;\n      return defaultSlot && defaultSlot.type === Node;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots\n     * @public\n     */\n\n  }, {\n    key: \"hasSlots\",\n    value: function hasSlots() {\n      return !!Object.entries(this.getSlots()).length;\n    }\n    /**\n     * Determines whether this UI5 Element supports any slots with \"individualSlots: true\"\n     * @public\n     */\n\n  }, {\n    key: \"hasIndividualSlots\",\n    value: function hasIndividualSlots() {\n      return this.slotsAreManaged() && Object.entries(this.getSlots()).some(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            _slotName = _ref2[0],\n            slotData = _ref2[1];\n\n        return slotData.individualSlots;\n      });\n    }\n    /**\n     * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed\n     * @public\n     */\n\n  }, {\n    key: \"slotsAreManaged\",\n    value: function slotsAreManaged() {\n      return !!this.metadata.managedSlots;\n    }\n    /**\n     * Returns an object with key-value pairs of properties and their metadata definitions\n     * @public\n     */\n\n  }, {\n    key: \"getProperties\",\n    value: function getProperties() {\n      return this.metadata.properties || {};\n    }\n    /**\n     * Returns an object with key-value pairs of events and their metadata definitions\n     * @public\n     */\n\n  }, {\n    key: \"getEvents\",\n    value: function getEvents() {\n      return this.metadata.events || {};\n    }\n  }], [{\n    key: \"validatePropertyValue\",\n    value: function validatePropertyValue(value, propData) {\n      var isMultiple = propData.multiple;\n\n      if (isMultiple) {\n        return value.map(function (propValue) {\n          return validateSingleProperty(propValue, propData);\n        });\n      }\n\n      return validateSingleProperty(value, propData);\n    }\n    /**\n     * Only intended for use by UI5Element.js\n     * @protected\n     */\n\n  }, {\n    key: \"validateSlotValue\",\n    value: function validateSlotValue(value, slotData) {\n      return validateSingleSlot(value, slotData);\n    }\n  }]);\n\n  return UI5ElementMetadata;\n}();\n\nvar validateSingleProperty = function validateSingleProperty(value, propData) {\n  var propertyType = propData.type;\n\n  if (propertyType === Boolean) {\n    return typeof value === \"boolean\" ? value : false;\n  }\n\n  if (propertyType === String) {\n    return typeof value === \"string\" || typeof value === \"undefined\" || value === null ? value : value.toString();\n  }\n\n  if (propertyType === Object) {\n    return typeof value === \"object\" ? value : propData.defaultValue;\n  }\n\n  if (isDescendantOf(propertyType, DataType)) {\n    return propertyType.isValid(value) ? value : propData.defaultValue;\n  }\n};\n\nvar validateSingleSlot = function validateSingleSlot(value, slotData) {\n  if (value === null) {\n    return value;\n  }\n\n  var getSlottedNodes = function getSlottedNodes(el) {\n    var isTag = el instanceof HTMLElement;\n    var isSlot = isTag && el.localName === \"slot\";\n\n    if (isSlot) {\n      return el.assignedNodes({\n        flatten: true\n      }).filter(function (item) {\n        return item instanceof HTMLElement;\n      });\n    }\n\n    return [el];\n  };\n\n  var slottedNodes = getSlottedNodes(value);\n  slottedNodes.forEach(function (el) {\n    if (!(el instanceof slotData.type)) {\n      throw new Error(\"\".concat(el, \" is not of type \").concat(slotData.type));\n    }\n  });\n  return value;\n};\n\nexport default UI5ElementMetadata;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js"],"names":["DataType","isDescendantOf","camelToKebabCase","UI5ElementMetadata","metadata","tag","propName","propData","getProperties","type","Object","noAttribute","keys","getPropertiesList","filter","hasAttribute","map","slots","defaultSlot","getSlots","default","Node","entries","length","slotsAreManaged","some","_slotName","slotData","individualSlots","managedSlots","properties","events","value","isMultiple","multiple","propValue","validateSingleProperty","validateSingleSlot","propertyType","Boolean","String","toString","defaultValue","isValid","getSlottedNodes","el","isTag","HTMLElement","isSlot","localName","assignedNodes","flatten","item","slottedNodes","forEach","Error"],"mappings":"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","sourcesContent":["import DataType from \"./types/DataType.js\";\nimport isDescendantOf from \"./util/isDescendantOf.js\";\nimport { camelToKebabCase } from \"./util/StringHelper.js\";\n\n/**\n *\n * @class\n * @public\n */\nclass UI5ElementMetadata {\n\tconstructor(metadata) {\n\t\tthis.metadata = metadata;\n\t}\n\n\t/**\n\t * Only intended for use by UI5Element.js\n\t * @protected\n\t */\n\tstatic validatePropertyValue(value, propData) {\n\t\tconst isMultiple = propData.multiple;\n\t\tif (isMultiple) {\n\t\t\treturn value.map(propValue => validateSingleProperty(propValue, propData));\n\t\t}\n\t\treturn validateSingleProperty(value, propData);\n\t}\n\n\t/**\n\t * Only intended for use by UI5Element.js\n\t * @protected\n\t */\n\tstatic validateSlotValue(value, slotData) {\n\t\treturn validateSingleSlot(value, slotData);\n\t}\n\n\t/**\n\t * Returns the tag of the UI5 Element\n\t * @public\n\t */\n\tgetTag() {\n\t\treturn this.metadata.tag;\n\t}\n\n\t/**\n\t * Determines whether a property should have an attribute counterpart\n\t * @public\n\t * @param propName\n\t * @returns {boolean}\n\t */\n\thasAttribute(propName) {\n\t\tconst propData = this.getProperties()[propName];\n\t\treturn propData.type !== Object && !propData.noAttribute;\n\t}\n\n\t/**\n\t * Returns an array with the properties of the UI5 Element (in camelCase)\n\t * @public\n\t * @returns {string[]}\n\t */\n\tgetPropertiesList() {\n\t\treturn Object.keys(this.getProperties());\n\t}\n\n\t/**\n\t * Returns an array with the attributes of the UI5 Element (in kebab-case)\n\t * @public\n\t * @returns {string[]}\n\t */\n\tgetAttributesList() {\n\t\treturn this.getPropertiesList().filter(this.hasAttribute, this).map(camelToKebabCase);\n\t}\n\n\t/**\n\t * Returns an object with key-value pairs of slots and their metadata definitions\n\t * @public\n\t */\n\tgetSlots() {\n\t\treturn this.metadata.slots || {};\n\t}\n\n\t/**\n\t * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text\n\t * @returns {boolean}\n\t */\n\tcanSlotText() {\n\t\tconst defaultSlot = this.getSlots().default;\n\t\treturn defaultSlot && defaultSlot.type === Node;\n\t}\n\n\t/**\n\t * Determines whether this UI5 Element supports any slots\n\t * @public\n\t */\n\thasSlots() {\n\t\treturn !!Object.entries(this.getSlots()).length;\n\t}\n\n\t/**\n\t * Determines whether this UI5 Element supports any slots with \"individualSlots: true\"\n\t * @public\n\t */\n\thasIndividualSlots() {\n\t\treturn this.slotsAreManaged() && Object.entries(this.getSlots()).some(([_slotName, slotData]) => slotData.individualSlots);\n\t}\n\n\t/**\n\t * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed\n\t * @public\n\t */\n\tslotsAreManaged() {\n\t\treturn !!this.metadata.managedSlots;\n\t}\n\n\t/**\n\t * Returns an object with key-value pairs of properties and their metadata definitions\n\t * @public\n\t */\n\tgetProperties() {\n\t\treturn this.metadata.properties || {};\n\t}\n\n\t/**\n\t * Returns an object with key-value pairs of events and their metadata definitions\n\t * @public\n\t */\n\tgetEvents() {\n\t\treturn this.metadata.events || {};\n\t}\n}\n\nconst validateSingleProperty = (value, propData) => {\n\tconst propertyType = propData.type;\n\n\tif (propertyType === Boolean) {\n\t\treturn typeof value === \"boolean\" ? value : false;\n\t}\n\tif (propertyType === String) {\n\t\treturn (typeof value === \"string\" || typeof value === \"undefined\" || value === null) ? value : value.toString();\n\t}\n\tif (propertyType === Object) {\n\t\treturn typeof value === \"object\" ? value : propData.defaultValue;\n\t}\n\tif (isDescendantOf(propertyType, DataType)) {\n\t\treturn propertyType.isValid(value) ? value : propData.defaultValue;\n\t}\n};\n\nconst validateSingleSlot = (value, slotData) => {\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tconst getSlottedNodes = el => {\n\t\tconst isTag = el instanceof HTMLElement;\n\t\tconst isSlot = isTag && el.localName === \"slot\";\n\n\t\tif (isSlot) {\n\t\t\treturn el.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement);\n\t\t}\n\n\t\treturn [el];\n\t};\n\n\tconst slottedNodes = getSlottedNodes(value);\n\tslottedNodes.forEach(el => {\n\t\tif (!(el instanceof slotData.type)) {\n\t\t\tthrow new Error(`${el} is not of type ${slotData.type}`);\n\t\t}\n\t});\n\n\treturn value;\n};\n\nexport default UI5ElementMetadata;\n"]},"metadata":{},"sourceType":"module"}