{"ast":null,"code":"import _classCallCheck from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar RadioButtonGroup = /*#__PURE__*/function () {\n  function RadioButtonGroup() {\n    _classCallCheck(this, RadioButtonGroup);\n  }\n\n  _createClass(RadioButtonGroup, null, [{\n    key: \"hasGroup\",\n    value: function hasGroup(groupName) {\n      return this.groups.has(groupName);\n    }\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupName) {\n      return this.groups.get(groupName);\n    }\n  }, {\n    key: \"getSelectedRadioFromGroup\",\n    value: function getSelectedRadioFromGroup(groupName) {\n      return this.selectedRadios.get(groupName);\n    }\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(groupName) {\n      this.selectedRadios.delete(groupName);\n      return this.groups.delete(groupName);\n    }\n  }, {\n    key: \"addToGroup\",\n    value: function addToGroup(radioBtn, groupName) {\n      if (this.hasGroup(groupName)) {\n        this.enforceSingleSelection(radioBtn, groupName);\n        this.getGroup(groupName).push(radioBtn);\n      } else {\n        this.createGroup(radioBtn, groupName);\n      }\n    }\n  }, {\n    key: \"removeFromGroup\",\n    value: function removeFromGroup(radioBtn, groupName) {\n      if (!this.hasGroup(groupName)) {\n        return;\n      }\n\n      var group = this.getGroup(groupName);\n      var selectedRadio = this.getSelectedRadioFromGroup(groupName); // Remove the radio button from the given group\n\n      group.forEach(function (_radioBtn, idx, arr) {\n        if (radioBtn._id === _radioBtn._id) {\n          return arr.splice(idx, 1);\n        }\n      });\n\n      if (selectedRadio === radioBtn) {\n        this.selectedRadios.set(groupName, null);\n      } // Remove the group if it is empty\n\n\n      if (!group.length) {\n        this.removeGroup(groupName);\n      }\n    }\n  }, {\n    key: \"createGroup\",\n    value: function createGroup(radioBtn, groupName) {\n      if (radioBtn.selected) {\n        this.selectedRadios.set(groupName, radioBtn);\n      }\n\n      this.groups.set(groupName, [radioBtn]);\n    }\n  }, {\n    key: \"selectNextItem\",\n    value: function selectNextItem(item, groupName) {\n      var group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n      if (groupLength <= 1) {\n        return;\n      }\n\n      var nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n      this.updateSelectionInGroup(nextItemToSelect, groupName);\n    }\n  }, {\n    key: \"selectPreviousItem\",\n    value: function selectPreviousItem(item, groupName) {\n      var group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n      if (groupLength <= 1) {\n        return;\n      }\n\n      var previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n      this.updateSelectionInGroup(previousItemToSelect, groupName);\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(item, groupName) {\n      this.updateSelectionInGroup(item, groupName);\n    }\n  }, {\n    key: \"updateSelectionInGroup\",\n    value: function updateSelectionInGroup(radioBtnToSelect, groupName) {\n      var selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n      this._deselectRadio(selectedRadio);\n\n      this._selectRadio(radioBtnToSelect);\n\n      this.selectedRadios.set(groupName, radioBtnToSelect);\n    }\n  }, {\n    key: \"_deselectRadio\",\n    value: function _deselectRadio(radioBtn) {\n      if (radioBtn) {\n        radioBtn.selected = false;\n      }\n    }\n  }, {\n    key: \"_selectRadio\",\n    value: function _selectRadio(radioBtn) {\n      if (radioBtn) {\n        radioBtn.focus();\n        radioBtn.selected = true;\n        radioBtn._selected = true;\n        radioBtn.fireEvent(\"select\");\n      }\n    }\n  }, {\n    key: \"_nextSelectable\",\n    value: function _nextSelectable(pos, group) {\n      var groupLength = group.length;\n      var nextRadioToSelect = null;\n\n      if (pos === groupLength - 1) {\n        if (group[0].disabled || group[0].readonly) {\n          return this._nextSelectable(1, group);\n        }\n\n        nextRadioToSelect = group[0];\n      } else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n        return this._nextSelectable(pos + 1, group);\n      } else {\n        nextRadioToSelect = group[pos + 1];\n      }\n\n      return nextRadioToSelect;\n    }\n  }, {\n    key: \"_previousSelectable\",\n    value: function _previousSelectable(pos, group) {\n      var groupLength = group.length;\n      var previousRadioToSelect = null;\n\n      if (pos === 0) {\n        if (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n          return this._previousSelectable(groupLength - 1, group);\n        }\n\n        previousRadioToSelect = group[groupLength - 1];\n      } else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n        return this._previousSelectable(pos - 1, group);\n      } else {\n        previousRadioToSelect = group[pos - 1];\n      }\n\n      return previousRadioToSelect;\n    }\n  }, {\n    key: \"enforceSingleSelection\",\n    value: function enforceSingleSelection(radioBtn, groupName) {\n      var selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n      if (radioBtn.selected) {\n        if (!selectedRadio) {\n          this.selectedRadios.set(groupName, radioBtn);\n        } else if (radioBtn !== selectedRadio) {\n          this._deselectRadio(selectedRadio);\n\n          this.selectedRadios.set(groupName, radioBtn);\n        }\n      } else if (radioBtn === selectedRadio) {\n        this.selectedRadios.set(groupName, null);\n      }\n    }\n  }, {\n    key: \"groups\",\n    get: function get() {\n      if (!this._groups) {\n        this._groups = new Map();\n      }\n\n      return this._groups;\n    }\n  }, {\n    key: \"selectedRadios\",\n    get: function get() {\n      if (!this._selectedRadios) {\n        this._selectedRadios = new Map();\n      }\n\n      return this._selectedRadios;\n    }\n  }]);\n\n  return RadioButtonGroup;\n}();\n\nexport default RadioButtonGroup;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/RadioButtonGroup.js"],"names":["RadioButtonGroup","groupName","groups","has","get","selectedRadios","delete","radioBtn","hasGroup","enforceSingleSelection","getGroup","push","createGroup","group","selectedRadio","getSelectedRadioFromGroup","forEach","_radioBtn","idx","arr","_id","splice","set","length","removeGroup","selected","item","groupLength","currentItemPosition","indexOf","nextItemToSelect","_nextSelectable","updateSelectionInGroup","previousItemToSelect","_previousSelectable","radioBtnToSelect","_deselectRadio","_selectRadio","focus","_selected","fireEvent","pos","nextRadioToSelect","disabled","readonly","previousRadioToSelect","_groups","Map","_selectedRadios"],"mappings":"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","sourcesContent":["class RadioButtonGroup {\n\tstatic hasGroup(groupName) {\n\t\treturn this.groups.has(groupName);\n\t}\n\n\tstatic getGroup(groupName) {\n\t\treturn this.groups.get(groupName);\n\t}\n\n\tstatic getSelectedRadioFromGroup(groupName) {\n\t\treturn this.selectedRadios.get(groupName);\n\t}\n\n\tstatic removeGroup(groupName) {\n\t\tthis.selectedRadios.delete(groupName);\n\t\treturn this.groups.delete(groupName);\n\t}\n\n\tstatic addToGroup(radioBtn, groupName) {\n\t\tif (this.hasGroup(groupName)) {\n\t\t\tthis.enforceSingleSelection(radioBtn, groupName);\n\t\t\tthis.getGroup(groupName).push(radioBtn);\n\t\t} else {\n\t\t\tthis.createGroup(radioBtn, groupName);\n\t\t}\n\t}\n\n\tstatic removeFromGroup(radioBtn, groupName) {\n\t\tif (!this.hasGroup(groupName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this.getGroup(groupName);\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\t// Remove the radio button from the given group\n\t\tgroup.forEach((_radioBtn, idx, arr) => {\n\t\t\tif (radioBtn._id === _radioBtn._id) {\n\t\t\t\treturn arr.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tif (selectedRadio === radioBtn) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\n\t\t// Remove the group if it is empty\n\t\tif (!group.length) {\n\t\t\tthis.removeGroup(groupName);\n\t\t}\n\t}\n\n\tstatic createGroup(radioBtn, groupName) {\n\t\tif (radioBtn.selected) {\n\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t}\n\n\t\tthis.groups.set(groupName, [radioBtn]);\n\t}\n\n\tstatic selectNextItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(nextItemToSelect, groupName);\n\t}\n\n\tstatic selectPreviousItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(previousItemToSelect, groupName);\n\t}\n\n\tstatic selectItem(item, groupName) {\n\t\tthis.updateSelectionInGroup(item, groupName);\n\t}\n\n\tstatic updateSelectionInGroup(radioBtnToSelect, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tthis._deselectRadio(selectedRadio);\n\t\tthis._selectRadio(radioBtnToSelect);\n\t\tthis.selectedRadios.set(groupName, radioBtnToSelect);\n\t}\n\n\tstatic _deselectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.selected = false;\n\t\t}\n\t}\n\n\tstatic _selectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.focus();\n\t\t\tradioBtn.selected = true;\n\t\t\tradioBtn._selected = true;\n\t\t\tradioBtn.fireEvent(\"select\");\n\t\t}\n\t}\n\n\tstatic _nextSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet nextRadioToSelect = null;\n\n\t\tif (pos === groupLength - 1) {\n\t\t\tif (group[0].disabled || group[0].readonly) {\n\t\t\t\treturn this._nextSelectable(1, group);\n\t\t\t}\n\t\t\tnextRadioToSelect = group[0];\n\t\t} else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n\t\t\treturn this._nextSelectable(pos + 1, group);\n\t\t} else {\n\t\t\tnextRadioToSelect = group[pos + 1];\n\t\t}\n\n\t\treturn nextRadioToSelect;\n\t}\n\n\tstatic _previousSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet previousRadioToSelect = null;\n\t\tif (pos === 0) {\n\t\t\tif (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n\t\t\t\treturn this._previousSelectable(groupLength - 1, group);\n\t\t\t}\n\t\t\tpreviousRadioToSelect = group[groupLength - 1];\n\t\t} else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n\t\t\treturn this._previousSelectable(pos - 1, group);\n\t\t} else {\n\t\t\tpreviousRadioToSelect = group[pos - 1];\n\t\t}\n\n\t\treturn previousRadioToSelect;\n\t}\n\n\tstatic enforceSingleSelection(radioBtn, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tif (radioBtn.selected) {\n\t\t\tif (!selectedRadio) {\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t} else if (radioBtn !== selectedRadio) {\n\t\t\t\tthis._deselectRadio(selectedRadio);\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t}\n\t\t} else if (radioBtn === selectedRadio) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\t}\n\n\tstatic get groups() {\n\t\tif (!this._groups) {\n\t\t\tthis._groups = new Map();\n\t\t}\n\t\treturn this._groups;\n\t}\n\n\tstatic get selectedRadios() {\n\t\tif (!this._selectedRadios) {\n\t\t\tthis._selectedRadios = new Map();\n\t\t}\n\t\treturn this._selectedRadios;\n\t}\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}