{"ast":null,"code":"import _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport React, { useMemo } from 'react';\nimport ContentLoader from 'react-content-loader';\n\nvar getArrayOfLength = function getArrayOfLength(len) {\n  return Array.from(Array(len).keys());\n};\n\nvar TableRow = function TableRow(_ref) {\n  var columns = _ref.columns,\n      y = _ref.y,\n      row = _ref.row;\n  var columnOffset = 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columns.map(function (column, i) {\n    var el = /*#__PURE__*/React.createElement(\"rect\", {\n      key: \"column-\".concat(i, \"-row-\").concat(row),\n      x: columnOffset + 2,\n      y: y,\n      rx: \"2\",\n      ry: \"8\",\n      width: column.totalWidth - 4,\n      height: \"16\"\n    });\n    columnOffset += column.totalWidth;\n    return el;\n  }));\n};\n\nvar TablePlaceholder = function TablePlaceholder(props) {\n  var columns = props.columns,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 5 : _props$rows,\n      style = props.style,\n      rowHeight = props.rowHeight,\n      tableWidth = props.tableWidth;\n  var height = rows * rowHeight;\n  var innerStyles = useMemo(function () {\n    return _objectSpread({\n      backgroundColor: ThemingParameters.sapList_Background\n    }, style);\n  }, [style, ThemingParameters.sapList_Background]);\n  return /*#__PURE__*/React.createElement(ContentLoader, {\n    style: innerStyles,\n    height: height,\n    width: tableWidth,\n    speed: 2,\n    backgroundColor: ThemingParameters.sapContent_ImagePlaceholderBackground,\n    foregroundColor: ThemingParameters.sapContent_ImagePlaceholderForegroundColor,\n    backgroundOpacity: ThemingParameters.sapContent_DisabledOpacity\n  }, getArrayOfLength(rows).map(function (_, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      columns: columns,\n      y: rowHeight * index + rowHeight / 2,\n      row: index\n    });\n  }));\n};\n\nexport { TablePlaceholder };","map":{"version":3,"sources":["../src/components/AnalyticalTable/defaults/LoadingComponent/TablePlaceholder.tsx"],"names":["getArrayOfLength","Array","TableRow","columns","y","row","columnOffset","el","column","TablePlaceholder","rows","style","rowHeight","tableWidth","props","height","innerStyles","useMemo","backgroundColor","ThemingParameters","sapList_Background","sapContent_DisabledOpacity","index"],"mappings":";;;;;AAIA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,GAAA,EAAA;AAAA,SAASC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,GAAK,CAALA,CAApB,IAAoBA,EAAXA,CAAT;AAAzB,CAAA;;AAGA,IAAMC,QAAsB,GAAG,SAAzBA,QAAyB,CAAA,IAAA,EAAmC;AAAA,MAAhCC,OAAgC,GAAA,IAAA,CAAhCA,OAAgC;AAAA,MAAvBC,CAAuB,GAAA,IAAA,CAAvBA,CAAuB;AAAA,MAApBC,GAAoB,GAAA,IAAA,CAApBA,GAAoB;AAChE,MAAIC,YAAY,GAAhB,CAAA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA,CAAA,EAAe;AAC1B,QAAMC,EAAE,GAAA,aACN,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,GAAG,EAAA,UAAA,MAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,CADL,GACK,CADL;AAEE,MAAA,CAAC,EAAED,YAAY,GAFjB,CAAA;AAGE,MAAA,CAAC,EAHH,CAAA;AAIE,MAAA,EAAE,EAJJ,GAAA;AAKE,MAAA,EAAE,EALJ,GAAA;AAME,MAAA,KAAK,EAAEE,MAAM,CAANA,UAAAA,GANT,CAAA;AAOE,MAAA,MAAM,EAAC;AAPT,KAAA,CADF;AAWAF,IAAAA,YAAY,IAAIE,MAAM,CAAtBF,UAAAA;AACA,WAAA,EAAA;AAfN,GAEK,CADH,CADF;AAFF,CAAA;;IAwBaG,gBAA2B,GAAG,SAA9BA,gBAA8B,CAAA,KAAA,EAAkB;AAAA,MACnDN,OADmD,GACCW,KADD,CAAA,OAAA;AAAA,MAAA,WAAA,GACCA,KADD,CAAA,IAAA;AAAA,MAC1CJ,IAD0C,GAAA,WAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,WAAA;AAAA,MAChCC,KADgC,GACCG,KADD,CAAA,KAAA;AAAA,MACzBF,SADyB,GACCE,KADD,CAAA,SAAA;AAAA,MACdD,UADc,GACCC,KADD,CAAA,UAAA;AAG3D,MAAMC,MAAM,GAAGL,IAAI,GAAnB,SAAA;AAEA,MAAMM,WAAW,GAAGC,OAAO,CAAC,YAAM;AAChC,WAAA,aAAA,CAAA;AACEC,MAAAA,eAAe,EAAEC,iBAAiB,CAACC;AADrC,KAAA,EAAA,KAAA,CAAA;AADyB,GAAA,EAKxB,CAAA,KAAA,EAAQD,iBAAiB,CAL5B,kBAKG,CALwB,CAA3B;AAOA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AACE,IAAA,KAAK,EADP,WAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,KAAK,EAHP,UAAA;AAIE,IAAA,KAAK,EAJP,CAAA;AAKE,IAAA,eAAe,EAAEA,iBAAiB,CALpC,qCAAA;AAME,IAAA,eAAe,EAAEA,iBAAiB,CANpC,0CAAA;AAOE,IAAA,iBAAiB,EAAEA,iBAAiB,CAACE;AAPvC,GAAA,EASG,gBAAgB,CAAhB,IAAgB,CAAhB,CAAA,GAAA,CAA2B,UAAA,CAAA,EAAA,KAAA,EAAA;AAAA,WAAA,aAC1B,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,MAAA,GAAG,EAAb,KAAA;AAAsB,MAAA,OAAO,EAA7B,OAAA;AAAwC,MAAA,CAAC,EAAET,SAAS,GAATA,KAAAA,GAAoBA,SAAS,GAAxE,CAAA;AAA8E,MAAA,GAAG,EAAEU;AAAnF,KAAA,CAD0B;AAVhC,GAUK,CATH,CADF;AAeD,C","sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport React, { CSSProperties, FC, useMemo } from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst getArrayOfLength = (len) => Array.from(Array(len).keys());\n\ntype RowProps = { columns: any[]; y: number; row: number };\nconst TableRow: FC<RowProps> = ({ columns, y, row }: RowProps) => {\n  let columnOffset = 0;\n  return (\n    <>\n      {columns.map((column, i) => {\n        const el = (\n          <rect\n            key={`column-${i}-row-${row}`}\n            x={columnOffset + 2}\n            y={y}\n            rx=\"2\"\n            ry=\"8\"\n            width={column.totalWidth - 4}\n            height=\"16\"\n          />\n        );\n        columnOffset += column.totalWidth;\n        return el;\n      })}\n    </>\n  );\n};\n\ntype Props = { columns: any[]; rows: number; style: CSSProperties; rowHeight: number; tableWidth: number };\nexport const TablePlaceholder: FC<Props> = (props: Props) => {\n  const { columns, rows = 5, style, rowHeight, tableWidth } = props;\n\n  const height = rows * rowHeight;\n\n  const innerStyles = useMemo(() => {\n    return {\n      backgroundColor: ThemingParameters.sapList_Background,\n      ...style\n    };\n  }, [style, ThemingParameters.sapList_Background]);\n\n  return (\n    <ContentLoader\n      style={innerStyles}\n      height={height}\n      width={tableWidth}\n      speed={2}\n      backgroundColor={ThemingParameters.sapContent_ImagePlaceholderBackground}\n      foregroundColor={ThemingParameters.sapContent_ImagePlaceholderForegroundColor}\n      backgroundOpacity={ThemingParameters.sapContent_DisabledOpacity as any}\n    >\n      {getArrayOfLength(rows).map((_, index) => (\n        <TableRow key={index} columns={columns} y={rowHeight * index + rowHeight / 2} row={index} />\n      ))}\n    </ContentLoader>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}