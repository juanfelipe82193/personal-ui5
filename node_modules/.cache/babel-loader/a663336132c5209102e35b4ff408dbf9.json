{"ast":null,"code":"class RadioButtonGroup {\n  static hasGroup(groupName) {\n    return this.groups.has(groupName);\n  }\n\n  static getGroup(groupName) {\n    return this.groups.get(groupName);\n  }\n\n  static getSelectedRadioFromGroup(groupName) {\n    return this.selectedRadios.get(groupName);\n  }\n\n  static removeGroup(groupName) {\n    this.selectedRadios.delete(groupName);\n    return this.groups.delete(groupName);\n  }\n\n  static addToGroup(radioBtn, groupName) {\n    if (this.hasGroup(groupName)) {\n      this.enforceSingleSelection(radioBtn, groupName);\n      this.getGroup(groupName).push(radioBtn);\n    } else {\n      this.createGroup(radioBtn, groupName);\n    }\n  }\n\n  static removeFromGroup(radioBtn, groupName) {\n    if (!this.hasGroup(groupName)) {\n      return;\n    }\n\n    const group = this.getGroup(groupName);\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName); // Remove the radio button from the given group\n\n    group.forEach((_radioBtn, idx, arr) => {\n      if (radioBtn._id === _radioBtn._id) {\n        return arr.splice(idx, 1);\n      }\n    });\n\n    if (selectedRadio === radioBtn) {\n      this.selectedRadios.set(groupName, null);\n    } // Remove the group if it is empty\n\n\n    if (!group.length) {\n      this.removeGroup(groupName);\n    }\n  }\n\n  static createGroup(radioBtn, groupName) {\n    if (radioBtn.selected) {\n      this.selectedRadios.set(groupName, radioBtn);\n    }\n\n    this.groups.set(groupName, [radioBtn]);\n  }\n\n  static selectNextItem(item, groupName) {\n    const group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n    if (groupLength <= 1) {\n      return;\n    }\n\n    const nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n    this.updateSelectionInGroup(nextItemToSelect, groupName);\n  }\n\n  static selectPreviousItem(item, groupName) {\n    const group = this.getGroup(groupName),\n          groupLength = group.length,\n          currentItemPosition = group.indexOf(item);\n\n    if (groupLength <= 1) {\n      return;\n    }\n\n    const previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n    this.updateSelectionInGroup(previousItemToSelect, groupName);\n  }\n\n  static selectItem(item, groupName) {\n    this.updateSelectionInGroup(item, groupName);\n  }\n\n  static updateSelectionInGroup(radioBtnToSelect, groupName) {\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n    this._deselectRadio(selectedRadio);\n\n    this._selectRadio(radioBtnToSelect);\n\n    this.selectedRadios.set(groupName, radioBtnToSelect);\n  }\n\n  static _deselectRadio(radioBtn) {\n    if (radioBtn) {\n      radioBtn.selected = false;\n    }\n  }\n\n  static _selectRadio(radioBtn) {\n    if (radioBtn) {\n      radioBtn.focus();\n      radioBtn.selected = true;\n      radioBtn._selected = true;\n      radioBtn.fireEvent(\"select\");\n    }\n  }\n\n  static _nextSelectable(pos, group) {\n    const groupLength = group.length;\n    let nextRadioToSelect = null;\n\n    if (pos === groupLength - 1) {\n      if (group[0].disabled || group[0].readonly) {\n        return this._nextSelectable(1, group);\n      }\n\n      nextRadioToSelect = group[0];\n    } else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n      return this._nextSelectable(pos + 1, group);\n    } else {\n      nextRadioToSelect = group[pos + 1];\n    }\n\n    return nextRadioToSelect;\n  }\n\n  static _previousSelectable(pos, group) {\n    const groupLength = group.length;\n    let previousRadioToSelect = null;\n\n    if (pos === 0) {\n      if (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n        return this._previousSelectable(groupLength - 1, group);\n      }\n\n      previousRadioToSelect = group[groupLength - 1];\n    } else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n      return this._previousSelectable(pos - 1, group);\n    } else {\n      previousRadioToSelect = group[pos - 1];\n    }\n\n    return previousRadioToSelect;\n  }\n\n  static enforceSingleSelection(radioBtn, groupName) {\n    const selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n    if (radioBtn.selected) {\n      if (!selectedRadio) {\n        this.selectedRadios.set(groupName, radioBtn);\n      } else if (radioBtn !== selectedRadio) {\n        this._deselectRadio(selectedRadio);\n\n        this.selectedRadios.set(groupName, radioBtn);\n      }\n    } else if (radioBtn === selectedRadio) {\n      this.selectedRadios.set(groupName, null);\n    }\n  }\n\n  static get groups() {\n    if (!this._groups) {\n      this._groups = new Map();\n    }\n\n    return this._groups;\n  }\n\n  static get selectedRadios() {\n    if (!this._selectedRadios) {\n      this._selectedRadios = new Map();\n    }\n\n    return this._selectedRadios;\n  }\n\n}\n\nexport default RadioButtonGroup;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/RadioButtonGroup.js"],"names":["RadioButtonGroup","hasGroup","groupName","groups","has","getGroup","get","getSelectedRadioFromGroup","selectedRadios","removeGroup","delete","addToGroup","radioBtn","enforceSingleSelection","push","createGroup","removeFromGroup","group","selectedRadio","forEach","_radioBtn","idx","arr","_id","splice","set","length","selected","selectNextItem","item","groupLength","currentItemPosition","indexOf","nextItemToSelect","_nextSelectable","updateSelectionInGroup","selectPreviousItem","previousItemToSelect","_previousSelectable","selectItem","radioBtnToSelect","_deselectRadio","_selectRadio","focus","_selected","fireEvent","pos","nextRadioToSelect","disabled","readonly","previousRadioToSelect","_groups","Map","_selectedRadios"],"mappings":"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","sourcesContent":["class RadioButtonGroup {\n\tstatic hasGroup(groupName) {\n\t\treturn this.groups.has(groupName);\n\t}\n\n\tstatic getGroup(groupName) {\n\t\treturn this.groups.get(groupName);\n\t}\n\n\tstatic getSelectedRadioFromGroup(groupName) {\n\t\treturn this.selectedRadios.get(groupName);\n\t}\n\n\tstatic removeGroup(groupName) {\n\t\tthis.selectedRadios.delete(groupName);\n\t\treturn this.groups.delete(groupName);\n\t}\n\n\tstatic addToGroup(radioBtn, groupName) {\n\t\tif (this.hasGroup(groupName)) {\n\t\t\tthis.enforceSingleSelection(radioBtn, groupName);\n\t\t\tthis.getGroup(groupName).push(radioBtn);\n\t\t} else {\n\t\t\tthis.createGroup(radioBtn, groupName);\n\t\t}\n\t}\n\n\tstatic removeFromGroup(radioBtn, groupName) {\n\t\tif (!this.hasGroup(groupName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst group = this.getGroup(groupName);\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\t// Remove the radio button from the given group\n\t\tgroup.forEach((_radioBtn, idx, arr) => {\n\t\t\tif (radioBtn._id === _radioBtn._id) {\n\t\t\t\treturn arr.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tif (selectedRadio === radioBtn) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\n\t\t// Remove the group if it is empty\n\t\tif (!group.length) {\n\t\t\tthis.removeGroup(groupName);\n\t\t}\n\t}\n\n\tstatic createGroup(radioBtn, groupName) {\n\t\tif (radioBtn.selected) {\n\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t}\n\n\t\tthis.groups.set(groupName, [radioBtn]);\n\t}\n\n\tstatic selectNextItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst nextItemToSelect = this._nextSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(nextItemToSelect, groupName);\n\t}\n\n\tstatic selectPreviousItem(item, groupName) {\n\t\tconst group = this.getGroup(groupName),\n\t\t\tgroupLength = group.length,\n\t\t\tcurrentItemPosition = group.indexOf(item);\n\n\t\tif (groupLength <= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst previousItemToSelect = this._previousSelectable(currentItemPosition, group);\n\n\t\tthis.updateSelectionInGroup(previousItemToSelect, groupName);\n\t}\n\n\tstatic selectItem(item, groupName) {\n\t\tthis.updateSelectionInGroup(item, groupName);\n\t}\n\n\tstatic updateSelectionInGroup(radioBtnToSelect, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tthis._deselectRadio(selectedRadio);\n\t\tthis._selectRadio(radioBtnToSelect);\n\t\tthis.selectedRadios.set(groupName, radioBtnToSelect);\n\t}\n\n\tstatic _deselectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.selected = false;\n\t\t}\n\t}\n\n\tstatic _selectRadio(radioBtn) {\n\t\tif (radioBtn) {\n\t\t\tradioBtn.focus();\n\t\t\tradioBtn.selected = true;\n\t\t\tradioBtn._selected = true;\n\t\t\tradioBtn.fireEvent(\"select\");\n\t\t}\n\t}\n\n\tstatic _nextSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet nextRadioToSelect = null;\n\n\t\tif (pos === groupLength - 1) {\n\t\t\tif (group[0].disabled || group[0].readonly) {\n\t\t\t\treturn this._nextSelectable(1, group);\n\t\t\t}\n\t\t\tnextRadioToSelect = group[0];\n\t\t} else if (group[pos + 1].disabled || group[pos + 1].readonly) {\n\t\t\treturn this._nextSelectable(pos + 1, group);\n\t\t} else {\n\t\t\tnextRadioToSelect = group[pos + 1];\n\t\t}\n\n\t\treturn nextRadioToSelect;\n\t}\n\n\tstatic _previousSelectable(pos, group) {\n\t\tconst groupLength = group.length;\n\t\tlet previousRadioToSelect = null;\n\t\tif (pos === 0) {\n\t\t\tif (group[groupLength - 1].disabled || group[groupLength - 1].readonly) {\n\t\t\t\treturn this._previousSelectable(groupLength - 1, group);\n\t\t\t}\n\t\t\tpreviousRadioToSelect = group[groupLength - 1];\n\t\t} else if (group[pos - 1].disabled || group[pos - 1].readonly) {\n\t\t\treturn this._previousSelectable(pos - 1, group);\n\t\t} else {\n\t\t\tpreviousRadioToSelect = group[pos - 1];\n\t\t}\n\n\t\treturn previousRadioToSelect;\n\t}\n\n\tstatic enforceSingleSelection(radioBtn, groupName) {\n\t\tconst selectedRadio = this.getSelectedRadioFromGroup(groupName);\n\n\t\tif (radioBtn.selected) {\n\t\t\tif (!selectedRadio) {\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t} else if (radioBtn !== selectedRadio) {\n\t\t\t\tthis._deselectRadio(selectedRadio);\n\t\t\t\tthis.selectedRadios.set(groupName, radioBtn);\n\t\t\t}\n\t\t} else if (radioBtn === selectedRadio) {\n\t\t\tthis.selectedRadios.set(groupName, null);\n\t\t}\n\t}\n\n\tstatic get groups() {\n\t\tif (!this._groups) {\n\t\t\tthis._groups = new Map();\n\t\t}\n\t\treturn this._groups;\n\t}\n\n\tstatic get selectedRadios() {\n\t\tif (!this._selectedRadios) {\n\t\t\tthis._selectedRadios = new Map();\n\t\t}\n\t\treturn this._selectedRadios;\n\t}\n}\n\nexport default RadioButtonGroup;\n"]},"metadata":{},"sourceType":"module"}