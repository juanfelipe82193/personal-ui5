{"ast":null,"code":"import _toConsumableArray from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar NativeResize = /*#__PURE__*/function () {\n  function NativeResize() {\n    _classCallCheck(this, NativeResize);\n  }\n\n  _createClass(NativeResize, null, [{\n    key: \"initialize\",\n    value: function initialize() {\n      NativeResize.resizeObserver = new window.ResizeObserver(function (entries) {\n        // call attached callbacks\n        entries.forEach(function (entry) {\n          var callbacks = NativeResize.observedObjects.get(entry.target);\n          callbacks.forEach(function (el) {\n            return el();\n          });\n        });\n      });\n      NativeResize.observedObjects = new Map();\n    }\n  }, {\n    key: \"attachListener\",\n    value: function attachListener(ref, callback) {\n      var observedDOMs = NativeResize.observedObjects;\n      var callbacks = observedDOMs.get(ref) || []; // if no callbacks has been added for this ref - start observing it\n\n      if (!callbacks.length) {\n        NativeResize.resizeObserver.observe(ref);\n      } // save the callbacks in an array\n\n\n      observedDOMs.set(ref, [].concat(_toConsumableArray(callbacks), [callback]));\n    }\n  }, {\n    key: \"detachListener\",\n    value: function detachListener(ref, callback) {\n      var callbacks = NativeResize.observedObjects.get(ref) || [];\n      var filteredCallbacks = callbacks.filter(function (fn) {\n        return fn !== callback;\n      });\n\n      if (!callbacks.length || callbacks.length === filteredCallbacks.length && callbacks.length !== 0) {\n        return;\n      }\n\n      NativeResize.observedObjects.set(ref, filteredCallbacks);\n\n      if (!filteredCallbacks.length) {\n        NativeResize.resizeObserver.unobserve(ref);\n      }\n    }\n  }]);\n\n  return NativeResize;\n}();\n\nexport default NativeResize;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/delegate/NativeResize.js"],"names":["NativeResize","resizeObserver","window","ResizeObserver","entries","forEach","entry","callbacks","observedObjects","get","target","el","Map","ref","callback","observedDOMs","length","observe","set","filteredCallbacks","filter","fn","unobserve"],"mappings":";;;;IAAMA,Y;;;;;;;iCACe;AACnBA,MAAAA,YAAY,CAACC,cAAb,GAA8B,IAAIC,MAAM,CAACC,cAAX,CAA0B,UAAAC,OAAO,EAAI;AAClE;AACAA,QAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACxB,cAAMC,SAAS,GAAGP,YAAY,CAACQ,eAAb,CAA6BC,GAA7B,CAAiCH,KAAK,CAACI,MAAvC,CAAlB;AAEAH,UAAAA,SAAS,CAACF,OAAV,CAAkB,UAAAM,EAAE;AAAA,mBAAIA,EAAE,EAAN;AAAA,WAApB;AACA,SAJD;AAKA,OAP6B,CAA9B;AASAX,MAAAA,YAAY,CAACQ,eAAb,GAA+B,IAAII,GAAJ,EAA/B;AACA;;;mCAEqBC,G,EAAKC,Q,EAAU;AACpC,UAAMC,YAAY,GAAGf,YAAY,CAACQ,eAAlC;AACA,UAAMD,SAAS,GAAGQ,YAAY,CAACN,GAAb,CAAiBI,GAAjB,KAAyB,EAA3C,CAFoC,CAIpC;;AACA,UAAI,CAACN,SAAS,CAACS,MAAf,EAAuB;AACtBhB,QAAAA,YAAY,CAACC,cAAb,CAA4BgB,OAA5B,CAAoCJ,GAApC;AACA,OAPmC,CASpC;;;AACAE,MAAAA,YAAY,CAACG,GAAb,CAAiBL,GAAjB,+BAA0BN,SAA1B,IAAqCO,QAArC;AACA;;;mCAEqBD,G,EAAKC,Q,EAAU;AACpC,UAAMP,SAAS,GAAGP,YAAY,CAACQ,eAAb,CAA6BC,GAA7B,CAAiCI,GAAjC,KAAyC,EAA3D;AACA,UAAMM,iBAAiB,GAAGZ,SAAS,CAACa,MAAV,CAAiB,UAAAC,EAAE;AAAA,eAAIA,EAAE,KAAKP,QAAX;AAAA,OAAnB,CAA1B;;AAEA,UAAI,CAACP,SAAS,CAACS,MAAX,IAAsBT,SAAS,CAACS,MAAV,KAAqBG,iBAAiB,CAACH,MAAvC,IAAiDT,SAAS,CAACS,MAAV,KAAqB,CAAhG,EAAoG;AACnG;AACA;;AAEDhB,MAAAA,YAAY,CAACQ,eAAb,CAA6BU,GAA7B,CAAiCL,GAAjC,EAAsCM,iBAAtC;;AAEA,UAAI,CAACA,iBAAiB,CAACH,MAAvB,EAA+B;AAC9BhB,QAAAA,YAAY,CAACC,cAAb,CAA4BqB,SAA5B,CAAsCT,GAAtC;AACA;AACD;;;;;;AAGF,eAAeb,YAAf","sourcesContent":["class NativeResize {\n\tstatic initialize() {\n\t\tNativeResize.resizeObserver = new window.ResizeObserver(entries => {\n\t\t\t// call attached callbacks\n\t\t\tentries.forEach(entry => {\n\t\t\t\tconst callbacks = NativeResize.observedObjects.get(entry.target);\n\n\t\t\t\tcallbacks.forEach(el => el());\n\t\t\t});\n\t\t});\n\n\t\tNativeResize.observedObjects = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedDOMs = NativeResize.observedObjects;\n\t\tconst callbacks = observedDOMs.get(ref) || [];\n\n\t\t// if no callbacks has been added for this ref - start observing it\n\t\tif (!callbacks.length) {\n\t\t\tNativeResize.resizeObserver.observe(ref);\n\t\t}\n\n\t\t// save the callbacks in an array\n\t\tobservedDOMs.set(ref, [...callbacks, callback]);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst callbacks = NativeResize.observedObjects.get(ref) || [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!callbacks.length || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tNativeResize.observedObjects.set(ref, filteredCallbacks);\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tNativeResize.resizeObserver.unobserve(ref);\n\t\t}\n\t}\n}\n\nexport default NativeResize;\n"]},"metadata":{},"sourceType":"module"}