{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { fetchJsonOnce, fetchTextOnce } from \"../util/FetchHelper.js\";\nimport { DEFAULT_THEME } from \"../generated/AssetParameters.js\";\nimport getFileExtension from \"../util/getFileExtension.js\";\nvar themeURLs = new Map();\nvar themeStyles = new Map();\nvar registeredPackages = new Set();\nvar registeredThemes = new Set();\n/**\n * Used to provide CSS Vars for a specific theme for a specific package.\n * The CSS Vars can be passed directly as a string (containing them), as an object with a \"_\" property(containing them in the \"_\" property), or as a URL.\n * This URL must point to a JSON file, containing a \"_\" property.\n *\n * Example usage:\n *  1) Pass the CSS Vars as a string directly.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \":root{--var1: red;}\");\n *  2) Pass the CSS Vars as an object directly\n *  registerThemeProperties(\"my-package\", \"my_theme\", {\"_\": \":root{--var1: red;}\"});\n *  3) Pass a URL to a CSS file, containing the CSS Vars. Will be fetched on demand, not upon registration.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \"http://url/to/my/theme.css\");\n *  4) Pass a URL to a JSON file, containing the CSS Vars in its \"_\" property. Will be fetched on demand, not upon registration.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \"http://url/to/my/theme.json\");\n *\n * @public\n * @param packageName - the NPM package for which CSS Vars are registered\n * @param themeName - the theme which the CSS Vars implement\n * @param style - can be one of four options: a string, an object with a \"_\" property, URL to a CSS file, or URL to a JSON file with a \"_\" property\n */\n\nvar registerThemeProperties = function registerThemeProperties(packageName, themeName, style) {\n  if (style._) {\n    // JSON object like ({\"_\": \":root\"})\n    themeStyles.set(\"\".concat(packageName, \"_\").concat(themeName), style._);\n  } else if (style.includes(\":root\")) {\n    // pure string\n    themeStyles.set(\"\".concat(packageName, \"_\").concat(themeName), style);\n  } else {\n    // url for fetching\n    themeURLs.set(\"\".concat(packageName, \"_\").concat(themeName), style);\n  }\n\n  registeredPackages.add(packageName);\n  registeredThemes.add(themeName);\n};\n\nvar getThemeProperties = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(packageName, themeName) {\n    var style, regThemesStr, data, themeProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            style = themeStyles.get(\"\".concat(packageName, \"_\").concat(themeName));\n\n            if (!style) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", style);\n\n          case 3:\n            if (registeredThemes.has(themeName)) {\n              _context.next = 7;\n              break;\n            }\n\n            regThemesStr = _toConsumableArray(registeredThemes.values()).join(\", \");\n            console.warn(\"You have requested a non-registered theme - falling back to \".concat(DEFAULT_THEME, \". Registered themes are: \").concat(regThemesStr));\n            /* eslint-disable-line */\n\n            return _context.abrupt(\"return\", themeStyles.get(\"\".concat(packageName, \"_\").concat(DEFAULT_THEME)));\n\n          case 7:\n            _context.next = 9;\n            return fetchThemeProperties(packageName, themeName);\n\n          case 9:\n            data = _context.sent;\n            themeProps = data._ || data;\n            themeStyles.set(\"\".concat(packageName, \"_\").concat(themeName), themeProps);\n            return _context.abrupt(\"return\", themeProps);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getThemeProperties(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchThemeProperties = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(packageName, themeName) {\n    var url;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            url = themeURLs.get(\"\".concat(packageName, \"_\").concat(themeName));\n\n            if (url) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new Error(\"You have to import the \".concat(packageName, \"/dist/Assets.js module to switch to additional themes\"));\n\n          case 3:\n            return _context2.abrupt(\"return\", getFileExtension(url) === \".css\" ? fetchTextOnce(url) : fetchJsonOnce(url));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchThemeProperties(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar getRegisteredPackages = function getRegisteredPackages() {\n  return registeredPackages;\n};\n\nvar isThemeRegistered = function isThemeRegistered(theme) {\n  return registeredThemes.has(theme);\n};\n\nexport { registerThemeProperties, getThemeProperties, getRegisteredPackages, isThemeRegistered };","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/asset-registries/Themes.js"],"names":["fetchJsonOnce","fetchTextOnce","DEFAULT_THEME","getFileExtension","themeURLs","Map","themeStyles","registeredPackages","Set","registeredThemes","registerThemeProperties","packageName","themeName","style","_","set","includes","add","getThemeProperties","get","has","regThemesStr","values","join","console","warn","fetchThemeProperties","data","themeProps","url","Error","getRegisteredPackages","isThemeRegistered","theme"],"mappings":"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","sourcesContent":["import { fetchJsonOnce, fetchTextOnce } from \"../util/FetchHelper.js\";\nimport { DEFAULT_THEME } from \"../generated/AssetParameters.js\";\nimport getFileExtension from \"../util/getFileExtension.js\";\n\nconst themeURLs = new Map();\nconst themeStyles = new Map();\nconst registeredPackages = new Set();\nconst registeredThemes = new Set();\n\n/**\n * Used to provide CSS Vars for a specific theme for a specific package.\n * The CSS Vars can be passed directly as a string (containing them), as an object with a \"_\" property(containing them in the \"_\" property), or as a URL.\n * This URL must point to a JSON file, containing a \"_\" property.\n *\n * Example usage:\n *  1) Pass the CSS Vars as a string directly.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \":root{--var1: red;}\");\n *  2) Pass the CSS Vars as an object directly\n *  registerThemeProperties(\"my-package\", \"my_theme\", {\"_\": \":root{--var1: red;}\"});\n *  3) Pass a URL to a CSS file, containing the CSS Vars. Will be fetched on demand, not upon registration.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \"http://url/to/my/theme.css\");\n *  4) Pass a URL to a JSON file, containing the CSS Vars in its \"_\" property. Will be fetched on demand, not upon registration.\n *  registerThemeProperties(\"my-package\", \"my_theme\", \"http://url/to/my/theme.json\");\n *\n * @public\n * @param packageName - the NPM package for which CSS Vars are registered\n * @param themeName - the theme which the CSS Vars implement\n * @param style - can be one of four options: a string, an object with a \"_\" property, URL to a CSS file, or URL to a JSON file with a \"_\" property\n */\nconst registerThemeProperties = (packageName, themeName, style) => {\n\tif (style._) {\n\t\t// JSON object like ({\"_\": \":root\"})\n\t\tthemeStyles.set(`${packageName}_${themeName}`, style._);\n\t} else if (style.includes(\":root\")) {\n\t\t// pure string\n\t\tthemeStyles.set(`${packageName}_${themeName}`, style);\n\t} else {\n\t\t// url for fetching\n\t\tthemeURLs.set(`${packageName}_${themeName}`, style);\n\t}\n\tregisteredPackages.add(packageName);\n\tregisteredThemes.add(themeName);\n};\n\nconst getThemeProperties = async (packageName, themeName) => {\n\tconst style = themeStyles.get(`${packageName}_${themeName}`);\n\tif (style) {\n\t\treturn style;\n\t}\n\n\tif (!registeredThemes.has(themeName)) {\n\t\tconst regThemesStr = [...registeredThemes.values()].join(\", \");\n\t\tconsole.warn(`You have requested a non-registered theme - falling back to ${DEFAULT_THEME}. Registered themes are: ${regThemesStr}`); /* eslint-disable-line */\n\t\treturn themeStyles.get(`${packageName}_${DEFAULT_THEME}`);\n\t}\n\n\tconst data = await fetchThemeProperties(packageName, themeName);\n\tconst themeProps = data._ || data;\n\n\tthemeStyles.set(`${packageName}_${themeName}`, themeProps);\n\treturn themeProps;\n};\n\nconst fetchThemeProperties = async (packageName, themeName) => {\n\tconst url = themeURLs.get(`${packageName}_${themeName}`);\n\n\tif (!url) {\n\t\tthrow new Error(`You have to import the ${packageName}/dist/Assets.js module to switch to additional themes`);\n\t}\n\n\treturn getFileExtension(url) === \".css\" ? fetchTextOnce(url) : fetchJsonOnce(url);\n};\n\nconst getRegisteredPackages = () => {\n\treturn registeredPackages;\n};\n\nconst isThemeRegistered = theme => {\n\treturn registeredThemes.has(theme);\n};\n\nexport {\n\tregisterThemeProperties,\n\tgetThemeProperties,\n\tgetRegisteredPackages,\n\tisThemeRegistered,\n};\n"]},"metadata":{},"sourceType":"module"}