{"ast":null,"code":"class EventProvider {\n  constructor() {\n    this._eventRegistry = {};\n  }\n\n  attachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    let eventListeners = eventRegistry[eventName];\n\n    if (!Array.isArray(eventListeners)) {\n      eventRegistry[eventName] = [];\n      eventListeners = eventRegistry[eventName];\n    }\n\n    eventListeners.push({\n      \"function\": fnFunction\n    });\n  }\n\n  detachEvent(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    let eventListeners = eventRegistry[eventName];\n\n    if (!eventListeners) {\n      return;\n    }\n\n    eventListeners = eventListeners.filter(event => {\n      return event[\"function\"] !== fnFunction; // eslint-disable-line\n    });\n\n    if (eventListeners.length === 0) {\n      delete eventRegistry[eventName];\n    }\n  }\n\n  fireEvent(eventName, data) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry[eventName];\n\n    if (!eventListeners) {\n      return;\n    }\n\n    eventListeners.forEach(event => {\n      event[\"function\"].call(this, data); // eslint-disable-line\n    });\n  }\n\n  isHandlerAttached(eventName, fnFunction) {\n    const eventRegistry = this._eventRegistry;\n    const eventListeners = eventRegistry[eventName];\n\n    if (!eventListeners) {\n      return false;\n    }\n\n    for (let i = 0; i < eventListeners.length; i++) {\n      const event = eventListeners[i];\n\n      if (event[\"function\"] === fnFunction) {\n        // eslint-disable-line\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  hasListeners(eventName) {\n    return !!this._eventRegistry[eventName];\n  }\n\n}\n\nexport default EventProvider;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/EventProvider.js"],"names":["EventProvider","constructor","_eventRegistry","attachEvent","eventName","fnFunction","eventRegistry","eventListeners","Array","isArray","push","detachEvent","filter","event","length","fireEvent","data","forEach","call","isHandlerAttached","i","hasListeners"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AACnBC,EAAAA,WAAW,GAAG;AACb,SAAKC,cAAL,GAAsB,EAAtB;AACA;;AAEDC,EAAAA,WAAW,CAACC,SAAD,EAAYC,UAAZ,EAAwB;AAClC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,QAAIK,cAAc,GAAGD,aAAa,CAACF,SAAD,CAAlC;;AAEA,QAAI,CAACI,KAAK,CAACC,OAAN,CAAcF,cAAd,CAAL,EAAoC;AACnCD,MAAAA,aAAa,CAACF,SAAD,CAAb,GAA2B,EAA3B;AACAG,MAAAA,cAAc,GAAGD,aAAa,CAACF,SAAD,CAA9B;AACA;;AAEDG,IAAAA,cAAc,CAACG,IAAf,CAAoB;AACnB,kBAAYL;AADO,KAApB;AAGA;;AAEDM,EAAAA,WAAW,CAACP,SAAD,EAAYC,UAAZ,EAAwB;AAClC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,QAAIK,cAAc,GAAGD,aAAa,CAACF,SAAD,CAAlC;;AAEA,QAAI,CAACG,cAAL,EAAqB;AACpB;AACA;;AAEDA,IAAAA,cAAc,GAAGA,cAAc,CAACK,MAAf,CAAsBC,KAAK,IAAI;AAC/C,aAAOA,KAAK,CAAC,UAAD,CAAL,KAAsBR,UAA7B,CAD+C,CACN;AACzC,KAFgB,CAAjB;;AAIA,QAAIE,cAAc,CAACO,MAAf,KAA0B,CAA9B,EAAiC;AAChC,aAAOR,aAAa,CAACF,SAAD,CAApB;AACA;AACD;;AAEDW,EAAAA,SAAS,CAACX,SAAD,EAAYY,IAAZ,EAAkB;AAC1B,UAAMV,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACF,SAAD,CAApC;;AAEA,QAAI,CAACG,cAAL,EAAqB;AACpB;AACA;;AAEDA,IAAAA,cAAc,CAACU,OAAf,CAAuBJ,KAAK,IAAI;AAC/BA,MAAAA,KAAK,CAAC,UAAD,CAAL,CAAkBK,IAAlB,CAAuB,IAAvB,EAA6BF,IAA7B,EAD+B,CACK;AACpC,KAFD;AAGA;;AAEDG,EAAAA,iBAAiB,CAACf,SAAD,EAAYC,UAAZ,EAAwB;AACxC,UAAMC,aAAa,GAAG,KAAKJ,cAA3B;AACA,UAAMK,cAAc,GAAGD,aAAa,CAACF,SAAD,CAApC;;AAEA,QAAI,CAACG,cAAL,EAAqB;AACpB,aAAO,KAAP;AACA;;AAED,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,cAAc,CAACO,MAAnC,EAA2CM,CAAC,EAA5C,EAAgD;AAC/C,YAAMP,KAAK,GAAGN,cAAc,CAACa,CAAD,CAA5B;;AACA,UAAIP,KAAK,CAAC,UAAD,CAAL,KAAsBR,UAA1B,EAAsC;AAAE;AACvC,eAAO,IAAP;AACA;AACD;;AAED,WAAO,KAAP;AACA;;AAEDgB,EAAAA,YAAY,CAACjB,SAAD,EAAY;AACvB,WAAO,CAAC,CAAC,KAAKF,cAAL,CAAoBE,SAApB,CAAT;AACA;;AArEkB;;AAwEpB,eAAeJ,aAAf","sourcesContent":["class EventProvider {\n\tconstructor() {\n\t\tthis._eventRegistry = {};\n\t}\n\n\tattachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tlet eventListeners = eventRegistry[eventName];\n\n\t\tif (!Array.isArray(eventListeners)) {\n\t\t\teventRegistry[eventName] = [];\n\t\t\teventListeners = eventRegistry[eventName];\n\t\t}\n\n\t\teventListeners.push({\n\t\t\t\"function\": fnFunction,\n\t\t});\n\t}\n\n\tdetachEvent(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tlet eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn;\n\t\t}\n\n\t\teventListeners = eventListeners.filter(event => {\n\t\t\treturn event[\"function\"] !== fnFunction; // eslint-disable-line\n\t\t});\n\n\t\tif (eventListeners.length === 0) {\n\t\t\tdelete eventRegistry[eventName];\n\t\t}\n\t}\n\n\tfireEvent(eventName, data) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn;\n\t\t}\n\n\t\teventListeners.forEach(event => {\n\t\t\tevent[\"function\"].call(this, data); // eslint-disable-line\n\t\t});\n\t}\n\n\tisHandlerAttached(eventName, fnFunction) {\n\t\tconst eventRegistry = this._eventRegistry;\n\t\tconst eventListeners = eventRegistry[eventName];\n\n\t\tif (!eventListeners) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (let i = 0; i < eventListeners.length; i++) {\n\t\t\tconst event = eventListeners[i];\n\t\t\tif (event[\"function\"] === fnFunction) { // eslint-disable-line\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\thasListeners(eventName) {\n\t\treturn !!this._eventRegistry[eventName];\n\t}\n}\n\nexport default EventProvider;\n"]},"metadata":{},"sourceType":"module"}