{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { polyfillDeprecatedEventAPI } from '@ui5/webcomponents-react-base/lib/Utils';\nimport React, { forwardRef, useRef, useMemo, Children, cloneElement, useEffect } from 'react';\n\nvar capitalizeFirstLetter = function capitalizeFirstLetter(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nvar toKebabCase = function toKebabCase(s) {\n  return s.replace(/([A-Z])/g, function (a, b) {\n    return \"-\".concat(b.toLowerCase());\n  });\n};\n\nvar createEventWrapperFor = function createEventWrapperFor(eventIdentifier, eventHandler) {\n  return function (event) {\n    polyfillDeprecatedEventAPI(event);\n    return eventHandler(event);\n  };\n};\n\nvar withWebComponent = function withWebComponent(TagName, regularProperties, booleanProperties, slotProperties, eventProperties) {\n  var WithWebComponent = forwardRef(function (props, wcRef) {\n    var className = props.className,\n        tooltip = props.tooltip,\n        children = props.children,\n        rest = _objectWithoutProperties(props, [\"className\", \"tooltip\", \"children\"]);\n\n    var ref = useConsolidatedRef(wcRef);\n    var eventRegistry = useRef({});\n    var eventRegistryWrapped = useRef({}); // regular props (no booleans, no slots and no events)\n\n    var regularProps = useMemo(function () {\n      return regularProperties.reduce(function (acc, val) {\n        if (rest.hasOwnProperty(val)) {\n          return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, toKebabCase(val), rest[val]));\n        }\n\n        return acc;\n      }, {});\n    }, regularProperties.map(function (name) {\n      return rest[name];\n    })); // boolean properties - only attach if they are truthy\n\n    var booleanProps = useMemo(function () {\n      return booleanProperties.reduce(function (acc, val) {\n        if (rest[val] === true || rest[val] === 'true') {\n          return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, toKebabCase(val), true));\n        }\n\n        return acc;\n      }, {});\n    }, booleanProperties.map(function (name) {\n      return rest[name];\n    }));\n    var slots = useMemo(function () {\n      return Object.entries(rest).filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            slotName = _ref2[0];\n\n        return slotProperties.includes(slotName);\n      }).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            slotName = _ref4[0],\n            slotValue = _ref4[1];\n\n        return Children.map((slotValue === null || slotValue === void 0 ? void 0 : slotValue.type) === React.Fragment ? slotValue.props.children : slotValue, function (item, index) {\n          return cloneElement(item, {\n            key: \"\".concat(slotName, \"-\").concat(index),\n            slot: slotName\n          });\n        });\n      });\n    }, slotProperties.map(function (name) {\n      return rest[name];\n    })); // event binding\n\n    useEffect(function () {\n      eventProperties.forEach(function (eventName) {\n        var eventHandler = rest[\"on\".concat(capitalizeFirstLetter(eventName))];\n\n        if (typeof eventHandler === 'function' && eventRegistry.current[eventName] !== eventHandler) {\n          if (eventRegistry.current[eventName]) {\n            ref.current.removeEventListener(eventName, eventRegistryWrapped.current[eventName]);\n          }\n\n          eventRegistryWrapped.current[eventName] = createEventWrapperFor(eventName, eventHandler);\n          ref.current.addEventListener(eventName, eventRegistryWrapped.current[eventName]);\n          eventRegistry.current[eventName] = eventHandler;\n        } else if (eventRegistry.current[eventName] && !eventHandler) {\n          ref.current.removeEventListener(eventName, eventRegistryWrapped.current[eventName]);\n        }\n      });\n    }, eventProperties.map(function (eventName) {\n      return rest[\"on\".concat(capitalizeFirstLetter(eventName))];\n    })); // non web component related props, just pass them\n\n    var nonWebComponentRelatedProps = Object.entries(rest).filter(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 1),\n          key = _ref6[0];\n\n      return !regularProperties.includes(key);\n    }).filter(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 1),\n          key = _ref8[0];\n\n      return !slotProperties.includes(key);\n    }).filter(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 1),\n          key = _ref10[0];\n\n      return !booleanProperties.includes(key);\n    }).filter(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 1),\n          key = _ref12[0];\n\n      return !eventProperties.map(function (val) {\n        return \"on\".concat(capitalizeFirstLetter(val));\n      }).includes(key);\n    }).reduce(function (acc, _ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n          key = _ref14[0],\n          val = _ref14[1];\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, val));\n    }, {});\n    return (\n      /*#__PURE__*/\n      // @ts-ignore\n      React.createElement(TagName, _extends({\n        ref: ref\n      }, booleanProps, regularProps, nonWebComponentRelatedProps, {\n        \"class\": className,\n        title: tooltip\n      }), slots, children)\n    );\n  });\n  WithWebComponent.displayName = \"WithWebComponent(\".concat(TagName, \")\");\n  return WithWebComponent;\n};\n\nexport { withWebComponent };","map":{"version":3,"sources":["../src/internal/withWebComponent.tsx"],"names":["capitalizeFirstLetter","s","toKebabCase","b","createEventWrapperFor","polyfillDeprecatedEventAPI","eventHandler","withWebComponent","WithWebComponent","forwardRef","className","tooltip","children","rest","props","ref","useConsolidatedRef","eventRegistry","useRef","eventRegistryWrapped","regularProps","useMemo","booleanProps","slots","slotName","slotProperties","slotValue","React","cloneElement","key","slot","useEffect","eventProperties","nonWebComponentRelatedProps","regularProperties","booleanProperties","val"],"mappings":"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","sourcesContent":["import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { polyfillDeprecatedEventAPI } from '@ui5/webcomponents-react-base/lib/Utils';\nimport React, {\n  Children,\n  cloneElement,\n  forwardRef,\n  HTMLAttributes,\n  ReactElement,\n  Ref,\n  RefForwardingComponent,\n  RefObject,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport { CommonProps } from '../interfaces/CommonProps';\nimport { Ui5DomRef } from '../interfaces/Ui5DomRef';\n\nconst capitalizeFirstLetter = (s: string) => s.charAt(0).toUpperCase() + s.slice(1);\n\nconst toKebabCase = (s: string) => s.replace(/([A-Z])/g, (a, b) => `-${b.toLowerCase()}`);\n\nexport interface WithWebComponentPropTypes extends CommonProps, HTMLAttributes<HTMLElement> {\n  ref?: Ref<any>;\n  children?: any | void;\n}\n\nconst createEventWrapperFor = (eventIdentifier, eventHandler) => (event) => {\n  polyfillDeprecatedEventAPI(event);\n  return eventHandler(event);\n};\n\nexport const withWebComponent = <T extends {}>(\n  TagName: string,\n  regularProperties: string[],\n  booleanProperties: string[],\n  slotProperties: string[],\n  eventProperties: string[]\n) => {\n  const WithWebComponent = forwardRef((props: T & WithWebComponentPropTypes, wcRef: RefObject<Ui5DomRef>) => {\n    const { className, tooltip, children, ...rest } = props;\n\n    const ref = useConsolidatedRef<HTMLElement>(wcRef);\n    const eventRegistry = useRef({});\n    const eventRegistryWrapped = useRef({});\n\n    // regular props (no booleans, no slots and no events)\n    const regularProps = useMemo(\n      () => {\n        return regularProperties.reduce((acc, val) => {\n          if (rest.hasOwnProperty(val)) {\n            return { ...acc, [toKebabCase(val)]: rest[val] };\n          }\n          return acc;\n        }, {});\n      },\n      regularProperties.map((name) => rest[name])\n    );\n\n    // boolean properties - only attach if they are truthy\n    const booleanProps = useMemo(\n      () => {\n        return booleanProperties.reduce((acc, val) => {\n          if (rest[val] === true || rest[val] === 'true') {\n            return { ...acc, [toKebabCase(val)]: true };\n          }\n          return acc;\n        }, {});\n      },\n      booleanProperties.map((name) => rest[name])\n    );\n\n    const slots = useMemo(\n      () => {\n        return Object.entries(rest)\n          .filter(([slotName]) => slotProperties.includes(slotName))\n          .map(([slotName, slotValue]) => {\n            return Children.map(\n              slotValue?.type === React.Fragment ? slotValue.props.children : slotValue,\n              (item: ReactElement, index) =>\n                cloneElement(item, {\n                  key: `${slotName}-${index}`,\n                  slot: slotName\n                })\n            );\n          });\n      },\n      slotProperties.map((name) => rest[name])\n    );\n\n    // event binding\n    useEffect(\n      () => {\n        eventProperties.forEach((eventName) => {\n          const eventHandler = rest[`on${capitalizeFirstLetter(eventName)}`];\n          if (typeof eventHandler === 'function' && eventRegistry.current[eventName] !== eventHandler) {\n            if (eventRegistry.current[eventName]) {\n              ref.current.removeEventListener(eventName, eventRegistryWrapped.current[eventName]);\n            }\n            eventRegistryWrapped.current[eventName] = createEventWrapperFor(eventName, eventHandler);\n            ref.current.addEventListener(eventName, eventRegistryWrapped.current[eventName]);\n            eventRegistry.current[eventName] = eventHandler;\n          } else if (eventRegistry.current[eventName] && !eventHandler) {\n            ref.current.removeEventListener(eventName, eventRegistryWrapped.current[eventName]);\n          }\n        });\n      },\n      eventProperties.map((eventName) => rest[`on${capitalizeFirstLetter(eventName)}`])\n    );\n\n    // non web component related props, just pass them\n    const nonWebComponentRelatedProps = Object.entries(rest)\n      .filter(([key]) => !regularProperties.includes(key))\n      .filter(([key]) => !slotProperties.includes(key))\n      .filter(([key]) => !booleanProperties.includes(key))\n      .filter(([key]) => !eventProperties.map((val) => `on${capitalizeFirstLetter(val)}`).includes(key))\n      .reduce((acc, [key, val]) => ({ ...acc, [key]: val }), {});\n\n    return (\n      // @ts-ignore\n      <TagName\n        ref={ref}\n        {...booleanProps}\n        {...regularProps}\n        {...nonWebComponentRelatedProps}\n        class={className}\n        title={tooltip}\n      >\n        {slots}\n        {children}\n      </TagName>\n    );\n  });\n\n  WithWebComponent.displayName = `WithWebComponent(${TagName})`;\n\n  return (WithWebComponent as unknown) as RefForwardingComponent<Ui5DomRef, T & WithWebComponentPropTypes>;\n};\n"]},"metadata":{},"sourceType":"module"}