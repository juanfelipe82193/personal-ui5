{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport React, { forwardRef, useMemo } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { sapUiContentPadding } from '@ui5/webcomponents-react-base/lib/spacing';\nvar styles = {\n  card: {\n    backgroundColor: ThemingParameters.sapTile_Background,\n    border: \"0.0625rem solid \".concat(ThemingParameters.sapTile_BorderColor),\n    boxShadow: ThemingParameters.sapContent_Shadow0,\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    textAlign: 'start',\n    overflow: 'hidden',\n    position: 'relative',\n    fontFamily: ThemingParameters.sapFontFamily,\n    boxSizing: 'border-box'\n  },\n  content: sapUiContentPadding\n};\nvar useStyles = createComponentStyles(styles, {\n  name: 'AnalyticalCard'\n});\n/**\n * <code>import { AnalyticalCard } from '@ui5/webcomponents-react/lib/AnalyticalCard';</code>\n */\n\nvar AnalyticalCard = forwardRef(function (props, ref) {\n  var children = props.children,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      header = props.header,\n      width = props.width;\n  var classes = useStyles();\n  var classNameString = StyleClassHelper.of(classes.card);\n\n  if (className) {\n    classNameString.put(className);\n  }\n\n  var analyticalCardStyles = useMemo(function () {\n    return _objectSpread({\n      width: width\n    }, style);\n  }, [style, width]);\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: classNameString.toString(),\n    style: analyticalCardStyles,\n    title: tooltip\n  }, passThroughProps), header, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, children));\n});\nAnalyticalCard.displayName = 'AnalyticalCard';\nAnalyticalCard.defaultProps = {\n  width: '20rem',\n  header: null\n};\nexport { AnalyticalCard };","map":{"version":3,"sources":["../src/components/AnalyticalCard/AnalyticalCard.jss.ts","../src/components/AnalyticalCard/index.tsx"],"names":["styles","card","backgroundColor","ThemingParameters","border","boxShadow","borderRadius","textAlign","overflow","position","fontFamily","boxSizing","content","spacing","useStyles","createComponentStyles","name","AnalyticalCard","forwardRef","children","style","className","tooltip","header","width","props","classes","classNameString","StyleClassHelper","analyticalCardStyles","useMemo","passThroughProps","usePassThroughHtmlProps"],"mappings":";;;;;;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEC,iBAAiB,CAD9B,kBAAA;AAEJC,IAAAA,MAAM,EAAA,mBAAA,MAAA,CAAqBD,iBAAiB,CAFxC,mBAEE,CAFF;AAGJE,IAAAA,SAAS,EAAEF,iBAAiB,CAHxB,kBAAA;AAIJG,IAAAA,YAAY,EAAEH,iBAAiB,CAJ3B,6BAAA;AAKJI,IAAAA,SAAS,EALL,OAAA;AAMJC,IAAAA,QAAQ,EANJ,QAAA;AAOJC,IAAAA,QAAQ,EAPJ,UAAA;AAQJC,IAAAA,UAAU,EAAEP,iBAAiB,CARzB,aAAA;AASJQ,IAAAA,SAAS,EAAE;AATP,GADO;AAYbC,EAAAA,OAAO,EAAEC;AAZI,CAAf;ACiBA,IAAMC,SAAS,GAAGC,qBAAqB,CAAA,MAAA,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAvC;AAEA;;;;IAGaC,cAAuC,GAAGC,UAAU,CAC/D,UAAA,KAAA,EAAA,GAAA,EAA0D;AAAA,MAChDC,QADgD,GACOM,KADP,CAAA,QAAA;AAAA,MACtCL,KADsC,GACOK,KADP,CAAA,KAAA;AAAA,MAC/BJ,SAD+B,GACOI,KADP,CAAA,SAAA;AAAA,MACpBH,OADoB,GACOG,KADP,CAAA,OAAA;AAAA,MACXF,MADW,GACOE,KADP,CAAA,MAAA;AAAA,MACHD,KADG,GACOC,KADP,CAAA,KAAA;AAExD,MAAMC,OAAO,GAAGZ,SAAhB,EAAA;AACA,MAAMa,eAAe,GAAGC,gBAAgB,CAAhBA,EAAAA,CAAoBF,OAAO,CAAnD,IAAwBE,CAAxB;;AACA,MAAA,SAAA,EAAe;AACbD,IAAAA,eAAe,CAAfA,GAAAA,CAAAA,SAAAA;AACD;;AAED,MAAME,oBAAoB,GAAGC,OAAO,CAAC,YAAM;AACzC,WAAA,aAAA,CAAA;AACEN,MAAAA,KAAK,EAALA;AADF,KAAA,EAAA,KAAA,CAAA;AADkC,GAAA,EAKjC,CAAA,KAAA,EALH,KAKG,CALiC,CAApC;AAOA,MAAMO,gBAAgB,GAAGC,uBAAuB,CAAhD,KAAgD,CAAhD;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,SAAS,EAAEL,eAAe,CAF5B,QAEaA,EAFb;AAGE,IAAA,KAAK,EAHP,oBAAA;AAIE,IAAA,KAAK,EAAEL;AAJT,GAAA,EAAA,gBAAA,CAAA,EAAA,MAAA,EAAA,aAQE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACd;AAAxB,GAAA,EATJ,QASI,CARF,CADF;AAlB6D,CAAA,C;AAiCjEK,cAAc,CAAdA,WAAAA,GAAAA,gBAAAA;AACAA,cAAc,CAAdA,YAAAA,GAA8B;AAAEO,EAAAA,KAAK,EAAP,OAAA;AAAkBD,EAAAA,MAAM,EAAE;AAA1B,CAA9BN","sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport * as spacing from '@ui5/webcomponents-react-base/lib/spacing';\n\nconst styles = {\n  card: {\n    backgroundColor: ThemingParameters.sapTile_Background,\n    border: `0.0625rem solid ${ThemingParameters.sapTile_BorderColor}`,\n    boxShadow: ThemingParameters.sapContent_Shadow0,\n    borderRadius: ThemingParameters.sapElement_BorderCornerRadius,\n    textAlign: 'start',\n    overflow: 'hidden',\n    position: 'relative',\n    fontFamily: ThemingParameters.sapFontFamily,\n    boxSizing: 'border-box'\n  },\n  content: spacing.sapUiContentPadding\n};\n\nexport default styles;\n","import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport React, { CSSProperties, FC, forwardRef, ReactNode, ReactNodeArray, Ref, useMemo } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CommonProps } from '../../interfaces/CommonProps';\n\nimport styles from './AnalyticalCard.jss';\n\nexport interface AnalyticalCardTypes extends CommonProps {\n  /**\n   * The Card header Component, using the AnalyticalCardHeader is recommended.\n   */\n  header?: ReactNode;\n  /**\n   * Expected one or more React Components\n   */\n  children: ReactNode | ReactNodeArray;\n  width?: CSSProperties['width'];\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'AnalyticalCard' });\n\n/**\n * <code>import { AnalyticalCard } from '@ui5/webcomponents-react/lib/AnalyticalCard';</code>\n */\nexport const AnalyticalCard: FC<AnalyticalCardTypes> = forwardRef(\n  (props: AnalyticalCardTypes, ref: Ref<HTMLDivElement>) => {\n    const { children, style, className, tooltip, header, width } = props;\n    const classes = useStyles();\n    const classNameString = StyleClassHelper.of(classes.card);\n    if (className) {\n      classNameString.put(className);\n    }\n\n    const analyticalCardStyles = useMemo(() => {\n      return {\n        width,\n        ...style\n      };\n    }, [style, width]);\n\n    const passThroughProps = usePassThroughHtmlProps(props);\n\n    return (\n      <div\n        ref={ref}\n        className={classNameString.toString()}\n        style={analyticalCardStyles}\n        title={tooltip}\n        {...passThroughProps}\n      >\n        {header}\n        <div className={classes.content}>{children}</div>\n      </div>\n    );\n  }\n);\n\nAnalyticalCard.displayName = 'AnalyticalCard';\nAnalyticalCard.defaultProps = { width: '20rem', header: null };\n"]},"metadata":{},"sourceType":"module"}