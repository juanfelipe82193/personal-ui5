{"ast":null,"code":"import _slicedToArray from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport merge from \"./thirdparty/merge.js\";\nimport boot from \"./boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport RenderScheduler from \"./RenderScheduler.js\";\nimport { registerTag, isTagRegistered } from \"./CustomElementsRegistry.js\";\nimport DOMObserver from \"./compatibility/DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport createComponentStyleTag from \"./theming/createComponentStyleTag.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport Integer from \"./types/Integer.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\nvar metadata = {\n  events: {\n    _propertyChange: {}\n  }\n};\nvar autoId = 0;\nvar elementTimeouts = new Map();\nvar GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.UI5Element\n * @extends HTMLElement\n * @public\n */\n\nvar UI5Element = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(UI5Element, _HTMLElement);\n\n  var _super = _createSuper(UI5Element);\n\n  function UI5Element() {\n    var _this;\n\n    _classCallCheck(this, UI5Element);\n\n    _this = _super.call(this);\n\n    _this._generateId();\n\n    _this._initializeState();\n\n    _this._upgradeAllProperties();\n\n    _this._initializeContainers();\n\n    _this._upToDate = false;\n    var deferredResolve;\n    _this._domRefReadyPromise = new Promise(function (resolve) {\n      deferredResolve = resolve;\n    });\n    _this._domRefReadyPromise._deferredResolve = deferredResolve;\n    _this._monitoredChildProps = new Map();\n    _this._firePropertyChange = false;\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  _createClass(UI5Element, [{\n    key: \"_generateId\",\n    value: function _generateId() {\n      this._id = \"ui5wc_\".concat(++autoId);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_initializeContainers\",\n    value: function _initializeContainers() {\n      var needsShadowDOM = this.constructor._needsShadowDOM();\n\n      var needsStaticArea = this.constructor._needsStaticArea(); // Init Shadow Root\n\n\n      if (needsShadowDOM) {\n        this.attachShadow({\n          mode: \"open\"\n        }); // IE11, Edge\n\n        if (window.ShadyDOM) {\n          createComponentStyleTag(this.constructor);\n        } // Chrome\n\n\n        if (document.adoptedStyleSheets) {\n          var style = getConstructableStyle(this.constructor);\n          this.shadowRoot.adoptedStyleSheets = [style];\n        }\n      } // Init StaticAreaItem only if needed\n\n\n      if (needsStaticArea) {\n        this.staticAreaItem = new StaticAreaItem(this);\n      }\n    }\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n     * @private\n     */\n\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var needsShadowDOM, slotsAreManaged;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                needsShadowDOM = this.constructor._needsShadowDOM();\n                slotsAreManaged = this.constructor.getMetadata().slotsAreManaged(); // Render the Shadow DOM\n\n                if (!needsShadowDOM) {\n                  _context.next = 14;\n                  break;\n                }\n\n                if (!slotsAreManaged) {\n                  _context.next = 7;\n                  break;\n                }\n\n                // always register the observer before yielding control to the main thread (await)\n                this._startObservingDOMChildren();\n\n                _context.next = 7;\n                return this._processChildren();\n\n              case 7:\n                if (this.shadowRoot) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return Promise.resolve();\n\n              case 10:\n                _context.next = 12;\n                return RenderScheduler.renderImmediately(this);\n\n              case 12:\n                this._domRefReadyPromise._deferredResolve();\n\n                if (typeof this.onEnterDOM === \"function\") {\n                  this.onEnterDOM();\n                }\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n    /**\n     * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n     * @private\n     */\n\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var needsShadowDOM = this.constructor._needsShadowDOM();\n\n      var needsStaticArea = this.constructor._needsStaticArea();\n\n      var slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n      if (needsShadowDOM) {\n        if (slotsAreManaged) {\n          this._stopObservingDOMChildren();\n        }\n\n        if (typeof this.onExitDOM === \"function\") {\n          this.onExitDOM();\n        }\n      }\n\n      if (needsStaticArea) {\n        this.staticAreaItem._removeFragmentFromStaticArea();\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_startObservingDOMChildren\",\n    value: function _startObservingDOMChildren() {\n      var shouldObserveChildren = this.constructor.getMetadata().hasSlots();\n\n      if (!shouldObserveChildren) {\n        return;\n      }\n\n      var canSlotText = this.constructor.getMetadata().canSlotText();\n      var mutationObserverOptions = {\n        childList: true,\n        subtree: canSlotText,\n        characterData: true\n      };\n      DOMObserver.observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_stopObservingDOMChildren\",\n    value: function _stopObservingDOMChildren() {\n      DOMObserver.unobserveDOMNode(this);\n    }\n    /**\n     * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n     * @private\n     */\n\n  }, {\n    key: \"_processChildren\",\n    value: function () {\n      var _processChildren2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var hasSlots;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                hasSlots = this.constructor.getMetadata().hasSlots();\n\n                if (!hasSlots) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                _context2.next = 4;\n                return this._updateSlots();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function _processChildren() {\n        return _processChildren2.apply(this, arguments);\n      }\n\n      return _processChildren;\n    }()\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_updateSlots\",\n    value: function () {\n      var _updateSlots2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var slotsMap, canSlotText, domChildren, _i, _Object$entries, _Object$entries$_i, slotName, slotData, autoIncrementMap, slottedChildrenMap, allChildrenUpgraded;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                slotsMap = this.constructor.getMetadata().getSlots();\n                canSlotText = this.constructor.getMetadata().canSlotText();\n                domChildren = Array.from(canSlotText ? this.childNodes : this.children); // Init the _state object based on the supported slots\n\n                for (_i = 0, _Object$entries = Object.entries(slotsMap); _i < _Object$entries.length; _i++) {\n                  _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), slotName = _Object$entries$_i[0], slotData = _Object$entries$_i[1];\n\n                  // eslint-disable-line\n                  this._clearSlot(slotName, slotData);\n                }\n\n                autoIncrementMap = new Map();\n                slottedChildrenMap = new Map();\n                allChildrenUpgraded = domChildren.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(child, idx) {\n                    var slotName, slotData, validValues, nextIndex, localName, isCustomElement, isDefined, whenDefinedPromise, timeoutPromise, propertyName;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            // Determine the type of the child (mainly by the slot attribute)\n                            slotName = _this2.constructor._getSlotName(child);\n                            slotData = slotsMap[slotName]; // Check if the slotName is supported\n\n                            if (!(slotData === undefined)) {\n                              _context3.next = 6;\n                              break;\n                            }\n\n                            validValues = Object.keys(slotsMap).join(\", \");\n                            console.warn(\"Unknown slotName: \".concat(slotName, \", ignoring\"), child, \"Valid values are: \".concat(validValues)); // eslint-disable-line\n\n                            return _context3.abrupt(\"return\");\n\n                          case 6:\n                            // For children that need individual slots, calculate them\n                            if (slotData.individualSlots) {\n                              nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n                              autoIncrementMap.set(slotName, nextIndex);\n                              child._individualSlot = \"\".concat(slotName, \"-\").concat(nextIndex);\n                            } // Await for not-yet-defined custom elements\n\n\n                            if (!(child instanceof HTMLElement)) {\n                              _context3.next = 19;\n                              break;\n                            }\n\n                            localName = child.localName;\n                            isCustomElement = localName.includes(\"-\");\n\n                            if (!isCustomElement) {\n                              _context3.next = 19;\n                              break;\n                            }\n\n                            isDefined = window.customElements.get(localName);\n\n                            if (isDefined) {\n                              _context3.next = 18;\n                              break;\n                            }\n\n                            whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n\n                            timeoutPromise = elementTimeouts.get(localName);\n\n                            if (!timeoutPromise) {\n                              timeoutPromise = new Promise(function (resolve) {\n                                return setTimeout(resolve, 1000);\n                              });\n                              elementTimeouts.set(localName, timeoutPromise);\n                            }\n\n                            _context3.next = 18;\n                            return Promise.race([whenDefinedPromise, timeoutPromise]);\n\n                          case 18:\n                            window.customElements.upgrade(child);\n\n                          case 19:\n                            child = _this2.constructor.getMetadata().constructor.validateSlotValue(child, slotData);\n\n                            if (child.isUI5Element && slotData.listenFor) {\n                              _this2._attachChildPropertyUpdated(child, slotData.listenFor);\n                            }\n\n                            propertyName = slotData.propertyName || slotName;\n\n                            if (slottedChildrenMap.has(propertyName)) {\n                              slottedChildrenMap.get(propertyName).push({\n                                child: child,\n                                idx: idx\n                              });\n                            } else {\n                              slottedChildrenMap.set(propertyName, [{\n                                child: child,\n                                idx: idx\n                              }]);\n                            }\n\n                          case 23:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x, _x2) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n                _context4.next = 9;\n                return Promise.all(allChildrenUpgraded);\n\n              case 9:\n                // Distribute the child in the _state object, keeping the Light DOM order,\n                // not the order elements are defined.\n                slottedChildrenMap.forEach(function (children, slot) {\n                  _this2._state[slot] = children.sort(function (a, b) {\n                    return a.idx - b.idx;\n                  }).map(function (_) {\n                    return _.child;\n                  });\n                });\n\n                this._invalidate(\"slots\");\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function _updateSlots() {\n        return _updateSlots2.apply(this, arguments);\n      }\n\n      return _updateSlots;\n    }()\n    /**\n     * Removes all children from the slot and detaches listeners, if any\n     * @private\n     */\n\n  }, {\n    key: \"_clearSlot\",\n    value: function _clearSlot(slotName, slotData) {\n      var _this3 = this;\n\n      var propertyName = slotData.propertyName || slotName;\n      var children = this._state[propertyName];\n\n      if (!Array.isArray(children)) {\n        children = [children];\n      }\n\n      children.forEach(function (child) {\n        if (child && child.isUI5Element) {\n          _this3._detachChildPropertyUpdated(child);\n        }\n      });\n      this._state[propertyName] = [];\n\n      this._invalidate(propertyName, []);\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element\n     * @private\n     */\n\n  }, {\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, oldValue, newValue) {\n      var properties = this.constructor.getMetadata().getProperties();\n      var realName = name.replace(/^ui5-/, \"\");\n      var nameInCamelCase = kebabToCamelCase(realName);\n\n      if (properties.hasOwnProperty(nameInCamelCase)) {\n        // eslint-disable-line\n        var propertyTypeClass = properties[nameInCamelCase].type;\n\n        if (propertyTypeClass === Boolean) {\n          newValue = newValue !== null;\n        }\n\n        if (propertyTypeClass === Integer) {\n          newValue = parseInt(newValue);\n        }\n\n        this[nameInCamelCase] = newValue;\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_updateAttribute\",\n    value: function _updateAttribute(name, newValue) {\n      if (!this.constructor.getMetadata().hasAttribute(name)) {\n        return;\n      }\n\n      if (typeof newValue === \"object\") {\n        return;\n      }\n\n      var attrName = camelToKebabCase(name);\n      var attrValue = this.getAttribute(attrName);\n\n      if (typeof newValue === \"boolean\") {\n        if (newValue === true && attrValue === null) {\n          this.setAttribute(attrName, \"\");\n        } else if (newValue === false && attrValue !== null) {\n          this.removeAttribute(attrName);\n        }\n      } else if (attrValue !== newValue) {\n        this.setAttribute(attrName, newValue);\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_upgradeProperty\",\n    value: function _upgradeProperty(prop) {\n      if (this.hasOwnProperty(prop)) {\n        // eslint-disable-line\n        var value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_upgradeAllProperties\",\n    value: function _upgradeAllProperties() {\n      var allProps = this.constructor.getMetadata().getPropertiesList();\n      allProps.forEach(this._upgradeProperty, this);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_initializeState\",\n    value: function _initializeState() {\n      var defaultState = this.constructor._getDefaultState();\n\n      this._state = Object.assign({}, defaultState);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_attachChildPropertyUpdated\",\n    value: function _attachChildPropertyUpdated(child, listenFor) {\n      var childMetadata = child.constructor.getMetadata(),\n          slotName = this.constructor._getSlotName(child),\n          // all slotted children have the same configuration\n      childProperties = childMetadata.getProperties();\n\n      var observedProps = [],\n          notObservedProps = [];\n\n      if (Array.isArray(listenFor)) {\n        observedProps = listenFor;\n      } else {\n        observedProps = Array.isArray(listenFor.props) ? listenFor.props : Object.keys(childProperties);\n        notObservedProps = Array.isArray(listenFor.exclude) ? listenFor.exclude : [];\n      }\n\n      if (!this._monitoredChildProps.has(slotName)) {\n        this._monitoredChildProps.set(slotName, {\n          observedProps: observedProps,\n          notObservedProps: notObservedProps\n        });\n      }\n\n      child.addEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n      child._firePropertyChange = true;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_detachChildPropertyUpdated\",\n    value: function _detachChildPropertyUpdated(child) {\n      child.removeEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n      child._firePropertyChange = false;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_propertyChange\",\n    value: function _propertyChange(name, value) {\n      this._updateAttribute(name, value);\n\n      if (this._firePropertyChange) {\n        this.dispatchEvent(new CustomEvent(\"_propertyChange\", {\n          detail: {\n            name: name,\n            newValue: value\n          },\n          composed: false,\n          bubbles: true\n        }));\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_invalidateParentOnPropertyUpdate\",\n    value: function _invalidateParentOnPropertyUpdate(prop) {\n      // The web component to be invalidated\n      var parentNode = this.parentNode;\n\n      if (!parentNode) {\n        return;\n      }\n\n      var slotName = parentNode.constructor._getSlotName(this);\n\n      var propsMetadata = parentNode._monitoredChildProps.get(slotName);\n\n      if (!propsMetadata) {\n        return;\n      }\n\n      var observedProps = propsMetadata.observedProps,\n          notObservedProps = propsMetadata.notObservedProps;\n\n      if (observedProps.includes(prop.detail.name) && !notObservedProps.includes(prop.detail.name)) {\n        parentNode._invalidate(\"_parent_\", this);\n      }\n    }\n    /**\n     * Asynchronously re-renders an already rendered web component\n     * @private\n     */\n\n  }, {\n    key: \"_invalidate\",\n    value: function _invalidate() {\n      if (!this._upToDate) {\n        // console.log(\"already invalidated\", this, ...arguments);\n        return;\n      }\n\n      if (this.getDomRef() && !this._suppressInvalidation) {\n        this._upToDate = false; // console.log(\"INVAL\", this, ...arguments);\n\n        RenderScheduler.renderDeferred(this);\n      }\n    }\n    /**\n     * Do not call this method directly, only intended to be called by RenderScheduler.js\n     * @protected\n     */\n\n  }, {\n    key: \"_render\",\n    value: function _render() {\n      var hasIndividualSlots = this.constructor.getMetadata().hasIndividualSlots(); // suppress invalidation to prevent state changes scheduling another rendering\n\n      this._suppressInvalidation = true;\n\n      if (typeof this.onBeforeRendering === \"function\") {\n        this.onBeforeRendering();\n      } // Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n\n\n      if (this._onComponentStateFinalized) {\n        this._onComponentStateFinalized();\n      } // resume normal invalidation handling\n\n\n      delete this._suppressInvalidation; // Update the shadow root with the render result\n      // console.log(this.getDomRef() ? \"RE-RENDER\" : \"FIRST RENDER\", this);\n\n      this._upToDate = true;\n\n      this._updateShadowRoot();\n\n      if (this._shouldUpdateFragment()) {\n        this.staticAreaItem._updateFragment(this);\n      } // Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n\n\n      if (hasIndividualSlots) {\n        this._assignIndividualSlotsToChildren();\n      } // Call the onAfterRendering hook\n\n\n      if (typeof this.onAfterRendering === \"function\") {\n        this.onAfterRendering();\n      }\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_updateShadowRoot\",\n    value: function _updateShadowRoot() {\n      if (!this.constructor._needsShadowDOM()) {\n        return;\n      }\n\n      var styleToPrepend;\n      var renderResult = this.constructor.template(this);\n\n      if (!document.adoptedStyleSheets && !window.ShadyDOM) {\n        styleToPrepend = getEffectiveStyle(this.constructor);\n      }\n\n      this.constructor.render(renderResult, this.shadowRoot, styleToPrepend, {\n        eventContext: this\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_assignIndividualSlotsToChildren\",\n    value: function _assignIndividualSlotsToChildren() {\n      var domChildren = Array.from(this.children);\n      domChildren.forEach(function (child) {\n        if (child._individualSlot) {\n          child.setAttribute(\"slot\", child._individualSlot);\n        }\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_waitForDomRef\",\n    value: function _waitForDomRef() {\n      return this._domRefReadyPromise;\n    }\n    /**\n     * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n     * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n     * @public\n     */\n\n  }, {\n    key: \"getDomRef\",\n    value: function getDomRef() {\n      if (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n        return;\n      }\n\n      return this.shadowRoot.children.length === 1 ? this.shadowRoot.children[0] : this.shadowRoot.children[1];\n    }\n    /**\n     * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n     * This is the element that will receive the focus by default.\n     * @public\n     */\n\n  }, {\n    key: \"getFocusDomRef\",\n    value: function getFocusDomRef() {\n      var domRef = this.getDomRef();\n\n      if (domRef) {\n        var focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n        return focusRef || domRef;\n      }\n    }\n    /**\n     * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function () {\n      var _focus = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var focusDomRef;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._waitForDomRef();\n\n              case 2:\n                focusDomRef = this.getFocusDomRef();\n\n                if (focusDomRef && typeof focusDomRef.focus === \"function\") {\n                  focusDomRef.focus();\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function focus() {\n        return _focus.apply(this, arguments);\n      }\n\n      return focus;\n    }()\n    /**\n     *\n     * @public\n     * @param name - name of the event\n     * @param data - additional data for the event\n     * @param cancelable - true, if the user can call preventDefault on the event object\n     * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n     */\n\n  }, {\n    key: \"fireEvent\",\n    value: function fireEvent(name, data, cancelable) {\n      var compatEventResult = true; // Initialized to true, because if the event is not fired at all, it should be considered \"not-prevented\"\n\n      var noConflictEvent = new CustomEvent(\"ui5-\".concat(name), {\n        detail: data,\n        composed: false,\n        bubbles: true,\n        cancelable: cancelable\n      }); // This will be false if the compat event is prevented\n\n      compatEventResult = this.dispatchEvent(noConflictEvent);\n\n      if (skipOriginalEvent(name)) {\n        return compatEventResult;\n      }\n\n      var customEvent = new CustomEvent(name, {\n        detail: data,\n        composed: false,\n        bubbles: true,\n        cancelable: cancelable\n      }); // This will be false if the normal event is prevented\n\n      var normalEventResult = this.dispatchEvent(customEvent); // Return false if any of the two events was prevented (its result was false).\n\n      return normalEventResult && compatEventResult;\n    }\n    /**\n     * Returns the actual children, associated with a slot.\n     * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n     * @public\n     */\n\n  }, {\n    key: \"getSlottedNodes\",\n    value: function getSlottedNodes(slotName) {\n      var reducer = function reducer(acc, curr) {\n        if (curr.localName !== \"slot\") {\n          return acc.concat([curr]);\n        }\n\n        return acc.concat(curr.assignedNodes({\n          flatten: true\n        }).filter(function (item) {\n          return item instanceof HTMLElement;\n        }));\n      };\n\n      return this[slotName].reduce(reducer, []);\n    }\n  }, {\n    key: \"updateStaticAreaItemContentDensity\",\n    value: function updateStaticAreaItemContentDensity() {\n      if (this.staticAreaItem) {\n        this.staticAreaItem._updateContentDensity(this.isCompact);\n      }\n    }\n    /**\n     * Used to duck-type UI5 elements without using instanceof\n     * @returns {boolean}\n     * @public\n     */\n\n  }, {\n    key: \"_shouldUpdateFragment\",\n    value: function _shouldUpdateFragment() {\n      return this.constructor._needsStaticArea() && this.staticAreaItem.isRendered();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"getStaticAreaItemDomRef\",\n\n    /**\n     * @public\n     */\n    value: function getStaticAreaItemDomRef() {\n      return this.staticAreaItem.getDomRef();\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"isCompact\",\n    get: function get() {\n      return getComputedStyle(this).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR) === \"compact\";\n    }\n  }, {\n    key: \"isUI5Element\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * Do not override this method in derivatives of UI5Element, use metadata properties instead\n     * @private\n     */\n\n  }], [{\n    key: \"_getSlotName\",\n\n    /**\n     * @private\n     */\n    value: function _getSlotName(child) {\n      // Text nodes can only go to the default slot\n      if (!(child instanceof HTMLElement)) {\n        return \"default\";\n      } // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n\n\n      var slot = child.getAttribute(\"slot\");\n\n      if (slot) {\n        var match = slot.match(/^(.+?)-\\d+$/);\n        return match ? match[1] : slot;\n      } // Use default slot as a fallback\n\n\n      return \"default\";\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_needsShadowDOM\",\n    value: function _needsShadowDOM() {\n      return !!this.template;\n    }\n  }, {\n    key: \"_needsStaticArea\",\n    value: function _needsStaticArea() {\n      return typeof this.staticAreaTemplate === \"function\";\n    }\n  }, {\n    key: \"_getDefaultState\",\n    value: function _getDefaultState() {\n      if (this._defaultState) {\n        return this._defaultState;\n      }\n\n      var MetadataClass = this.getMetadata();\n      var defaultState = {};\n      var slotsAreManaged = MetadataClass.slotsAreManaged(); // Initialize properties\n\n      var props = MetadataClass.getProperties();\n\n      for (var propName in props) {\n        // eslint-disable-line\n        var propType = props[propName].type;\n        var propDefaultValue = props[propName].defaultValue;\n\n        if (propType === Boolean) {\n          defaultState[propName] = false;\n\n          if (propDefaultValue !== undefined) {\n            console.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n          }\n        } else if (props[propName].multiple) {\n          defaultState[propName] = [];\n        } else if (propType === Object) {\n          defaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n        } else if (propType === String) {\n          defaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n        } else {\n          defaultState[propName] = propDefaultValue;\n        }\n      } // Initialize slots\n\n\n      if (slotsAreManaged) {\n        var slots = MetadataClass.getSlots();\n\n        for (var _i2 = 0, _Object$entries2 = Object.entries(slots); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              slotName = _Object$entries2$_i[0],\n              slotData = _Object$entries2$_i[1];\n\n          // eslint-disable-line\n          var propertyName = slotData.propertyName || slotName;\n          defaultState[propertyName] = [];\n        }\n      }\n\n      this._defaultState = defaultState;\n      return defaultState;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: \"_generateAccessors\",\n    value: function _generateAccessors() {\n      var proto = this.prototype;\n      var slotsAreManaged = this.getMetadata().slotsAreManaged(); // Properties\n\n      var properties = this.getMetadata().getProperties();\n\n      var _loop = function _loop() {\n        var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            prop = _Object$entries3$_i[0],\n            propData = _Object$entries3$_i[1];\n\n        // eslint-disable-line\n        if (!isValidPropertyName(prop)) {\n          throw new Error(\"\\\"\".concat(prop, \"\\\" is not a valid property name. Use a name that does not collide with DOM APIs\"));\n        }\n\n        if (propData.type === Boolean && propData.defaultValue) {\n          throw new Error(\"Cannot set a default value for property \\\"\".concat(prop, \"\\\". All booleans are false by default.\"));\n        }\n\n        if (propData.type === Array) {\n          throw new Error(\"Wrong type for property \\\"\".concat(prop, \"\\\". Properties cannot be of type Array - use \\\"multiple: true\\\" and set \\\"type\\\" to the single value type, such as \\\"String\\\", \\\"Object\\\", etc...\"));\n        }\n\n        if (propData.type === Object && propData.defaultValue) {\n          throw new Error(\"Cannot set a default value for property \\\"\".concat(prop, \"\\\". All properties of type \\\"Object\\\" are empty objects by default.\"));\n        }\n\n        if (propData.multiple && propData.defaultValue) {\n          throw new Error(\"Cannot set a default value for property \\\"\".concat(prop, \"\\\". All multiple properties are empty arrays by default.\"));\n        }\n\n        Object.defineProperty(proto, prop, {\n          get: function get() {\n            if (this._state[prop] !== undefined) {\n              return this._state[prop];\n            }\n\n            var propDefaultValue = propData.defaultValue;\n\n            if (propData.type === Boolean) {\n              return false;\n            } else if (propData.type === String) {\n              // eslint-disable-line\n              return propDefaultValue;\n            } else if (propData.multiple) {\n              // eslint-disable-line\n              return [];\n            } else {\n              return propDefaultValue;\n            }\n          },\n          set: function set(value) {\n            value = this.constructor.getMetadata().constructor.validatePropertyValue(value, propData);\n            var oldState = this._state[prop];\n\n            if (oldState !== value) {\n              this._state[prop] = value;\n\n              this._invalidate(prop, value);\n\n              this._propertyChange(prop, value);\n            }\n          }\n        });\n      };\n\n      for (var _i3 = 0, _Object$entries3 = Object.entries(properties); _i3 < _Object$entries3.length; _i3++) {\n        _loop();\n      } // Slots\n\n\n      if (slotsAreManaged) {\n        var slots = this.getMetadata().getSlots();\n\n        var _loop2 = function _loop2() {\n          var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n              slotName = _Object$entries4$_i[0],\n              slotData = _Object$entries4$_i[1];\n\n          // eslint-disable-line\n          if (!isValidPropertyName(slotName)) {\n            throw new Error(\"\\\"\".concat(slotName, \"\\\" is not a valid property name. Use a name that does not collide with DOM APIs\"));\n          }\n\n          var propertyName = slotData.propertyName || slotName;\n          Object.defineProperty(proto, propertyName, {\n            get: function get() {\n              if (this._state[propertyName] !== undefined) {\n                return this._state[propertyName];\n              }\n\n              return [];\n            },\n            set: function set() {\n              throw new Error(\"Cannot set slots directly, use the DOM APIs\");\n            }\n          });\n        };\n\n        for (var _i4 = 0, _Object$entries4 = Object.entries(slots); _i4 < _Object$entries4.length; _i4++) {\n          _loop2();\n        }\n      }\n    }\n    /**\n     * Returns the metadata object for this UI5 Web Component Class\n     * @protected\n     */\n\n  }, {\n    key: \"define\",\n\n    /**\n     * Registers a UI5 Web Component in the browser window object\n     * @public\n     * @returns {Promise<UI5Element>}\n     */\n    value: function () {\n      var _define = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var tag, definedLocally, definedGlobally;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return boot();\n\n              case 2:\n                if (!this.onDefine) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                _context6.next = 5;\n                return this.onDefine();\n\n              case 5:\n                tag = this.getMetadata().getTag();\n                definedLocally = isTagRegistered(tag);\n                definedGlobally = customElements.get(tag);\n\n                if (definedGlobally && !definedLocally) {\n                  console.warn(\"Skipping definition of tag \".concat(tag, \", because it was already defined by another instance of ui5-webcomponents.\")); // eslint-disable-line\n                } else if (!definedGlobally) {\n                  this._generateAccessors();\n\n                  registerTag(tag);\n                  window.customElements.define(tag, this);\n                }\n\n                return _context6.abrupt(\"return\", this);\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function define() {\n        return _define.apply(this, arguments);\n      }\n\n      return define;\n    }()\n    /**\n     * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n     * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n     * @public\n     * @returns {UI5ElementMetadata}\n     */\n\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      if (this.hasOwnProperty(\"_metadata\")) {\n        // eslint-disable-line\n        return this._metadata;\n      }\n\n      var metadataObjects = [this.metadata];\n      var klass = this; // eslint-disable-line\n\n      while (klass !== UI5Element) {\n        klass = Object.getPrototypeOf(klass);\n        metadataObjects.unshift(klass.metadata);\n      }\n\n      var mergedMetadata = merge.apply(void 0, [{}].concat(metadataObjects));\n      this._metadata = new UI5ElementMetadata(mergedMetadata);\n      return this._metadata;\n    }\n  }, {\n    key: \"observedAttributes\",\n    get: function get() {\n      return this.getMetadata().getAttributesList();\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      return metadata;\n    }\n    /**\n     * Returns the CSS for this UI5 Web Component Class\n     * @protected\n     */\n\n  }, {\n    key: \"styles\",\n    get: function get() {\n      return \"\";\n    }\n    /**\n     * Returns the Static Area CSS for this UI5 Web Component Class\n     * @protected\n     */\n\n  }, {\n    key: \"staticAreaStyles\",\n    get: function get() {\n      return \"\";\n    }\n  }]);\n\n  return UI5Element;\n}( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\nexport default UI5Element;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/UI5Element.js"],"names":["merge","boot","UI5ElementMetadata","StaticAreaItem","RenderScheduler","registerTag","isTagRegistered","DOMObserver","skipOriginalEvent","getConstructableStyle","createComponentStyleTag","getEffectiveStyle","Integer","kebabToCamelCase","camelToKebabCase","isValidPropertyName","metadata","events","_propertyChange","autoId","elementTimeouts","Map","GLOBAL_CONTENT_DENSITY_CSS_VAR","UI5Element","_generateId","_initializeState","_upgradeAllProperties","_initializeContainers","_upToDate","deferredResolve","_domRefReadyPromise","Promise","resolve","_deferredResolve","_monitoredChildProps","_firePropertyChange","_id","needsShadowDOM","constructor","_needsShadowDOM","needsStaticArea","_needsStaticArea","attachShadow","mode","window","ShadyDOM","document","adoptedStyleSheets","style","shadowRoot","staticAreaItem","slotsAreManaged","getMetadata","_startObservingDOMChildren","_processChildren","renderImmediately","onEnterDOM","_stopObservingDOMChildren","onExitDOM","_removeFragmentFromStaticArea","shouldObserveChildren","hasSlots","canSlotText","mutationObserverOptions","childList","subtree","characterData","observeDOMNode","bind","unobserveDOMNode","_updateSlots","slotsMap","getSlots","domChildren","Array","from","childNodes","children","Object","entries","slotName","slotData","_clearSlot","autoIncrementMap","slottedChildrenMap","allChildrenUpgraded","map","child","idx","_getSlotName","undefined","validValues","keys","join","console","warn","individualSlots","nextIndex","get","set","_individualSlot","HTMLElement","localName","isCustomElement","includes","isDefined","customElements","whenDefinedPromise","whenDefined","timeoutPromise","setTimeout","race","upgrade","validateSlotValue","isUI5Element","listenFor","_attachChildPropertyUpdated","propertyName","has","push","all","forEach","slot","_state","sort","a","b","_","_invalidate","isArray","_detachChildPropertyUpdated","name","oldValue","newValue","properties","getProperties","realName","replace","nameInCamelCase","hasOwnProperty","propertyTypeClass","type","Boolean","parseInt","hasAttribute","attrName","attrValue","getAttribute","setAttribute","removeAttribute","prop","value","allProps","getPropertiesList","_upgradeProperty","defaultState","_getDefaultState","assign","childMetadata","childProperties","observedProps","notObservedProps","props","exclude","addEventListener","_invalidateParentOnPropertyUpdate","removeEventListener","_updateAttribute","dispatchEvent","CustomEvent","detail","composed","bubbles","parentNode","propsMetadata","getDomRef","_suppressInvalidation","renderDeferred","hasIndividualSlots","onBeforeRendering","_onComponentStateFinalized","_updateShadowRoot","_shouldUpdateFragment","_updateFragment","_assignIndividualSlotsToChildren","onAfterRendering","styleToPrepend","renderResult","template","render","eventContext","length","domRef","focusRef","querySelector","_waitForDomRef","focusDomRef","getFocusDomRef","focus","data","cancelable","compatEventResult","noConflictEvent","customEvent","normalEventResult","reducer","acc","curr","concat","assignedNodes","flatten","filter","item","reduce","_updateContentDensity","isCompact","isRendered","getComputedStyle","getPropertyValue","match","staticAreaTemplate","_defaultState","MetadataClass","propName","propType","propDefaultValue","defaultValue","multiple","String","slots","proto","prototype","propData","Error","defineProperty","validatePropertyValue","oldState","onDefine","tag","getTag","definedLocally","definedGlobally","_generateAccessors","define","_metadata","metadataObjects","klass","getPrototypeOf","unshift","mergedMetadata","getAttributesList"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,6BAA7C;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,uBAAP,MAAoC,sCAApC;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,wBAAnD;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AAEA,IAAMC,QAAQ,GAAG;AAChBC,EAAAA,MAAM,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV;AADQ,CAAjB;AAMA,IAAIC,MAAM,GAAG,CAAb;AAEA,IAAMC,eAAe,GAAG,IAAIC,GAAJ,EAAxB;AAEA,IAAMC,8BAA8B,GAAG,wBAAvC;AACA;;;;;;;;;;;IAUMC,U;;;;;AACL,wBAAc;AAAA;;AAAA;;AACb;;AACA,UAAKC,WAAL;;AACA,UAAKC,gBAAL;;AACA,UAAKC,qBAAL;;AACA,UAAKC,qBAAL;;AACA,UAAKC,SAAL,GAAiB,KAAjB;AAEA,QAAIC,eAAJ;AACA,UAAKC,mBAAL,GAA2B,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACjDH,MAAAA,eAAe,GAAGG,OAAlB;AACA,KAF0B,CAA3B;AAGA,UAAKF,mBAAL,CAAyBG,gBAAzB,GAA4CJ,eAA5C;AAEA,UAAKK,oBAAL,GAA4B,IAAIb,GAAJ,EAA5B;AACA,UAAKc,mBAAL,GAA2B,KAA3B;AAfa;AAgBb;AAED;;;;;;;kCAGc;AACb,WAAKC,GAAL,mBAAoB,EAAEjB,MAAtB;AACA;AAED;;;;;;4CAGwB;AACvB,UAAMkB,cAAc,GAAG,KAAKC,WAAL,CAAiBC,eAAjB,EAAvB;;AACA,UAAMC,eAAe,GAAG,KAAKF,WAAL,CAAiBG,gBAAjB,EAAxB,CAFuB,CAIvB;;;AACA,UAAIJ,cAAJ,EAAoB;AACnB,aAAKK,YAAL,CAAkB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAlB,EADmB,CAGnB;;AACA,YAAIC,MAAM,CAACC,QAAX,EAAqB;AACpBnC,UAAAA,uBAAuB,CAAC,KAAK4B,WAAN,CAAvB;AACA,SANkB,CAQnB;;;AACA,YAAIQ,QAAQ,CAACC,kBAAb,EAAiC;AAChC,cAAMC,KAAK,GAAGvC,qBAAqB,CAAC,KAAK6B,WAAN,CAAnC;AACA,eAAKW,UAAL,CAAgBF,kBAAhB,GAAqC,CAACC,KAAD,CAArC;AACA;AACD,OAlBsB,CAoBvB;;;AACA,UAAIR,eAAJ,EAAqB;AACpB,aAAKU,cAAL,GAAsB,IAAI/C,cAAJ,CAAmB,IAAnB,CAAtB;AACA;AACD;AAED;;;;;;;;;;;;;;AAKOkC,gBAAAA,c,GAAiB,KAAKC,WAAL,CAAiBC,eAAjB,E;AACjBY,gBAAAA,e,GAAkB,KAAKb,WAAL,CAAiBc,WAAjB,GAA+BD,eAA/B,E,EAExB;;qBACId,c;;;;;qBACCc,e;;;;;AACH;AACA,qBAAKE,0BAAL;;;uBACM,KAAKC,gBAAL,E;;;oBAGF,KAAKL,U;;;;;;uBACHlB,OAAO,CAACC,OAAR,E;;;;uBAGD5B,eAAe,CAACmD,iBAAhB,CAAkC,IAAlC,C;;;AACN,qBAAKzB,mBAAL,CAAyBG,gBAAzB;;AACA,oBAAI,OAAO,KAAKuB,UAAZ,KAA2B,UAA/B,EAA2C;AAC1C,uBAAKA,UAAL;AACA;;;;;;;;;;;;;;;;AAIH;;;;;;;2CAIuB;AACtB,UAAMnB,cAAc,GAAG,KAAKC,WAAL,CAAiBC,eAAjB,EAAvB;;AACA,UAAMC,eAAe,GAAG,KAAKF,WAAL,CAAiBG,gBAAjB,EAAxB;;AACA,UAAMU,eAAe,GAAG,KAAKb,WAAL,CAAiBc,WAAjB,GAA+BD,eAA/B,EAAxB;;AAEA,UAAId,cAAJ,EAAoB;AACnB,YAAIc,eAAJ,EAAqB;AACpB,eAAKM,yBAAL;AACA;;AAED,YAAI,OAAO,KAAKC,SAAZ,KAA0B,UAA9B,EAA0C;AACzC,eAAKA,SAAL;AACA;AACD;;AAED,UAAIlB,eAAJ,EAAqB;AACpB,aAAKU,cAAL,CAAoBS,6BAApB;AACA;AACD;AAED;;;;;;iDAG6B;AAC5B,UAAMC,qBAAqB,GAAG,KAAKtB,WAAL,CAAiBc,WAAjB,GAA+BS,QAA/B,EAA9B;;AACA,UAAI,CAACD,qBAAL,EAA4B;AAC3B;AACA;;AAED,UAAME,WAAW,GAAG,KAAKxB,WAAL,CAAiBc,WAAjB,GAA+BU,WAA/B,EAApB;AACA,UAAMC,uBAAuB,GAAG;AAC/BC,QAAAA,SAAS,EAAE,IADoB;AAE/BC,QAAAA,OAAO,EAAEH,WAFsB;AAG/BI,QAAAA,aAAa,EAAE;AAHgB,OAAhC;AAKA3D,MAAAA,WAAW,CAAC4D,cAAZ,CAA2B,IAA3B,EAAiC,KAAKb,gBAAL,CAAsBc,IAAtB,CAA2B,IAA3B,CAAjC,EAAmEL,uBAAnE;AACA;AAED;;;;;;gDAG4B;AAC3BxD,MAAAA,WAAW,CAAC8D,gBAAZ,CAA6B,IAA7B;AACA;AAED;;;;;;;;;;;;;;AAKOR,gBAAAA,Q,GAAW,KAAKvB,WAAL,CAAiBc,WAAjB,GAA+BS,QAA/B,E;;qBACbA,Q;;;;;;uBACG,KAAKS,YAAL,E;;;;;;;;;;;;;;;;AAIR;;;;;;;;;;;;;;;;AAIOC,gBAAAA,Q,GAAW,KAAKjC,WAAL,CAAiBc,WAAjB,GAA+BoB,QAA/B,E;AACXV,gBAAAA,W,GAAc,KAAKxB,WAAL,CAAiBc,WAAjB,GAA+BU,WAA/B,E;AACdW,gBAAAA,W,GAAcC,KAAK,CAACC,IAAN,CAAWb,WAAW,GAAG,KAAKc,UAAR,GAAqB,KAAKC,QAAhD,C,EAEpB;;AACA,+CAAmCC,MAAM,CAACC,OAAP,CAAeR,QAAf,CAAnC,qCAA6D;AAAA,+EAAjDS,QAAiD,0BAAvCC,QAAuC;;AAAE;AAC9D,uBAAKC,UAAL,CAAgBF,QAAhB,EAA0BC,QAA1B;AACA;;AAEKE,gBAAAA,gB,GAAmB,IAAI9D,GAAJ,E;AACnB+D,gBAAAA,kB,GAAqB,IAAI/D,GAAJ,E;AAErBgE,gBAAAA,mB,GAAsBZ,WAAW,CAACa,GAAZ;AAAA,sFAAgB,kBAAOC,KAAP,EAAcC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3C;AACMR,4BAAAA,QAFqC,GAE1B,MAAI,CAAC1C,WAAL,CAAiBmD,YAAjB,CAA8BF,KAA9B,CAF0B;AAGrCN,4BAAAA,QAHqC,GAG1BV,QAAQ,CAACS,QAAD,CAHkB,EAK3C;;AAL2C,kCAMvCC,QAAQ,KAAKS,SAN0B;AAAA;AAAA;AAAA;;AAOpCC,4BAAAA,WAPoC,GAOtBb,MAAM,CAACc,IAAP,CAAYrB,QAAZ,EAAsBsB,IAAtB,CAA2B,IAA3B,CAPsB;AAQ1CC,4BAAAA,OAAO,CAACC,IAAR,6BAAkCf,QAAlC,iBAAwDO,KAAxD,8BAAoFI,WAApF,GAR0C,CAQ0D;;AAR1D;;AAAA;AAY3C;AACA,gCAAIV,QAAQ,CAACe,eAAb,EAA8B;AACvBC,8BAAAA,SADuB,GACX,CAACd,gBAAgB,CAACe,GAAjB,CAAqBlB,QAArB,KAAkC,CAAnC,IAAwC,CAD7B;AAE7BG,8BAAAA,gBAAgB,CAACgB,GAAjB,CAAqBnB,QAArB,EAA+BiB,SAA/B;AACAV,8BAAAA,KAAK,CAACa,eAAN,aAA2BpB,QAA3B,cAAuCiB,SAAvC;AACA,6BAjB0C,CAmB3C;;;AAnB2C,kCAoBvCV,KAAK,YAAYc,WApBsB;AAAA;AAAA;AAAA;;AAqBpCC,4BAAAA,SArBoC,GAqBxBf,KAAK,CAACe,SArBkB;AAsBpCC,4BAAAA,eAtBoC,GAsBlBD,SAAS,CAACE,QAAV,CAAmB,GAAnB,CAtBkB;;AAAA,iCAuBtCD,eAvBsC;AAAA;AAAA;AAAA;;AAwBnCE,4BAAAA,SAxBmC,GAwBvB7D,MAAM,CAAC8D,cAAP,CAAsBR,GAAtB,CAA0BI,SAA1B,CAxBuB;;AAAA,gCAyBpCG,SAzBoC;AAAA;AAAA;AAAA;;AA0BlCE,4BAAAA,kBA1BkC,GA0Bb/D,MAAM,CAAC8D,cAAP,CAAsBE,WAAtB,CAAkCN,SAAlC,CA1Ba,EA0BiC;;AACrEO,4BAAAA,cA3BoC,GA2BnBzF,eAAe,CAAC8E,GAAhB,CAAoBI,SAApB,CA3BmB;;AA4BxC,gCAAI,CAACO,cAAL,EAAqB;AACpBA,8BAAAA,cAAc,GAAG,IAAI9E,OAAJ,CAAY,UAAAC,OAAO;AAAA,uCAAI8E,UAAU,CAAC9E,OAAD,EAAU,IAAV,CAAd;AAAA,+BAAnB,CAAjB;AACAZ,8BAAAA,eAAe,CAAC+E,GAAhB,CAAoBG,SAApB,EAA+BO,cAA/B;AACA;;AA/BuC;AAAA,mCAgClC9E,OAAO,CAACgF,IAAR,CAAa,CAACJ,kBAAD,EAAqBE,cAArB,CAAb,CAhCkC;;AAAA;AAkCzCjE,4BAAAA,MAAM,CAAC8D,cAAP,CAAsBM,OAAtB,CAA8BzB,KAA9B;;AAlCyC;AAsC3CA,4BAAAA,KAAK,GAAG,MAAI,CAACjD,WAAL,CAAiBc,WAAjB,GAA+Bd,WAA/B,CAA2C2E,iBAA3C,CAA6D1B,KAA7D,EAAoEN,QAApE,CAAR;;AAEA,gCAAIM,KAAK,CAAC2B,YAAN,IAAsBjC,QAAQ,CAACkC,SAAnC,EAA8C;AAC7C,8BAAA,MAAI,CAACC,2BAAL,CAAiC7B,KAAjC,EAAwCN,QAAQ,CAACkC,SAAjD;AACA;;AAEKE,4BAAAA,YA5CqC,GA4CtBpC,QAAQ,CAACoC,YAAT,IAAyBrC,QA5CH;;AA8C3C,gCAAII,kBAAkB,CAACkC,GAAnB,CAAuBD,YAAvB,CAAJ,EAA0C;AACzCjC,8BAAAA,kBAAkB,CAACc,GAAnB,CAAuBmB,YAAvB,EAAqCE,IAArC,CAA0C;AAAEhC,gCAAAA,KAAK,EAALA,KAAF;AAASC,gCAAAA,GAAG,EAAHA;AAAT,+BAA1C;AACA,6BAFD,MAEO;AACNJ,8BAAAA,kBAAkB,CAACe,GAAnB,CAAuBkB,YAAvB,EAAqC,CAAC;AAAE9B,gCAAAA,KAAK,EAALA,KAAF;AAASC,gCAAAA,GAAG,EAAHA;AAAT,+BAAD,CAArC;AACA;;AAlD0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAhB;;AAAA;AAAA;AAAA;AAAA,oB;;uBAqDtBzD,OAAO,CAACyF,GAAR,CAAYnC,mBAAZ,C;;;AAEN;AACA;AACAD,gBAAAA,kBAAkB,CAACqC,OAAnB,CAA2B,UAAC5C,QAAD,EAAW6C,IAAX,EAAoB;AAC9C,kBAAA,MAAI,CAACC,MAAL,CAAYD,IAAZ,IAAoB7C,QAAQ,CAAC+C,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAUD,CAAC,CAACrC,GAAF,GAAQsC,CAAC,CAACtC,GAApB;AAAA,mBAAd,EAAuCF,GAAvC,CAA2C,UAAAyC,CAAC;AAAA,2BAAIA,CAAC,CAACxC,KAAN;AAAA,mBAA5C,CAApB;AACA,iBAFD;;AAGA,qBAAKyC,WAAL,CAAiB,OAAjB;;;;;;;;;;;;;;;;AAGD;;;;;;;+BAIWhD,Q,EAAUC,Q,EAAU;AAAA;;AAC9B,UAAMoC,YAAY,GAAGpC,QAAQ,CAACoC,YAAT,IAAyBrC,QAA9C;AAEA,UAAIH,QAAQ,GAAG,KAAK8C,MAAL,CAAYN,YAAZ,CAAf;;AACA,UAAI,CAAC3C,KAAK,CAACuD,OAAN,CAAcpD,QAAd,CAAL,EAA8B;AAC7BA,QAAAA,QAAQ,GAAG,CAACA,QAAD,CAAX;AACA;;AAEDA,MAAAA,QAAQ,CAAC4C,OAAT,CAAiB,UAAAlC,KAAK,EAAI;AACzB,YAAIA,KAAK,IAAIA,KAAK,CAAC2B,YAAnB,EAAiC;AAChC,UAAA,MAAI,CAACgB,2BAAL,CAAiC3C,KAAjC;AACA;AACD,OAJD;AAMA,WAAKoC,MAAL,CAAYN,YAAZ,IAA4B,EAA5B;;AACA,WAAKW,WAAL,CAAiBX,YAAjB,EAA+B,EAA/B;AACA;AAED;;;;;;;6CAIyBc,I,EAAMC,Q,EAAUC,Q,EAAU;AAClD,UAAMC,UAAU,GAAG,KAAKhG,WAAL,CAAiBc,WAAjB,GAA+BmF,aAA/B,EAAnB;AACA,UAAMC,QAAQ,GAAGL,IAAI,CAACM,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAjB;AACA,UAAMC,eAAe,GAAG7H,gBAAgB,CAAC2H,QAAD,CAAxC;;AACA,UAAIF,UAAU,CAACK,cAAX,CAA0BD,eAA1B,CAAJ,EAAgD;AAAE;AACjD,YAAME,iBAAiB,GAAGN,UAAU,CAACI,eAAD,CAAV,CAA4BG,IAAtD;;AACA,YAAID,iBAAiB,KAAKE,OAA1B,EAAmC;AAClCT,UAAAA,QAAQ,GAAGA,QAAQ,KAAK,IAAxB;AACA;;AACD,YAAIO,iBAAiB,KAAKhI,OAA1B,EAAmC;AAClCyH,UAAAA,QAAQ,GAAGU,QAAQ,CAACV,QAAD,CAAnB;AACA;;AACD,aAAKK,eAAL,IAAwBL,QAAxB;AACA;AACD;AAED;;;;;;qCAGiBF,I,EAAME,Q,EAAU;AAChC,UAAI,CAAC,KAAK/F,WAAL,CAAiBc,WAAjB,GAA+B4F,YAA/B,CAA4Cb,IAA5C,CAAL,EAAwD;AACvD;AACA;;AAED,UAAI,OAAOE,QAAP,KAAoB,QAAxB,EAAkC;AACjC;AACA;;AAED,UAAMY,QAAQ,GAAGnI,gBAAgB,CAACqH,IAAD,CAAjC;AACA,UAAMe,SAAS,GAAG,KAAKC,YAAL,CAAkBF,QAAlB,CAAlB;;AACA,UAAI,OAAOZ,QAAP,KAAoB,SAAxB,EAAmC;AAClC,YAAIA,QAAQ,KAAK,IAAb,IAAqBa,SAAS,KAAK,IAAvC,EAA6C;AAC5C,eAAKE,YAAL,CAAkBH,QAAlB,EAA4B,EAA5B;AACA,SAFD,MAEO,IAAIZ,QAAQ,KAAK,KAAb,IAAsBa,SAAS,KAAK,IAAxC,EAA8C;AACpD,eAAKG,eAAL,CAAqBJ,QAArB;AACA;AACD,OAND,MAMO,IAAIC,SAAS,KAAKb,QAAlB,EAA4B;AAClC,aAAKe,YAAL,CAAkBH,QAAlB,EAA4BZ,QAA5B;AACA;AACD;AAED;;;;;;qCAGiBiB,I,EAAM;AACtB,UAAI,KAAKX,cAAL,CAAoBW,IAApB,CAAJ,EAA+B;AAAE;AAChC,YAAMC,KAAK,GAAG,KAAKD,IAAL,CAAd;AACA,eAAO,KAAKA,IAAL,CAAP;AACA,aAAKA,IAAL,IAAaC,KAAb;AACA;AACD;AAED;;;;;;4CAGwB;AACvB,UAAMC,QAAQ,GAAG,KAAKlH,WAAL,CAAiBc,WAAjB,GAA+BqG,iBAA/B,EAAjB;AACAD,MAAAA,QAAQ,CAAC/B,OAAT,CAAiB,KAAKiC,gBAAtB,EAAwC,IAAxC;AACA;AAED;;;;;;uCAGmB;AAClB,UAAMC,YAAY,GAAG,KAAKrH,WAAL,CAAiBsH,gBAAjB,EAArB;;AACA,WAAKjC,MAAL,GAAc7C,MAAM,CAAC+E,MAAP,CAAc,EAAd,EAAkBF,YAAlB,CAAd;AACA;AAED;;;;;;gDAG4BpE,K,EAAO4B,S,EAAW;AAC7C,UAAM2C,aAAa,GAAGvE,KAAK,CAACjD,WAAN,CAAkBc,WAAlB,EAAtB;AAAA,UACC4B,QAAQ,GAAG,KAAK1C,WAAL,CAAiBmD,YAAjB,CAA8BF,KAA9B,CADZ;AAAA,UACkD;AACjDwE,MAAAA,eAAe,GAAGD,aAAa,CAACvB,aAAd,EAFnB;;AAIA,UAAIyB,aAAa,GAAG,EAApB;AAAA,UACCC,gBAAgB,GAAG,EADpB;;AAGA,UAAIvF,KAAK,CAACuD,OAAN,CAAcd,SAAd,CAAJ,EAA8B;AAC7B6C,QAAAA,aAAa,GAAG7C,SAAhB;AACA,OAFD,MAEO;AACN6C,QAAAA,aAAa,GAAGtF,KAAK,CAACuD,OAAN,CAAcd,SAAS,CAAC+C,KAAxB,IAAiC/C,SAAS,CAAC+C,KAA3C,GAAmDpF,MAAM,CAACc,IAAP,CAAYmE,eAAZ,CAAnE;AACAE,QAAAA,gBAAgB,GAAGvF,KAAK,CAACuD,OAAN,CAAcd,SAAS,CAACgD,OAAxB,IAAmChD,SAAS,CAACgD,OAA7C,GAAuD,EAA1E;AACA;;AAED,UAAI,CAAC,KAAKjI,oBAAL,CAA0BoF,GAA1B,CAA8BtC,QAA9B,CAAL,EAA8C;AAC7C,aAAK9C,oBAAL,CAA0BiE,GAA1B,CAA8BnB,QAA9B,EAAwC;AAAEgF,UAAAA,aAAa,EAAbA,aAAF;AAAiBC,UAAAA,gBAAgB,EAAhBA;AAAjB,SAAxC;AACA;;AAED1E,MAAAA,KAAK,CAAC6E,gBAAN,CAAuB,iBAAvB,EAA0C,KAAKC,iCAA/C;AACA9E,MAAAA,KAAK,CAACpD,mBAAN,GAA4B,IAA5B;AACA;AAED;;;;;;gDAG4BoD,K,EAAO;AAClCA,MAAAA,KAAK,CAAC+E,mBAAN,CAA0B,iBAA1B,EAA6C,KAAKD,iCAAlD;AACA9E,MAAAA,KAAK,CAACpD,mBAAN,GAA4B,KAA5B;AACA;AAED;;;;;;oCAGgBgG,I,EAAMoB,K,EAAO;AAC5B,WAAKgB,gBAAL,CAAsBpC,IAAtB,EAA4BoB,KAA5B;;AAEA,UAAI,KAAKpH,mBAAT,EAA8B;AAC7B,aAAKqI,aAAL,CAAmB,IAAIC,WAAJ,CAAgB,iBAAhB,EAAmC;AACrDC,UAAAA,MAAM,EAAE;AAAEvC,YAAAA,IAAI,EAAJA,IAAF;AAAQE,YAAAA,QAAQ,EAAEkB;AAAlB,WAD6C;AAErDoB,UAAAA,QAAQ,EAAE,KAF2C;AAGrDC,UAAAA,OAAO,EAAE;AAH4C,SAAnC,CAAnB;AAKA;AACD;AAED;;;;;;sDAGkCtB,I,EAAM;AACvC;AACA,UAAMuB,UAAU,GAAG,KAAKA,UAAxB;;AACA,UAAI,CAACA,UAAL,EAAiB;AAChB;AACA;;AAED,UAAM7F,QAAQ,GAAG6F,UAAU,CAACvI,WAAX,CAAuBmD,YAAvB,CAAoC,IAApC,CAAjB;;AACA,UAAMqF,aAAa,GAAGD,UAAU,CAAC3I,oBAAX,CAAgCgE,GAAhC,CAAoClB,QAApC,CAAtB;;AAEA,UAAI,CAAC8F,aAAL,EAAoB;AACnB;AACA;;AAZsC,UAa/Bd,aAb+B,GAaKc,aAbL,CAa/Bd,aAb+B;AAAA,UAahBC,gBAbgB,GAaKa,aAbL,CAahBb,gBAbgB;;AAevC,UAAID,aAAa,CAACxD,QAAd,CAAuB8C,IAAI,CAACoB,MAAL,CAAYvC,IAAnC,KAA4C,CAAC8B,gBAAgB,CAACzD,QAAjB,CAA0B8C,IAAI,CAACoB,MAAL,CAAYvC,IAAtC,CAAjD,EAA8F;AAC7F0C,QAAAA,UAAU,CAAC7C,WAAX,CAAuB,UAAvB,EAAmC,IAAnC;AACA;AACD;AAED;;;;;;;kCAIc;AACb,UAAI,CAAC,KAAKpG,SAAV,EAAqB;AACpB;AACA;AACA;;AAED,UAAI,KAAKmJ,SAAL,MAAoB,CAAC,KAAKC,qBAA9B,EAAqD;AACpD,aAAKpJ,SAAL,GAAiB,KAAjB,CADoD,CAEpD;;AACAxB,QAAAA,eAAe,CAAC6K,cAAhB,CAA+B,IAA/B;AACA;AACD;AAED;;;;;;;8BAIU;AACT,UAAMC,kBAAkB,GAAG,KAAK5I,WAAL,CAAiBc,WAAjB,GAA+B8H,kBAA/B,EAA3B,CADS,CAGT;;AACA,WAAKF,qBAAL,GAA6B,IAA7B;;AAEA,UAAI,OAAO,KAAKG,iBAAZ,KAAkC,UAAtC,EAAkD;AACjD,aAAKA,iBAAL;AACA,OARQ,CAUT;;;AACA,UAAI,KAAKC,0BAAT,EAAqC;AACpC,aAAKA,0BAAL;AACA,OAbQ,CAeT;;;AACA,aAAO,KAAKJ,qBAAZ,CAhBS,CAkBT;AACA;;AACA,WAAKpJ,SAAL,GAAiB,IAAjB;;AACA,WAAKyJ,iBAAL;;AAEA,UAAI,KAAKC,qBAAL,EAAJ,EAAkC;AACjC,aAAKpI,cAAL,CAAoBqI,eAApB,CAAoC,IAApC;AACA,OAzBQ,CA2BT;;;AACA,UAAIL,kBAAJ,EAAwB;AACvB,aAAKM,gCAAL;AACA,OA9BQ,CAgCT;;;AACA,UAAI,OAAO,KAAKC,gBAAZ,KAAiC,UAArC,EAAiD;AAChD,aAAKA,gBAAL;AACA;AACD;AAED;;;;;;wCAGoB;AACnB,UAAI,CAAC,KAAKnJ,WAAL,CAAiBC,eAAjB,EAAL,EAAyC;AACxC;AACA;;AAED,UAAImJ,cAAJ;AACA,UAAMC,YAAY,GAAG,KAAKrJ,WAAL,CAAiBsJ,QAAjB,CAA0B,IAA1B,CAArB;;AAEA,UAAI,CAAC9I,QAAQ,CAACC,kBAAV,IAAgC,CAACH,MAAM,CAACC,QAA5C,EAAsD;AACrD6I,QAAAA,cAAc,GAAG/K,iBAAiB,CAAC,KAAK2B,WAAN,CAAlC;AACA;;AACD,WAAKA,WAAL,CAAiBuJ,MAAjB,CAAwBF,YAAxB,EAAsC,KAAK1I,UAA3C,EAAuDyI,cAAvD,EAAuE;AAAEI,QAAAA,YAAY,EAAE;AAAhB,OAAvE;AACA;AAED;;;;;;uDAGmC;AAClC,UAAMrH,WAAW,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKE,QAAhB,CAApB;AAEAJ,MAAAA,WAAW,CAACgD,OAAZ,CAAoB,UAAAlC,KAAK,EAAI;AAC5B,YAAIA,KAAK,CAACa,eAAV,EAA2B;AAC1Bb,UAAAA,KAAK,CAAC6D,YAAN,CAAmB,MAAnB,EAA2B7D,KAAK,CAACa,eAAjC;AACA;AACD,OAJD;AAKA;AAED;;;;;;qCAGiB;AAChB,aAAO,KAAKtE,mBAAZ;AACA;AAED;;;;;;;;gCAKY;AACX,UAAI,CAAC,KAAKmB,UAAN,IAAoB,KAAKA,UAAL,CAAgB4B,QAAhB,CAAyBkH,MAAzB,KAAoC,CAA5D,EAA+D;AAC9D;AACA;;AAED,aAAO,KAAK9I,UAAL,CAAgB4B,QAAhB,CAAyBkH,MAAzB,KAAoC,CAApC,GACJ,KAAK9I,UAAL,CAAgB4B,QAAhB,CAAyB,CAAzB,CADI,GAC0B,KAAK5B,UAAL,CAAgB4B,QAAhB,CAAyB,CAAzB,CADjC;AAEA;AAED;;;;;;;;qCAKiB;AAChB,UAAMmH,MAAM,GAAG,KAAKjB,SAAL,EAAf;;AACA,UAAIiB,MAAJ,EAAY;AACX,YAAMC,QAAQ,GAAGD,MAAM,CAACE,aAAP,CAAqB,sBAArB,CAAjB;AACA,eAAOD,QAAQ,IAAID,MAAnB;AACA;AACD;AAED;;;;;;;;;;;;;;;uBAKO,KAAKG,cAAL,E;;;AAEAC,gBAAAA,W,GAAc,KAAKC,cAAL,E;;AAEpB,oBAAID,WAAW,IAAI,OAAOA,WAAW,CAACE,KAAnB,KAA6B,UAAhD,EAA4D;AAC3DF,kBAAAA,WAAW,CAACE,KAAZ;AACA;;;;;;;;;;;;;;;;AAGF;;;;;;;;;;;8BAQUnE,I,EAAMoE,I,EAAMC,U,EAAY;AACjC,UAAIC,iBAAiB,GAAG,IAAxB,CADiC,CACH;;AAE9B,UAAMC,eAAe,GAAG,IAAIjC,WAAJ,eAAuBtC,IAAvB,GAA+B;AACtDuC,QAAAA,MAAM,EAAE6B,IAD8C;AAEtD5B,QAAAA,QAAQ,EAAE,KAF4C;AAGtDC,QAAAA,OAAO,EAAE,IAH6C;AAItD4B,QAAAA,UAAU,EAAVA;AAJsD,OAA/B,CAAxB,CAHiC,CAUjC;;AACAC,MAAAA,iBAAiB,GAAG,KAAKjC,aAAL,CAAmBkC,eAAnB,CAApB;;AAEA,UAAIlM,iBAAiB,CAAC2H,IAAD,CAArB,EAA6B;AAC5B,eAAOsE,iBAAP;AACA;;AAED,UAAME,WAAW,GAAG,IAAIlC,WAAJ,CAAgBtC,IAAhB,EAAsB;AACzCuC,QAAAA,MAAM,EAAE6B,IADiC;AAEzC5B,QAAAA,QAAQ,EAAE,KAF+B;AAGzCC,QAAAA,OAAO,EAAE,IAHgC;AAIzC4B,QAAAA,UAAU,EAAVA;AAJyC,OAAtB,CAApB,CAjBiC,CAwBjC;;AACA,UAAMI,iBAAiB,GAAG,KAAKpC,aAAL,CAAmBmC,WAAnB,CAA1B,CAzBiC,CA2BjC;;AACA,aAAOC,iBAAiB,IAAIH,iBAA5B;AACA;AAED;;;;;;;;oCAKgBzH,Q,EAAU;AACzB,UAAM6H,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC9B,YAAIA,IAAI,CAACzG,SAAL,KAAmB,MAAvB,EAA+B;AAC9B,iBAAOwG,GAAG,CAACE,MAAJ,CAAW,CAACD,IAAD,CAAX,CAAP;AACA;;AACD,eAAOD,GAAG,CAACE,MAAJ,CAAWD,IAAI,CAACE,aAAL,CAAmB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAnB,EAAsCC,MAAtC,CAA6C,UAAAC,IAAI;AAAA,iBAAIA,IAAI,YAAY/G,WAApB;AAAA,SAAjD,CAAX,CAAP;AACA,OALD;;AAOA,aAAO,KAAKrB,QAAL,EAAeqI,MAAf,CAAsBR,OAAtB,EAA+B,EAA/B,CAAP;AACA;;;yDAMoC;AACpC,UAAI,KAAK3J,cAAT,EAAyB;AACxB,aAAKA,cAAL,CAAoBoK,qBAApB,CAA0C,KAAKC,SAA/C;AACA;AACD;AAED;;;;;;;;4CA4CwB;AACvB,aAAO,KAAKjL,WAAL,CAAiBG,gBAAjB,MAAuC,KAAKS,cAAL,CAAoBsK,UAApB,EAA9C;AACA;AAED;;;;;;;AAOA;;;8CAG0B;AACzB,aAAO,KAAKtK,cAAL,CAAoB6H,SAApB,EAAP;AACA;AAED;;;;;;wBAxEgB;AACf,aAAO0C,gBAAgB,CAAC,IAAD,CAAhB,CAAuBC,gBAAvB,CAAwCpM,8BAAxC,MAA4E,SAAnF;AACA;;;wBAakB;AAClB,aAAO,IAAP;AACA;AAED;;;;;;;;AAQA;;;iCAGoBiE,K,EAAO;AAC1B;AACA,UAAI,EAAEA,KAAK,YAAYc,WAAnB,CAAJ,EAAqC;AACpC,eAAO,SAAP;AACA,OAJyB,CAM1B;;;AACA,UAAMqB,IAAI,GAAGnC,KAAK,CAAC4D,YAAN,CAAmB,MAAnB,CAAb;;AACA,UAAIzB,IAAJ,EAAU;AACT,YAAMiG,KAAK,GAAGjG,IAAI,CAACiG,KAAL,CAAW,aAAX,CAAd;AACA,eAAOA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAcjG,IAA1B;AACA,OAXyB,CAa1B;;;AACA,aAAO,SAAP;AACA;AAED;;;;;;sCAGyB;AACxB,aAAO,CAAC,CAAC,KAAKkE,QAAd;AACA;;;uCASyB;AACzB,aAAO,OAAO,KAAKgC,kBAAZ,KAAmC,UAA1C;AACA;;;uCAYyB;AACzB,UAAI,KAAKC,aAAT,EAAwB;AACvB,eAAO,KAAKA,aAAZ;AACA;;AAED,UAAMC,aAAa,GAAG,KAAK1K,WAAL,EAAtB;AACA,UAAMuG,YAAY,GAAG,EAArB;AACA,UAAMxG,eAAe,GAAG2K,aAAa,CAAC3K,eAAd,EAAxB,CAPyB,CASzB;;AACA,UAAM+G,KAAK,GAAG4D,aAAa,CAACvF,aAAd,EAAd;;AACA,WAAK,IAAMwF,QAAX,IAAuB7D,KAAvB,EAA8B;AAAE;AAC/B,YAAM8D,QAAQ,GAAG9D,KAAK,CAAC6D,QAAD,CAAL,CAAgBlF,IAAjC;AACA,YAAMoF,gBAAgB,GAAG/D,KAAK,CAAC6D,QAAD,CAAL,CAAgBG,YAAzC;;AAEA,YAAIF,QAAQ,KAAKlF,OAAjB,EAA0B;AACzBa,UAAAA,YAAY,CAACoE,QAAD,CAAZ,GAAyB,KAAzB;;AAEA,cAAIE,gBAAgB,KAAKvI,SAAzB,EAAoC;AACnCI,YAAAA,OAAO,CAACC,IAAR,CAAa,2HAAb,EADmC,CACwG;AAC3I;AACD,SAND,MAMO,IAAImE,KAAK,CAAC6D,QAAD,CAAL,CAAgBI,QAApB,EAA8B;AACpCxE,UAAAA,YAAY,CAACoE,QAAD,CAAZ,GAAyB,EAAzB;AACA,SAFM,MAEA,IAAIC,QAAQ,KAAKlJ,MAAjB,EAAyB;AAC/B6E,UAAAA,YAAY,CAACoE,QAAD,CAAZ,GAAyB,kBAAkB7D,KAAK,CAAC6D,QAAD,CAAvB,GAAoC7D,KAAK,CAAC6D,QAAD,CAAL,CAAgBG,YAApD,GAAmE,EAA5F;AACA,SAFM,MAEA,IAAIF,QAAQ,KAAKI,MAAjB,EAAyB;AAC/BzE,UAAAA,YAAY,CAACoE,QAAD,CAAZ,GAAyB,kBAAkB7D,KAAK,CAAC6D,QAAD,CAAvB,GAAoC7D,KAAK,CAAC6D,QAAD,CAAL,CAAgBG,YAApD,GAAmE,EAA5F;AACA,SAFM,MAEA;AACNvE,UAAAA,YAAY,CAACoE,QAAD,CAAZ,GAAyBE,gBAAzB;AACA;AACD,OA9BwB,CAgCzB;;;AACA,UAAI9K,eAAJ,EAAqB;AACpB,YAAMkL,KAAK,GAAGP,aAAa,CAACtJ,QAAd,EAAd;;AACA,6CAAmCM,MAAM,CAACC,OAAP,CAAesJ,KAAf,CAAnC,wCAA0D;AAAA;AAAA,cAA9CrJ,QAA8C;AAAA,cAApCC,QAAoC;;AAAE;AAC3D,cAAMoC,YAAY,GAAGpC,QAAQ,CAACoC,YAAT,IAAyBrC,QAA9C;AACA2E,UAAAA,YAAY,CAACtC,YAAD,CAAZ,GAA6B,EAA7B;AACA;AACD;;AAED,WAAKwG,aAAL,GAAqBlE,YAArB;AACA,aAAOA,YAAP;AACA;AAED;;;;;;yCAG4B;AAC3B,UAAM2E,KAAK,GAAG,KAAKC,SAAnB;AACA,UAAMpL,eAAe,GAAG,KAAKC,WAAL,GAAmBD,eAAnB,EAAxB,CAF2B,CAI3B;;AACA,UAAMmF,UAAU,GAAG,KAAKlF,WAAL,GAAmBmF,aAAnB,EAAnB;;AAL2B;AAAA;AAAA,YAMfe,IANe;AAAA,YAMTkF,QANS;;AAMkC;AAC5D,YAAI,CAACzN,mBAAmB,CAACuI,IAAD,CAAxB,EAAgC;AAC/B,gBAAM,IAAImF,KAAJ,aAAcnF,IAAd,qFAAN;AACA;;AAED,YAAIkF,QAAQ,CAAC3F,IAAT,KAAkBC,OAAlB,IAA6B0F,QAAQ,CAACN,YAA1C,EAAwD;AACvD,gBAAM,IAAIO,KAAJ,qDAAsDnF,IAAtD,4CAAN;AACA;;AAED,YAAIkF,QAAQ,CAAC3F,IAAT,KAAkBnE,KAAtB,EAA6B;AAC5B,gBAAM,IAAI+J,KAAJ,qCAAsCnF,IAAtC,uJAAN;AACA;;AAED,YAAIkF,QAAQ,CAAC3F,IAAT,KAAkB/D,MAAlB,IAA4B0J,QAAQ,CAACN,YAAzC,EAAuD;AACtD,gBAAM,IAAIO,KAAJ,qDAAsDnF,IAAtD,yEAAN;AACA;;AAED,YAAIkF,QAAQ,CAACL,QAAT,IAAqBK,QAAQ,CAACN,YAAlC,EAAgD;AAC/C,gBAAM,IAAIO,KAAJ,qDAAsDnF,IAAtD,8DAAN;AACA;;AAEDxE,QAAAA,MAAM,CAAC4J,cAAP,CAAsBJ,KAAtB,EAA6BhF,IAA7B,EAAmC;AAClCpD,UAAAA,GADkC,iBAC5B;AACL,gBAAI,KAAKyB,MAAL,CAAY2B,IAAZ,MAAsB5D,SAA1B,EAAqC;AACpC,qBAAO,KAAKiC,MAAL,CAAY2B,IAAZ,CAAP;AACA;;AAED,gBAAM2E,gBAAgB,GAAGO,QAAQ,CAACN,YAAlC;;AAEA,gBAAIM,QAAQ,CAAC3F,IAAT,KAAkBC,OAAtB,EAA+B;AAC9B,qBAAO,KAAP;AACA,aAFD,MAEO,IAAI0F,QAAQ,CAAC3F,IAAT,KAAkBuF,MAAtB,EAA8B;AAAG;AACvC,qBAAOH,gBAAP;AACA,aAFM,MAEA,IAAIO,QAAQ,CAACL,QAAb,EAAuB;AAAE;AAC/B,qBAAO,EAAP;AACA,aAFM,MAEA;AACN,qBAAOF,gBAAP;AACA;AACD,WAjBiC;AAkBlC9H,UAAAA,GAlBkC,eAkB9BoD,KAlB8B,EAkBvB;AACVA,YAAAA,KAAK,GAAG,KAAKjH,WAAL,CAAiBc,WAAjB,GAA+Bd,WAA/B,CAA2CqM,qBAA3C,CAAiEpF,KAAjE,EAAwEiF,QAAxE,CAAR;AAEA,gBAAMI,QAAQ,GAAG,KAAKjH,MAAL,CAAY2B,IAAZ,CAAjB;;AAEA,gBAAIsF,QAAQ,KAAKrF,KAAjB,EAAwB;AACvB,mBAAK5B,MAAL,CAAY2B,IAAZ,IAAoBC,KAApB;;AACA,mBAAKvB,WAAL,CAAiBsB,IAAjB,EAAuBC,KAAvB;;AACA,mBAAKrI,eAAL,CAAqBoI,IAArB,EAA2BC,KAA3B;AACA;AACD;AA5BiC,SAAnC;AA3B0B;;AAM3B,2CAA+BzE,MAAM,CAACC,OAAP,CAAeuD,UAAf,CAA/B,wCAA2D;AAAA;AAmD1D,OAzD0B,CA2D3B;;;AACA,UAAInF,eAAJ,EAAqB;AACpB,YAAMkL,KAAK,GAAG,KAAKjL,WAAL,GAAmBoB,QAAnB,EAAd;;AADoB;AAAA;AAAA,cAERQ,QAFQ;AAAA,cAEEC,QAFF;;AAEwC;AAC3D,cAAI,CAAClE,mBAAmB,CAACiE,QAAD,CAAxB,EAAoC;AACnC,kBAAM,IAAIyJ,KAAJ,aAAczJ,QAAd,qFAAN;AACA;;AAED,cAAMqC,YAAY,GAAGpC,QAAQ,CAACoC,YAAT,IAAyBrC,QAA9C;AACAF,UAAAA,MAAM,CAAC4J,cAAP,CAAsBJ,KAAtB,EAA6BjH,YAA7B,EAA2C;AAC1CnB,YAAAA,GAD0C,iBACpC;AACL,kBAAI,KAAKyB,MAAL,CAAYN,YAAZ,MAA8B3B,SAAlC,EAA6C;AAC5C,uBAAO,KAAKiC,MAAL,CAAYN,YAAZ,CAAP;AACA;;AACD,qBAAO,EAAP;AACA,aANyC;AAO1ClB,YAAAA,GAP0C,iBAOpC;AACL,oBAAM,IAAIsI,KAAJ,CAAU,6CAAV,CAAN;AACA;AATyC,WAA3C;AARmB;;AAEpB,6CAAmC3J,MAAM,CAACC,OAAP,CAAesJ,KAAf,CAAnC,wCAA0D;AAAA;AAiBzD;AACD;AACD;AAED;;;;;;;;AAwBA;;;;;;;;;;;;;uBAMOpO,IAAI,E;;;qBAEN,KAAK4O,Q;;;;;;uBACF,KAAKA,QAAL,E;;;AAGDC,gBAAAA,G,GAAM,KAAK1L,WAAL,GAAmB2L,MAAnB,E;AAENC,gBAAAA,c,GAAiB1O,eAAe,CAACwO,GAAD,C;AAChCG,gBAAAA,e,GAAkBvI,cAAc,CAACR,GAAf,CAAmB4I,GAAnB,C;;AAExB,oBAAIG,eAAe,IAAI,CAACD,cAAxB,EAAwC;AACvClJ,kBAAAA,OAAO,CAACC,IAAR,sCAA2C+I,GAA3C,iFADuC,CACsF;AAC7H,iBAFD,MAEO,IAAI,CAACG,eAAL,EAAsB;AAC5B,uBAAKC,kBAAL;;AACA7O,kBAAAA,WAAW,CAACyO,GAAD,CAAX;AACAlM,kBAAAA,MAAM,CAAC8D,cAAP,CAAsByI,MAAtB,CAA6BL,GAA7B,EAAkC,IAAlC;AACA;;kDACM,I;;;;;;;;;;;;;;;;AAGR;;;;;;;;;kCAMqB;AACpB,UAAI,KAAKnG,cAAL,CAAoB,WAApB,CAAJ,EAAsC;AAAE;AACvC,eAAO,KAAKyG,SAAZ;AACA;;AAED,UAAMC,eAAe,GAAG,CAAC,KAAKrO,QAAN,CAAxB;AACA,UAAIsO,KAAK,GAAG,IAAZ,CANoB,CAMF;;AAClB,aAAOA,KAAK,KAAK/N,UAAjB,EAA6B;AAC5B+N,QAAAA,KAAK,GAAGxK,MAAM,CAACyK,cAAP,CAAsBD,KAAtB,CAAR;AACAD,QAAAA,eAAe,CAACG,OAAhB,CAAwBF,KAAK,CAACtO,QAA9B;AACA;;AACD,UAAMyO,cAAc,GAAGzP,KAAK,MAAL,UAAM,EAAN,SAAaqP,eAAb,EAAvB;AAEA,WAAKD,SAAL,GAAiB,IAAIlP,kBAAJ,CAAuBuP,cAAvB,CAAjB;AACA,aAAO,KAAKL,SAAZ;AACA;;;wBA/P+B;AAC/B,aAAO,KAAKhM,WAAL,GAAmBsM,iBAAnB,EAAP;AACA;;;wBAyLqB;AACrB,aAAO1O,QAAP;AACA;AAED;;;;;;;wBAIoB;AACnB,aAAO,EAAP;AACA;AAED;;;;;;;wBAI8B;AAC7B,aAAO,EAAP;AACA;;;;iCAxyBuBqF,W;;AA61BzB,eAAe9E,UAAf","sourcesContent":["import merge from \"./thirdparty/merge.js\";\nimport boot from \"./boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport RenderScheduler from \"./RenderScheduler.js\";\nimport { registerTag, isTagRegistered } from \"./CustomElementsRegistry.js\";\nimport DOMObserver from \"./compatibility/DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport createComponentStyleTag from \"./theming/createComponentStyleTag.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport Integer from \"./types/Integer.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\n\nconst metadata = {\n\tevents: {\n\t\t_propertyChange: {},\n\t},\n};\n\nlet autoId = 0;\n\nconst elementTimeouts = new Map();\n\nconst GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.UI5Element\n * @extends HTMLElement\n * @public\n */\nclass UI5Element extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._generateId();\n\t\tthis._initializeState();\n\t\tthis._upgradeAllProperties();\n\t\tthis._initializeContainers();\n\t\tthis._upToDate = false;\n\n\t\tlet deferredResolve;\n\t\tthis._domRefReadyPromise = new Promise(resolve => {\n\t\t\tdeferredResolve = resolve;\n\t\t});\n\t\tthis._domRefReadyPromise._deferredResolve = deferredResolve;\n\n\t\tthis._monitoredChildProps = new Map();\n\t\tthis._firePropertyChange = false;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_generateId() {\n\t\tthis._id = `ui5wc_${++autoId}`;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_initializeContainers() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst needsStaticArea = this.constructor._needsStaticArea();\n\n\t\t// Init Shadow Root\n\t\tif (needsShadowDOM) {\n\t\t\tthis.attachShadow({ mode: \"open\" });\n\n\t\t\t// IE11, Edge\n\t\t\tif (window.ShadyDOM) {\n\t\t\t\tcreateComponentStyleTag(this.constructor);\n\t\t\t}\n\n\t\t\t// Chrome\n\t\t\tif (document.adoptedStyleSheets) {\n\t\t\t\tconst style = getConstructableStyle(this.constructor);\n\t\t\t\tthis.shadowRoot.adoptedStyleSheets = [style];\n\t\t\t}\n\t\t}\n\n\t\t// Init StaticAreaItem only if needed\n\t\tif (needsStaticArea) {\n\t\t\tthis.staticAreaItem = new StaticAreaItem(this);\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n\t * @private\n\t */\n\tasync connectedCallback() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n\t\t// Render the Shadow DOM\n\t\tif (needsShadowDOM) {\n\t\t\tif (slotsAreManaged) {\n\t\t\t\t// always register the observer before yielding control to the main thread (await)\n\t\t\t\tthis._startObservingDOMChildren();\n\t\t\t\tawait this._processChildren();\n\t\t\t}\n\n\t\t\tif (!this.shadowRoot) { // Workaround for Firefox74 bug\n\t\t\t\tawait Promise.resolve();\n\t\t\t}\n\n\t\t\tawait RenderScheduler.renderImmediately(this);\n\t\t\tthis._domRefReadyPromise._deferredResolve();\n\t\t\tif (typeof this.onEnterDOM === \"function\") {\n\t\t\t\tthis.onEnterDOM();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n\t * @private\n\t */\n\tdisconnectedCallback() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst needsStaticArea = this.constructor._needsStaticArea();\n\t\tconst slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n\t\tif (needsShadowDOM) {\n\t\t\tif (slotsAreManaged) {\n\t\t\t\tthis._stopObservingDOMChildren();\n\t\t\t}\n\n\t\t\tif (typeof this.onExitDOM === \"function\") {\n\t\t\t\tthis.onExitDOM();\n\t\t\t}\n\t\t}\n\n\t\tif (needsStaticArea) {\n\t\t\tthis.staticAreaItem._removeFragmentFromStaticArea();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_startObservingDOMChildren() {\n\t\tconst shouldObserveChildren = this.constructor.getMetadata().hasSlots();\n\t\tif (!shouldObserveChildren) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canSlotText = this.constructor.getMetadata().canSlotText();\n\t\tconst mutationObserverOptions = {\n\t\t\tchildList: true,\n\t\t\tsubtree: canSlotText,\n\t\t\tcharacterData: true,\n\t\t};\n\t\tDOMObserver.observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_stopObservingDOMChildren() {\n\t\tDOMObserver.unobserveDOMNode(this);\n\t}\n\n\t/**\n\t * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n\t * @private\n\t */\n\tasync _processChildren() {\n\t\tconst hasSlots = this.constructor.getMetadata().hasSlots();\n\t\tif (hasSlots) {\n\t\t\tawait this._updateSlots();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tasync _updateSlots() {\n\t\tconst slotsMap = this.constructor.getMetadata().getSlots();\n\t\tconst canSlotText = this.constructor.getMetadata().canSlotText();\n\t\tconst domChildren = Array.from(canSlotText ? this.childNodes : this.children);\n\n\t\t// Init the _state object based on the supported slots\n\t\tfor (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n\t\t\tthis._clearSlot(slotName, slotData);\n\t\t}\n\n\t\tconst autoIncrementMap = new Map();\n\t\tconst slottedChildrenMap = new Map();\n\n\t\tconst allChildrenUpgraded = domChildren.map(async (child, idx) => {\n\t\t\t// Determine the type of the child (mainly by the slot attribute)\n\t\t\tconst slotName = this.constructor._getSlotName(child);\n\t\t\tconst slotData = slotsMap[slotName];\n\n\t\t\t// Check if the slotName is supported\n\t\t\tif (slotData === undefined) {\n\t\t\t\tconst validValues = Object.keys(slotsMap).join(\", \");\n\t\t\t\tconsole.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For children that need individual slots, calculate them\n\t\t\tif (slotData.individualSlots) {\n\t\t\t\tconst nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n\t\t\t\tautoIncrementMap.set(slotName, nextIndex);\n\t\t\t\tchild._individualSlot = `${slotName}-${nextIndex}`;\n\t\t\t}\n\n\t\t\t// Await for not-yet-defined custom elements\n\t\t\tif (child instanceof HTMLElement) {\n\t\t\t\tconst localName = child.localName;\n\t\t\t\tconst isCustomElement = localName.includes(\"-\");\n\t\t\t\tif (isCustomElement) {\n\t\t\t\t\tconst isDefined = window.customElements.get(localName);\n\t\t\t\t\tif (!isDefined) {\n\t\t\t\t\t\tconst whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n\t\t\t\t\t\tlet timeoutPromise = elementTimeouts.get(localName);\n\t\t\t\t\t\tif (!timeoutPromise) {\n\t\t\t\t\t\t\ttimeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t\t\t\telementTimeouts.set(localName, timeoutPromise);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait Promise.race([whenDefinedPromise, timeoutPromise]);\n\t\t\t\t\t}\n\t\t\t\t\twindow.customElements.upgrade(child);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchild = this.constructor.getMetadata().constructor.validateSlotValue(child, slotData);\n\n\t\t\tif (child.isUI5Element && slotData.listenFor) {\n\t\t\t\tthis._attachChildPropertyUpdated(child, slotData.listenFor);\n\t\t\t}\n\n\t\t\tconst propertyName = slotData.propertyName || slotName;\n\n\t\t\tif (slottedChildrenMap.has(propertyName)) {\n\t\t\t\tslottedChildrenMap.get(propertyName).push({ child, idx });\n\t\t\t} else {\n\t\t\t\tslottedChildrenMap.set(propertyName, [{ child, idx }]);\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(allChildrenUpgraded);\n\n\t\t// Distribute the child in the _state object, keeping the Light DOM order,\n\t\t// not the order elements are defined.\n\t\tslottedChildrenMap.forEach((children, slot) => {\n\t\t\tthis._state[slot] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n\t\t});\n\t\tthis._invalidate(\"slots\");\n\t}\n\n\t/**\n\t * Removes all children from the slot and detaches listeners, if any\n\t * @private\n\t */\n\t_clearSlot(slotName, slotData) {\n\t\tconst propertyName = slotData.propertyName || slotName;\n\n\t\tlet children = this._state[propertyName];\n\t\tif (!Array.isArray(children)) {\n\t\t\tchildren = [children];\n\t\t}\n\n\t\tchildren.forEach(child => {\n\t\t\tif (child && child.isUI5Element) {\n\t\t\t\tthis._detachChildPropertyUpdated(child);\n\t\t\t}\n\t\t});\n\n\t\tthis._state[propertyName] = [];\n\t\tthis._invalidate(propertyName, []);\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element\n\t * @private\n\t */\n\tattributeChangedCallback(name, oldValue, newValue) {\n\t\tconst properties = this.constructor.getMetadata().getProperties();\n\t\tconst realName = name.replace(/^ui5-/, \"\");\n\t\tconst nameInCamelCase = kebabToCamelCase(realName);\n\t\tif (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line\n\t\t\tconst propertyTypeClass = properties[nameInCamelCase].type;\n\t\t\tif (propertyTypeClass === Boolean) {\n\t\t\t\tnewValue = newValue !== null;\n\t\t\t}\n\t\t\tif (propertyTypeClass === Integer) {\n\t\t\t\tnewValue = parseInt(newValue);\n\t\t\t}\n\t\t\tthis[nameInCamelCase] = newValue;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updateAttribute(name, newValue) {\n\t\tif (!this.constructor.getMetadata().hasAttribute(name)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof newValue === \"object\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrName = camelToKebabCase(name);\n\t\tconst attrValue = this.getAttribute(attrName);\n\t\tif (typeof newValue === \"boolean\") {\n\t\t\tif (newValue === true && attrValue === null) {\n\t\t\t\tthis.setAttribute(attrName, \"\");\n\t\t\t} else if (newValue === false && attrValue !== null) {\n\t\t\t\tthis.removeAttribute(attrName);\n\t\t\t}\n\t\t} else if (attrValue !== newValue) {\n\t\t\tthis.setAttribute(attrName, newValue);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_upgradeProperty(prop) {\n\t\tif (this.hasOwnProperty(prop)) { // eslint-disable-line\n\t\t\tconst value = this[prop];\n\t\t\tdelete this[prop];\n\t\t\tthis[prop] = value;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_upgradeAllProperties() {\n\t\tconst allProps = this.constructor.getMetadata().getPropertiesList();\n\t\tallProps.forEach(this._upgradeProperty, this);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_initializeState() {\n\t\tconst defaultState = this.constructor._getDefaultState();\n\t\tthis._state = Object.assign({}, defaultState);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_attachChildPropertyUpdated(child, listenFor) {\n\t\tconst childMetadata = child.constructor.getMetadata(),\n\t\t\tslotName = this.constructor._getSlotName(child), // all slotted children have the same configuration\n\t\t\tchildProperties = childMetadata.getProperties();\n\n\t\tlet observedProps = [],\n\t\t\tnotObservedProps = [];\n\n\t\tif (Array.isArray(listenFor)) {\n\t\t\tobservedProps = listenFor;\n\t\t} else {\n\t\t\tobservedProps = Array.isArray(listenFor.props) ? listenFor.props : Object.keys(childProperties);\n\t\t\tnotObservedProps = Array.isArray(listenFor.exclude) ? listenFor.exclude : [];\n\t\t}\n\n\t\tif (!this._monitoredChildProps.has(slotName)) {\n\t\t\tthis._monitoredChildProps.set(slotName, { observedProps, notObservedProps });\n\t\t}\n\n\t\tchild.addEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n\t\tchild._firePropertyChange = true;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_detachChildPropertyUpdated(child) {\n\t\tchild.removeEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n\t\tchild._firePropertyChange = false;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_propertyChange(name, value) {\n\t\tthis._updateAttribute(name, value);\n\n\t\tif (this._firePropertyChange) {\n\t\t\tthis.dispatchEvent(new CustomEvent(\"_propertyChange\", {\n\t\t\t\tdetail: { name, newValue: value },\n\t\t\t\tcomposed: false,\n\t\t\t\tbubbles: true,\n\t\t\t}));\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_invalidateParentOnPropertyUpdate(prop) {\n\t\t// The web component to be invalidated\n\t\tconst parentNode = this.parentNode;\n\t\tif (!parentNode) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst slotName = parentNode.constructor._getSlotName(this);\n\t\tconst propsMetadata = parentNode._monitoredChildProps.get(slotName);\n\n\t\tif (!propsMetadata) {\n\t\t\treturn;\n\t\t}\n\t\tconst { observedProps, notObservedProps } = propsMetadata;\n\n\t\tif (observedProps.includes(prop.detail.name) && !notObservedProps.includes(prop.detail.name)) {\n\t\t\tparentNode._invalidate(\"_parent_\", this);\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously re-renders an already rendered web component\n\t * @private\n\t */\n\t_invalidate() {\n\t\tif (!this._upToDate) {\n\t\t\t// console.log(\"already invalidated\", this, ...arguments);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.getDomRef() && !this._suppressInvalidation) {\n\t\t\tthis._upToDate = false;\n\t\t\t// console.log(\"INVAL\", this, ...arguments);\n\t\t\tRenderScheduler.renderDeferred(this);\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method directly, only intended to be called by RenderScheduler.js\n\t * @protected\n\t */\n\t_render() {\n\t\tconst hasIndividualSlots = this.constructor.getMetadata().hasIndividualSlots();\n\n\t\t// suppress invalidation to prevent state changes scheduling another rendering\n\t\tthis._suppressInvalidation = true;\n\n\t\tif (typeof this.onBeforeRendering === \"function\") {\n\t\t\tthis.onBeforeRendering();\n\t\t}\n\n\t\t// Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n\t\tif (this._onComponentStateFinalized) {\n\t\t\tthis._onComponentStateFinalized();\n\t\t}\n\n\t\t// resume normal invalidation handling\n\t\tdelete this._suppressInvalidation;\n\n\t\t// Update the shadow root with the render result\n\t\t// console.log(this.getDomRef() ? \"RE-RENDER\" : \"FIRST RENDER\", this);\n\t\tthis._upToDate = true;\n\t\tthis._updateShadowRoot();\n\n\t\tif (this._shouldUpdateFragment()) {\n\t\t\tthis.staticAreaItem._updateFragment(this);\n\t\t}\n\n\t\t// Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n\t\tif (hasIndividualSlots) {\n\t\t\tthis._assignIndividualSlotsToChildren();\n\t\t}\n\n\t\t// Call the onAfterRendering hook\n\t\tif (typeof this.onAfterRendering === \"function\") {\n\t\t\tthis.onAfterRendering();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updateShadowRoot() {\n\t\tif (!this.constructor._needsShadowDOM()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet styleToPrepend;\n\t\tconst renderResult = this.constructor.template(this);\n\n\t\tif (!document.adoptedStyleSheets && !window.ShadyDOM) {\n\t\t\tstyleToPrepend = getEffectiveStyle(this.constructor);\n\t\t}\n\t\tthis.constructor.render(renderResult, this.shadowRoot, styleToPrepend, { eventContext: this });\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_assignIndividualSlotsToChildren() {\n\t\tconst domChildren = Array.from(this.children);\n\n\t\tdomChildren.forEach(child => {\n\t\t\tif (child._individualSlot) {\n\t\t\t\tchild.setAttribute(\"slot\", child._individualSlot);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_waitForDomRef() {\n\t\treturn this._domRefReadyPromise;\n\t}\n\n\t/**\n\t * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n\t * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n\t * @public\n\t */\n\tgetDomRef() {\n\t\tif (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.shadowRoot.children.length === 1\n\t\t\t? this.shadowRoot.children[0] : this.shadowRoot.children[1];\n\t}\n\n\t/**\n\t * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n\t * This is the element that will receive the focus by default.\n\t * @public\n\t */\n\tgetFocusDomRef() {\n\t\tconst domRef = this.getDomRef();\n\t\tif (domRef) {\n\t\t\tconst focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n\t\t\treturn focusRef || domRef;\n\t\t}\n\t}\n\n\t/**\n\t * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n\t * @public\n\t */\n\tasync focus() {\n\t\tawait this._waitForDomRef();\n\n\t\tconst focusDomRef = this.getFocusDomRef();\n\n\t\tif (focusDomRef && typeof focusDomRef.focus === \"function\") {\n\t\t\tfocusDomRef.focus();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @public\n\t * @param name - name of the event\n\t * @param data - additional data for the event\n\t * @param cancelable - true, if the user can call preventDefault on the event object\n\t * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n\t */\n\tfireEvent(name, data, cancelable) {\n\t\tlet compatEventResult = true; // Initialized to true, because if the event is not fired at all, it should be considered \"not-prevented\"\n\n\t\tconst noConflictEvent = new CustomEvent(`ui5-${name}`, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles: true,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the compat event is prevented\n\t\tcompatEventResult = this.dispatchEvent(noConflictEvent);\n\n\t\tif (skipOriginalEvent(name)) {\n\t\t\treturn compatEventResult;\n\t\t}\n\n\t\tconst customEvent = new CustomEvent(name, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles: true,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the normal event is prevented\n\t\tconst normalEventResult = this.dispatchEvent(customEvent);\n\n\t\t// Return false if any of the two events was prevented (its result was false).\n\t\treturn normalEventResult && compatEventResult;\n\t}\n\n\t/**\n\t * Returns the actual children, associated with a slot.\n\t * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n\t * @public\n\t */\n\tgetSlottedNodes(slotName) {\n\t\tconst reducer = (acc, curr) => {\n\t\t\tif (curr.localName !== \"slot\") {\n\t\t\t\treturn acc.concat([curr]);\n\t\t\t}\n\t\t\treturn acc.concat(curr.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement));\n\t\t};\n\n\t\treturn this[slotName].reduce(reducer, []);\n\t}\n\n\tget isCompact() {\n\t\treturn getComputedStyle(this).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR) === \"compact\";\n\t}\n\n\tupdateStaticAreaItemContentDensity() {\n\t\tif (this.staticAreaItem) {\n\t\t\tthis.staticAreaItem._updateContentDensity(this.isCompact);\n\t\t}\n\t}\n\n\t/**\n\t * Used to duck-type UI5 elements without using instanceof\n\t * @returns {boolean}\n\t * @public\n\t */\n\tget isUI5Element() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element, use metadata properties instead\n\t * @private\n\t */\n\tstatic get observedAttributes() {\n\t\treturn this.getMetadata().getAttributesList();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _getSlotName(child) {\n\t\t// Text nodes can only go to the default slot\n\t\tif (!(child instanceof HTMLElement)) {\n\t\t\treturn \"default\";\n\t\t}\n\n\t\t// Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n\t\tconst slot = child.getAttribute(\"slot\");\n\t\tif (slot) {\n\t\t\tconst match = slot.match(/^(.+?)-\\d+$/);\n\t\t\treturn match ? match[1] : slot;\n\t\t}\n\n\t\t// Use default slot as a fallback\n\t\treturn \"default\";\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _needsShadowDOM() {\n\t\treturn !!this.template;\n\t}\n\n\t_shouldUpdateFragment() {\n\t\treturn this.constructor._needsStaticArea() && this.staticAreaItem.isRendered();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _needsStaticArea() {\n\t\treturn typeof this.staticAreaTemplate === \"function\";\n\t}\n\n\t/**\n\t * @public\n\t */\n\tgetStaticAreaItemDomRef() {\n\t\treturn this.staticAreaItem.getDomRef();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _getDefaultState() {\n\t\tif (this._defaultState) {\n\t\t\treturn this._defaultState;\n\t\t}\n\n\t\tconst MetadataClass = this.getMetadata();\n\t\tconst defaultState = {};\n\t\tconst slotsAreManaged = MetadataClass.slotsAreManaged();\n\n\t\t// Initialize properties\n\t\tconst props = MetadataClass.getProperties();\n\t\tfor (const propName in props) { // eslint-disable-line\n\t\t\tconst propType = props[propName].type;\n\t\t\tconst propDefaultValue = props[propName].defaultValue;\n\n\t\t\tif (propType === Boolean) {\n\t\t\t\tdefaultState[propName] = false;\n\n\t\t\t\tif (propDefaultValue !== undefined) {\n\t\t\t\t\tconsole.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n\t\t\t\t}\n\t\t\t} else if (props[propName].multiple) {\n\t\t\t\tdefaultState[propName] = [];\n\t\t\t} else if (propType === Object) {\n\t\t\t\tdefaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n\t\t\t} else if (propType === String) {\n\t\t\t\tdefaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n\t\t\t} else {\n\t\t\t\tdefaultState[propName] = propDefaultValue;\n\t\t\t}\n\t\t}\n\n\t\t// Initialize slots\n\t\tif (slotsAreManaged) {\n\t\t\tconst slots = MetadataClass.getSlots();\n\t\t\tfor (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n\t\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\t\tdefaultState[propertyName] = [];\n\t\t\t}\n\t\t}\n\n\t\tthis._defaultState = defaultState;\n\t\treturn defaultState;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _generateAccessors() {\n\t\tconst proto = this.prototype;\n\t\tconst slotsAreManaged = this.getMetadata().slotsAreManaged();\n\n\t\t// Properties\n\t\tconst properties = this.getMetadata().getProperties();\n\t\tfor (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line\n\t\t\tif (!isValidPropertyName(prop)) {\n\t\t\t\tthrow new Error(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n\t\t\t}\n\n\t\t\tif (propData.type === Boolean && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All booleans are false by default.`);\n\t\t\t}\n\n\t\t\tif (propData.type === Array) {\n\t\t\t\tthrow new Error(`Wrong type for property \"${prop}\". Properties cannot be of type Array - use \"multiple: true\" and set \"type\" to the single value type, such as \"String\", \"Object\", etc...`);\n\t\t\t}\n\n\t\t\tif (propData.type === Object && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All properties of type \"Object\" are empty objects by default.`);\n\t\t\t}\n\n\t\t\tif (propData.multiple && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All multiple properties are empty arrays by default.`);\n\t\t\t}\n\n\t\t\tObject.defineProperty(proto, prop, {\n\t\t\t\tget() {\n\t\t\t\t\tif (this._state[prop] !== undefined) {\n\t\t\t\t\t\treturn this._state[prop];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst propDefaultValue = propData.defaultValue;\n\n\t\t\t\t\tif (propData.type === Boolean) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (propData.type === String) {  // eslint-disable-line\n\t\t\t\t\t\treturn propDefaultValue;\n\t\t\t\t\t} else if (propData.multiple) { // eslint-disable-line\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn propDefaultValue;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tset(value) {\n\t\t\t\t\tvalue = this.constructor.getMetadata().constructor.validatePropertyValue(value, propData);\n\n\t\t\t\t\tconst oldState = this._state[prop];\n\n\t\t\t\t\tif (oldState !== value) {\n\t\t\t\t\t\tthis._state[prop] = value;\n\t\t\t\t\t\tthis._invalidate(prop, value);\n\t\t\t\t\t\tthis._propertyChange(prop, value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\t// Slots\n\t\tif (slotsAreManaged) {\n\t\t\tconst slots = this.getMetadata().getSlots();\n\t\t\tfor (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n\t\t\t\tif (!isValidPropertyName(slotName)) {\n\t\t\t\t\tthrow new Error(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n\t\t\t\t}\n\n\t\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\t\tObject.defineProperty(proto, propertyName, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tif (this._state[propertyName] !== undefined) {\n\t\t\t\t\t\t\treturn this._state[propertyName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t},\n\t\t\t\t\tset() {\n\t\t\t\t\t\tthrow new Error(\"Cannot set slots directly, use the DOM APIs\");\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the metadata object for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\t/**\n\t * Returns the CSS for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get styles() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the Static Area CSS for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get staticAreaStyles() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Registers a UI5 Web Component in the browser window object\n\t * @public\n\t * @returns {Promise<UI5Element>}\n\t */\n\tstatic async define() {\n\t\tawait boot();\n\n\t\tif (this.onDefine) {\n\t\t\tawait this.onDefine();\n\t\t}\n\n\t\tconst tag = this.getMetadata().getTag();\n\n\t\tconst definedLocally = isTagRegistered(tag);\n\t\tconst definedGlobally = customElements.get(tag);\n\n\t\tif (definedGlobally && !definedLocally) {\n\t\t\tconsole.warn(`Skipping definition of tag ${tag}, because it was already defined by another instance of ui5-webcomponents.`); // eslint-disable-line\n\t\t} else if (!definedGlobally) {\n\t\t\tthis._generateAccessors();\n\t\t\tregisterTag(tag);\n\t\t\twindow.customElements.define(tag, this);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n\t * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n\t * @public\n\t * @returns {UI5ElementMetadata}\n\t */\n\tstatic getMetadata() {\n\t\tif (this.hasOwnProperty(\"_metadata\")) { // eslint-disable-line\n\t\t\treturn this._metadata;\n\t\t}\n\n\t\tconst metadataObjects = [this.metadata];\n\t\tlet klass = this; // eslint-disable-line\n\t\twhile (klass !== UI5Element) {\n\t\t\tklass = Object.getPrototypeOf(klass);\n\t\t\tmetadataObjects.unshift(klass.metadata);\n\t\t}\n\t\tconst mergedMetadata = merge({}, ...metadataObjects);\n\n\t\tthis._metadata = new UI5ElementMetadata(mergedMetadata);\n\t\treturn this._metadata;\n\t}\n}\n\nexport default UI5Element;\n"]},"metadata":{},"sourceType":"module"}