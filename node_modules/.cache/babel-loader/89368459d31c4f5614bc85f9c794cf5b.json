{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TableRowTemplate from \"./generated/templates/TableRowTemplate.lit.js\"; // Styles\n\nimport styles from \"./generated/themes/TableRow.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-table-row\",\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.TableRow.prototype */\n  {\n    /**\n     * Defines the cells of the <code>ui5-table-row</code>.\n     * <br><br>\n     * <b>Note:</b> Use <code>ui5-table-cell</code> for the intended design.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      propertyName: \"cells\",\n      type: HTMLElement,\n      individualSlots: true\n    }\n  },\n  properties:\n  /** @lends sap.ui.webcomponents.main.TableRow.prototype */\n  {\n    _columnsInfo: {\n      type: Object,\n      multiple: true\n    },\n    _tabIndex: {\n      type: String,\n      defaultValue: \"-1\"\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.TableRow.prototype */\n  {\n    _focused: {},\n    _click: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-table-row</code> component represents a row in the <code>ui5-table</code>.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TableRow\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-table-row\n * @public\n */\n\nclass TableRow extends UI5Element {\n  constructor() {\n    super();\n    this.fnOnCellClick = this._oncellclick.bind(this);\n  }\n\n  static get metadata() {\n    return metadata;\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return TableRowTemplate;\n  }\n\n  _onfocusin(event, forceSelfFocus = false) {\n    if (forceSelfFocus || this._getActiveElementTagName() === \"ui5-table-cell\") {\n      this.getDomRef().focus();\n    }\n\n    this.fireEvent(\"_focused\", event);\n  }\n\n  _oncellclick(event) {\n    if (this._getActiveElementTagName() === \"body\") {\n      // If the user clickes on non-focusable element within the ui5-table-cell,\n      // the focus goes to the body, se we have to bring it back to the row.\n      // If the user clicks on input, button or similar clickable element,\n      // the focus remains on that element.\n      this._onfocusin(event, true\n      /* force row focus */\n      );\n    }\n\n    this.fireEvent(\"_click\");\n  }\n\n  _getActiveElementTagName() {\n    return document.activeElement.localName.toLocaleLowerCase();\n  }\n\n  get shouldPopin() {\n    return this._columnsInfo.filter(el => {\n      return el.demandPopin;\n    }).length;\n  }\n\n  onBeforeRendering() {\n    if (!this.shouldPopin) {\n      return;\n    }\n\n    this.visibleCells = [];\n    this.popinCells = [];\n\n    if (this.cells.length === 0) {\n      return;\n    }\n\n    this._columnsInfo.forEach((info, index) => {\n      const cell = this.cells[index];\n\n      if (!cell) {\n        return;\n      }\n\n      if (info.visible) {\n        this.visibleCells.push(cell);\n        cell.firstInRow = index === 0;\n        cell.popined = false;\n      } else if (info.demandPopin) {\n        this.popinCells.push({\n          cell,\n          popinText: info.popinText\n        });\n        cell.popined = true;\n      } else {\n        cell.popined = false;\n      }\n    }, this);\n\n    const lastVisibleCell = this.visibleCells[this.visibleCells.length - 1];\n\n    if (lastVisibleCell) {\n      lastVisibleCell.lastInRow = true;\n    }\n  }\n\n  get visibleCellsCount() {\n    return this.visibleCells.length;\n  }\n\n}\n\nTableRow.define();\nexport default TableRow;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/TableRow.js"],"names":["UI5Element","litRender","TableRowTemplate","styles","metadata","tag","managedSlots","slots","propertyName","type","HTMLElement","individualSlots","properties","_columnsInfo","Object","multiple","_tabIndex","String","defaultValue","events","_focused","_click","TableRow","constructor","fnOnCellClick","_oncellclick","bind","render","template","_onfocusin","event","forceSelfFocus","_getActiveElementTagName","getDomRef","focus","fireEvent","document","activeElement","localName","toLocaleLowerCase","shouldPopin","filter","el","demandPopin","length","onBeforeRendering","visibleCells","popinCells","cells","forEach","info","index","cell","visible","push","firstInRow","popined","popinText","lastVisibleCell","lastInRow","visibleCellsCount","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport TableRowTemplate from \"./generated/templates/TableRowTemplate.lit.js\";\n\n// Styles\nimport styles from \"./generated/themes/TableRow.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-table-row\",\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.TableRow.prototype */ {\n\t\t/**\n\t\t * Defines the cells of the <code>ui5-table-row</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Use <code>ui5-table-cell</code> for the intended design.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"cells\",\n\t\t\ttype: HTMLElement,\n\t\t\tindividualSlots: true,\n\t\t},\n\t},\n\tproperties: /** @lends sap.ui.webcomponents.main.TableRow.prototype */ {\n\t\t_columnsInfo: {\n\t\t\ttype: Object,\n\t\t\tmultiple: true,\n\t\t},\n\t\t_tabIndex: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: \"-1\",\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.TableRow.prototype */ {\n\t\t_focused: {},\n\n\t\t_click: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-table-row</code> component represents a row in the <code>ui5-table</code>.\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.TableRow\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-table-row\n * @public\n */\nclass TableRow extends UI5Element {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.fnOnCellClick = this._oncellclick.bind(this);\n\t}\n\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get styles() {\n\t\treturn styles;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn TableRowTemplate;\n\t}\n\n\t_onfocusin(event, forceSelfFocus = false) {\n\t\tif (forceSelfFocus || this._getActiveElementTagName() === \"ui5-table-cell\") {\n\t\t\tthis.getDomRef().focus();\n\t\t}\n\n\t\tthis.fireEvent(\"_focused\", event);\n\t}\n\n\t_oncellclick(event) {\n\t\tif (this._getActiveElementTagName() === \"body\") {\n\t\t\t// If the user clickes on non-focusable element within the ui5-table-cell,\n\t\t\t// the focus goes to the body, se we have to bring it back to the row.\n\t\t\t// If the user clicks on input, button or similar clickable element,\n\t\t\t// the focus remains on that element.\n\t\t\tthis._onfocusin(event, true /* force row focus */);\n\t\t}\n\n\t\tthis.fireEvent(\"_click\");\n\t}\n\n\t_getActiveElementTagName() {\n\t\treturn document.activeElement.localName.toLocaleLowerCase();\n\t}\n\n\tget shouldPopin() {\n\t\treturn this._columnsInfo.filter(el => {\n\t\t\treturn el.demandPopin;\n\t\t}).length;\n\t}\n\n\tonBeforeRendering() {\n\t\tif (!this.shouldPopin) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.visibleCells = [];\n\t\tthis.popinCells = [];\n\n\t\tif (this.cells.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._columnsInfo.forEach((info, index) => {\n\t\t\tconst cell = this.cells[index];\n\n\t\t\tif (!cell) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (info.visible) {\n\t\t\t\tthis.visibleCells.push(cell);\n\t\t\t\tcell.firstInRow = (index === 0);\n\t\t\t\tcell.popined = false;\n\t\t\t} else if (info.demandPopin) {\n\t\t\t\tthis.popinCells.push({\n\t\t\t\t\tcell,\n\t\t\t\t\tpopinText: info.popinText,\n\t\t\t\t});\n\n\t\t\t\tcell.popined = true;\n\t\t\t} else {\n\t\t\t\tcell.popined = false;\n\t\t\t}\n\t\t}, this);\n\n\t\tconst lastVisibleCell = this.visibleCells[this.visibleCells.length - 1];\n\n\t\tif (lastVisibleCell) {\n\t\t\tlastVisibleCell.lastInRow = true;\n\t\t}\n\t}\n\n\tget visibleCellsCount() {\n\t\treturn this.visibleCells.length;\n\t}\n}\n\nTableRow.define();\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}