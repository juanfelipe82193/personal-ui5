{"ast":null,"code":"class RenderQueue {\n  constructor() {\n    this.list = []; // Used to store the web components in order\n\n    this.promises = new Map(); // Used to store promises for web component rendering\n  }\n\n  add(webComponent) {\n    if (this.promises.has(webComponent)) {\n      return this.promises.get(webComponent);\n    }\n\n    let deferredResolve;\n    const promise = new Promise(resolve => {\n      deferredResolve = resolve;\n    });\n    promise._deferredResolve = deferredResolve;\n    this.list.push(webComponent);\n    this.promises.set(webComponent, promise);\n    return promise;\n  }\n\n  shift() {\n    const webComponent = this.list.shift();\n\n    if (webComponent) {\n      const promise = this.promises.get(webComponent);\n      this.promises.delete(webComponent);\n      return {\n        webComponent,\n        promise\n      };\n    }\n  }\n\n  getList() {\n    return this.list;\n  }\n\n  isAdded(webComponent) {\n    return this.promises.has(webComponent);\n  }\n\n}\n\nexport default RenderQueue;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/RenderQueue.js"],"names":["RenderQueue","constructor","list","promises","Map","add","webComponent","has","get","deferredResolve","promise","Promise","resolve","_deferredResolve","push","set","shift","delete","getList","isAdded"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AACjBC,EAAAA,WAAW,GAAG;AACb,SAAKC,IAAL,GAAY,EAAZ,CADa,CACG;;AAChB,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB,CAFa,CAEc;AAC3B;;AAEDC,EAAAA,GAAG,CAACC,YAAD,EAAe;AACjB,QAAI,KAAKH,QAAL,CAAcI,GAAd,CAAkBD,YAAlB,CAAJ,EAAqC;AACpC,aAAO,KAAKH,QAAL,CAAcK,GAAd,CAAkBF,YAAlB,CAAP;AACA;;AAED,QAAIG,eAAJ;AACA,UAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACtCH,MAAAA,eAAe,GAAGG,OAAlB;AACA,KAFe,CAAhB;AAGAF,IAAAA,OAAO,CAACG,gBAAR,GAA2BJ,eAA3B;AAEA,SAAKP,IAAL,CAAUY,IAAV,CAAeR,YAAf;AACA,SAAKH,QAAL,CAAcY,GAAd,CAAkBT,YAAlB,EAAgCI,OAAhC;AAEA,WAAOA,OAAP;AACA;;AAEDM,EAAAA,KAAK,GAAG;AACP,UAAMV,YAAY,GAAG,KAAKJ,IAAL,CAAUc,KAAV,EAArB;;AACA,QAAIV,YAAJ,EAAkB;AACjB,YAAMI,OAAO,GAAG,KAAKP,QAAL,CAAcK,GAAd,CAAkBF,YAAlB,CAAhB;AACA,WAAKH,QAAL,CAAcc,MAAd,CAAqBX,YAArB;AACA,aAAO;AAAEA,QAAAA,YAAF;AAAgBI,QAAAA;AAAhB,OAAP;AACA;AACD;;AAEDQ,EAAAA,OAAO,GAAG;AACT,WAAO,KAAKhB,IAAZ;AACA;;AAEDiB,EAAAA,OAAO,CAACb,YAAD,EAAe;AACrB,WAAO,KAAKH,QAAL,CAAcI,GAAd,CAAkBD,YAAlB,CAAP;AACA;;AAtCgB;;AAyClB,eAAeN,WAAf","sourcesContent":["class RenderQueue {\n\tconstructor() {\n\t\tthis.list = []; // Used to store the web components in order\n\t\tthis.promises = new Map(); // Used to store promises for web component rendering\n\t}\n\n\tadd(webComponent) {\n\t\tif (this.promises.has(webComponent)) {\n\t\t\treturn this.promises.get(webComponent);\n\t\t}\n\n\t\tlet deferredResolve;\n\t\tconst promise = new Promise(resolve => {\n\t\t\tdeferredResolve = resolve;\n\t\t});\n\t\tpromise._deferredResolve = deferredResolve;\n\n\t\tthis.list.push(webComponent);\n\t\tthis.promises.set(webComponent, promise);\n\n\t\treturn promise;\n\t}\n\n\tshift() {\n\t\tconst webComponent = this.list.shift();\n\t\tif (webComponent) {\n\t\t\tconst promise = this.promises.get(webComponent);\n\t\t\tthis.promises.delete(webComponent);\n\t\t\treturn { webComponent, promise };\n\t\t}\n\t}\n\n\tgetList() {\n\t\treturn this.list;\n\t}\n\n\tisAdded(webComponent) {\n\t\treturn this.promises.has(webComponent);\n\t}\n}\n\nexport default RenderQueue;\n"]},"metadata":{},"sourceType":"module"}