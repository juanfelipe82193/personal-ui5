{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-down-arrow.js';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-right-arrow.js';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { CustomListItem } from '@ui5/webcomponents-react/lib/CustomListItem';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/lib/PopoverVerticalAlign';\nimport { SideNavigationOpenState } from '@ui5/webcomponents-react/lib/SideNavigationOpenState';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport React, { forwardRef, useState, useCallback, Children, useEffect, useRef, useMemo, cloneElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nvar sideNavigationListItemStyles = {\n  listItem: {\n    '&:active': {\n      '--sapTextColor': ThemingParameters.sapList_Active_TextColor,\n      '& $icon, & $expandArrow': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n  noIcons: {\n    '& $text': {\n      paddingLeft: '1rem'\n    },\n    '&[data-is-child] $text': {\n      paddingLeft: '2rem'\n    },\n    boxSizing: 'border-box'\n  },\n  icon: {\n    '--sapContent_NonInteractiveIconColor': ThemingParameters.sapContent_IconColor,\n    width: CssSizeVariables.sapWcrSideNavigationItemIconSize,\n    height: CssSizeVariables.sapWcrSideNavigationItemIconSize,\n    padding: CssSizeVariables.sapWcrSideNavigationItemIconPadding,\n    pointerEvents: 'none'\n  },\n  text: {},\n  expandArrow: {\n    '--sapContent_NonInteractiveIconColor': ThemingParameters.sapContent_IconColor,\n    width: '0.875rem',\n    height: '0.875rem',\n    padding: CssSizeVariables.sapWcrSideNavigationItemExpandedArrowPadding,\n    marginLeft: 'auto'\n  },\n  expanded: {\n    '--ui5-listitem-border-bottom': 'none'\n  },\n  condensedExpandTriangle: {\n    width: '0',\n    height: '0',\n    borderStyle: 'solid',\n    borderWidth: '0 0 6px 6px',\n    borderColor: \"transparent transparent \".concat(ThemingParameters.sapContent_IconColor, \" transparent\"),\n    position: 'absolute',\n    right: '0.125rem',\n    bottom: '0.1875rem'\n  }\n};\nvar useStyles = createComponentStyles(sideNavigationListItemStyles, {\n  name: 'SideNavigationListItem'\n});\n/**\n * <code>import { SideNavigationListItem } from '@ui5/webcomponents-react/lib/SideNavigationListItem';</code>\n */\n\nvar SideNavigationListItem = forwardRef(function (props, ref) {\n  var icon = props.icon,\n      text = props.text,\n      id = props.id,\n      children = props.children,\n      tooltip = props.tooltip,\n      slot = props.slot,\n      className = props.className,\n      style = props.style;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isExpanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var handleToggleExpand = useCallback(function () {\n    setExpanded(!isExpanded);\n  }, [isExpanded, setExpanded]);\n  var classes = useStyles();\n  var listItemClasses = StyleClassHelper.of(classes.listItem);\n\n  if (className) {\n    listItemClasses.put(className);\n  }\n\n  if (isExpanded) {\n    listItemClasses.put(classes.expanded);\n  }\n\n  var noIcons = props['noIcons'];\n\n  if (noIcons) {\n    listItemClasses.put(classes.noIcons);\n  }\n\n  var childCount = Children.count(children);\n  var validChildren = Children.toArray(children).filter(Boolean);\n  var isOpenStateExpanded = props['openState'] === SideNavigationOpenState.Expanded;\n  useEffect(function () {\n    if (validChildren.length) {\n      var selectedElement = validChildren.find(function (child) {\n        return child.props.id === props['selectedId'];\n      });\n\n      if (selectedElement) {\n        setExpanded(isOpenStateExpanded);\n      }\n    }\n  }, [props['selectedId'], id, children, setExpanded, isOpenStateExpanded]);\n  var isSelfSelected = props['selectedId'] === id;\n  var hasSelectedChild = !isOpenStateExpanded && childCount > 0 && !!validChildren.find(function (child) {\n    return child.props.id === props['selectedId'];\n  });\n  var passThroughProps = usePassThroughHtmlProps(props);\n\n  var customListItemCommonProps = _objectSpread({\n    ref: ref,\n    className: listItemClasses.valueOf(),\n    tooltip: tooltip,\n    slot: slot,\n    style: style,\n    'data-id': id,\n    'data-has-children': childCount > 0,\n    'data-is-child': props['isChild']\n  }, passThroughProps);\n\n  var popoverRef = useRef();\n  var displayedIcon = useMemo(function () {\n    return /*#__PURE__*/React.createElement(Icon, {\n      name: icon,\n      className: classes.icon\n    });\n  }, [classes.icon, icon]);\n  var handleOpenPopover = useCallback(function (e) {\n    // @ts-ignore\n    popoverRef.current.openBy(e.target);\n  }, [popoverRef.current]);\n\n  if (isOpenStateExpanded) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomListItem, _extends({\n      selected: isSelfSelected\n    }, customListItemCommonProps), icon && !noIcons && displayedIcon, !icon && !noIcons && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.icon\n    }), /*#__PURE__*/React.createElement(Text, {\n      className: classes.text\n    }, text), childCount > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      onClick: handleToggleExpand,\n      className: classes.expandArrow\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'\n    }))), isExpanded && validChildren.map(function (child, index) {\n      var style = child.props.style || {};\n\n      if (index !== childCount - 1) {\n        style['--ui5-listitem-border-bottom'] = 'none';\n      }\n\n      return cloneElement(child, {\n        icon: null,\n        style: style,\n        openState: props['openState'],\n        selectedId: props['selectedId'],\n        noIcons: noIcons,\n        isChild: true\n      });\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CustomListItem, _extends({\n    selected: isSelfSelected || hasSelectedChild\n  }, customListItemCommonProps), childCount > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleOpenPopover\n  }, displayedIcon, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.condensedExpandTriangle\n  }), createPortal( /*#__PURE__*/React.createElement(Popover, {\n    ref: popoverRef,\n    verticalAlign: PopoverVerticalAlign.Top\n  }, /*#__PURE__*/React.createElement(List, {\n    onItemClick: props['onListItemSelected']\n  }, /*#__PURE__*/React.createElement(StandardListItem, {\n    selected: isSelfSelected,\n    \"data-id\": id,\n    tooltip: tooltip\n  }, text), validChildren.map(function (child, index) {\n    return /*#__PURE__*/React.createElement(StandardListItem, {\n      selected: props['selectedId'] === child.props.id,\n      key: index,\n      \"data-id\": child.props.id,\n      \"data-parent-id\": id,\n      tooltip: child.props.tooltip || child.props.text\n    }, child.props.text);\n  }))), document.body)) : displayedIcon));\n});\nSideNavigationListItem.displayName = 'SideNavigationListItem';\nSideNavigationListItem.defaultProps = {};\nexport { SideNavigationListItem };","map":{"version":3,"sources":["../src/components/SideNavigationListItem/SideNavigationListItem.jss.ts","../src/components/SideNavigationListItem/index.tsx"],"names":["sideNavigationListItemStyles","listItem","ThemingParameters","sapList_Active_TextColor","noIcons","paddingLeft","boxSizing","icon","width","CssSizeVariables","height","padding","pointerEvents","text","expandArrow","marginLeft","expanded","condensedExpandTriangle","borderStyle","borderWidth","borderColor","position","right","bottom","useStyles","createComponentStyles","name","SideNavigationListItem","forwardRef","id","children","tooltip","slot","className","style","props","isExpanded","setExpanded","useState","handleToggleExpand","useCallback","classes","listItemClasses","StyleClassHelper","childCount","Children","validChildren","isOpenStateExpanded","SideNavigationOpenState","useEffect","selectedElement","child","isSelfSelected","hasSelectedChild","passThroughProps","usePassThroughHtmlProps","customListItemCommonProps","ref","popoverRef","useRef","displayedIcon","useMemo","handleOpenPopover","e","index","cloneElement","openState","selectedId","isChild","createPortal","PopoverVerticalAlign","Top","document"],"mappings":"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","sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nexport const sideNavigationListItemStyles = {\n  listItem: {\n    '&:active': {\n      '--sapTextColor': ThemingParameters.sapList_Active_TextColor,\n      '& $icon, & $expandArrow': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n\n  noIcons: {\n    '& $text': {\n      paddingLeft: '1rem'\n    },\n    '&[data-is-child] $text': {\n      paddingLeft: '2rem'\n    },\n    boxSizing: 'border-box'\n  },\n\n  icon: {\n    '--sapContent_NonInteractiveIconColor': ThemingParameters.sapContent_IconColor,\n    width: CssSizeVariables.sapWcrSideNavigationItemIconSize,\n    height: CssSizeVariables.sapWcrSideNavigationItemIconSize,\n    padding: CssSizeVariables.sapWcrSideNavigationItemIconPadding,\n    pointerEvents: 'none'\n  },\n\n  text: {},\n\n  expandArrow: {\n    '--sapContent_NonInteractiveIconColor': ThemingParameters.sapContent_IconColor,\n    width: '0.875rem',\n    height: '0.875rem',\n    padding: CssSizeVariables.sapWcrSideNavigationItemExpandedArrowPadding,\n    marginLeft: 'auto'\n  },\n\n  expanded: {\n    '--ui5-listitem-border-bottom': 'none'\n  },\n\n  condensedExpandTriangle: {\n    width: '0',\n    height: '0',\n    borderStyle: 'solid',\n    borderWidth: '0 0 6px 6px',\n    borderColor: `transparent transparent ${ThemingParameters.sapContent_IconColor} transparent`,\n    position: 'absolute',\n    right: '0.125rem',\n    bottom: '0.1875rem'\n  }\n};\n","import '@ui5/webcomponents-icons/dist/icons/navigation-down-arrow.js';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-right-arrow.js';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { CustomListItem } from '@ui5/webcomponents-react/lib/CustomListItem';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { PopoverVerticalAlign } from '@ui5/webcomponents-react/lib/PopoverVerticalAlign';\nimport { SideNavigationOpenState } from '@ui5/webcomponents-react/lib/SideNavigationOpenState';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport React, {\n  Children,\n  cloneElement,\n  FC,\n  forwardRef,\n  ReactNode,\n  ReactNodeArray,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { sideNavigationListItemStyles } from './SideNavigationListItem.jss';\n\nexport interface SideNavigationListItemProps extends CommonProps {\n  icon?: string;\n  text: string;\n  id: number | string;\n  children?: ReactNode | ReactNodeArray;\n}\n\nconst useStyles = createComponentStyles(sideNavigationListItemStyles, {\n  name: 'SideNavigationListItem'\n});\n/**\n * <code>import { SideNavigationListItem } from '@ui5/webcomponents-react/lib/SideNavigationListItem';</code>\n */\nconst SideNavigationListItem: FC<SideNavigationListItemProps> = forwardRef(\n  (props: SideNavigationListItemProps, ref: Ref<HTMLDivElement>) => {\n    const { icon, text, id, children, tooltip, slot, className, style } = props;\n\n    const [isExpanded, setExpanded] = useState(false);\n\n    const handleToggleExpand = useCallback(() => {\n      setExpanded(!isExpanded);\n    }, [isExpanded, setExpanded]);\n\n    const classes = useStyles();\n\n    const listItemClasses = StyleClassHelper.of(classes.listItem);\n\n    if (className) {\n      listItemClasses.put(className);\n    }\n\n    if (isExpanded) {\n      listItemClasses.put(classes.expanded);\n    }\n\n    const noIcons = props['noIcons'];\n    if (noIcons) {\n      listItemClasses.put(classes.noIcons);\n    }\n\n    const childCount = Children.count(children);\n    const validChildren = Children.toArray(children).filter(Boolean);\n\n    const isOpenStateExpanded = props['openState'] === SideNavigationOpenState.Expanded;\n\n    useEffect(() => {\n      if (validChildren.length) {\n        const selectedElement = validChildren.find((child: any) => child.props.id === props['selectedId']);\n        if (selectedElement) {\n          setExpanded(isOpenStateExpanded);\n        }\n      }\n    }, [props['selectedId'], id, children, setExpanded, isOpenStateExpanded]);\n\n    const isSelfSelected = props['selectedId'] === id;\n    const hasSelectedChild =\n      !isOpenStateExpanded &&\n      childCount > 0 &&\n      !!validChildren.find((child: any) => child.props.id === props['selectedId']);\n\n    const passThroughProps = usePassThroughHtmlProps(props);\n\n    const customListItemCommonProps = {\n      ref,\n      className: listItemClasses.valueOf(),\n      tooltip,\n      slot,\n      style,\n      'data-id': id,\n      'data-has-children': childCount > 0,\n      'data-is-child': props['isChild'],\n      ...passThroughProps\n    };\n\n    const popoverRef = useRef();\n\n    const displayedIcon = useMemo(() => {\n      return <Icon name={icon} className={classes.icon} />;\n    }, [classes.icon, icon]);\n\n    const handleOpenPopover = useCallback(\n      (e) => {\n        // @ts-ignore\n        popoverRef.current.openBy(e.target);\n      },\n      [popoverRef.current]\n    );\n\n    if (isOpenStateExpanded) {\n      return (\n        <>\n          <CustomListItem selected={isSelfSelected} {...customListItemCommonProps}>\n            {icon && !noIcons && displayedIcon}\n            {!icon && !noIcons && <span className={classes.icon} />}\n            <Text className={classes.text}>{text}</Text>\n            {childCount > 0 && (\n              <span onClick={handleToggleExpand} className={classes.expandArrow}>\n                <Icon name={isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'} />\n              </span>\n            )}\n          </CustomListItem>\n          {isExpanded &&\n            validChildren.map((child: any, index: number) => {\n              const style = child.props.style || {};\n              if (index !== childCount - 1) {\n                style['--ui5-listitem-border-bottom'] = 'none';\n              }\n\n              return cloneElement(child, {\n                icon: null,\n                style,\n                openState: props['openState'],\n                selectedId: props['selectedId'],\n                noIcons,\n                isChild: true\n              });\n            })}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <CustomListItem selected={isSelfSelected || hasSelectedChild} {...customListItemCommonProps}>\n          {childCount > 0 ? (\n            <span onClick={handleOpenPopover}>\n              {displayedIcon}\n              <div className={classes.condensedExpandTriangle} />\n              {createPortal(\n                <Popover ref={popoverRef} verticalAlign={PopoverVerticalAlign.Top}>\n                  <List onItemClick={props['onListItemSelected']}>\n                    <StandardListItem selected={isSelfSelected} data-id={id} tooltip={tooltip}>\n                      {text}\n                    </StandardListItem>\n                    {validChildren.map((child: any, index) => (\n                      <StandardListItem\n                        selected={props['selectedId'] === child.props.id}\n                        key={index}\n                        data-id={child.props.id}\n                        data-parent-id={id}\n                        tooltip={child.props.tooltip || child.props.text}\n                      >\n                        {child.props.text}\n                      </StandardListItem>\n                    ))}\n                  </List>\n                </Popover>,\n                document.body\n              )}\n            </span>\n          ) : (\n            displayedIcon\n          )}\n        </CustomListItem>\n      </>\n    );\n  }\n);\n\nSideNavigationListItem.displayName = 'SideNavigationListItem';\n\nSideNavigationListItem.defaultProps = {};\n\nexport { SideNavigationListItem };\n"]},"metadata":{},"sourceType":"module"}