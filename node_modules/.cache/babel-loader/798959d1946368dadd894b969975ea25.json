{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _wrapRegExp from '@babel/runtime/helpers/wrapRegExp';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/lib/useViewportRange';\nimport { GridPosition } from '@ui5/webcomponents-react/lib/GridPosition';\nimport React, { forwardRef, useMemo, Children } from 'react';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\n\nvar getWidthForSpan = function getWidthForSpan(width) {\n  var hSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return {\n    width: \"calc(\".concat(width * 100 / 12, \"% - \").concat(hSpace, \"rem)\")\n  };\n};\n\nvar getIndentForSpan = function getIndentForSpan(width) {\n  var hSpace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return {\n    marginLeft: \"calc(\".concat(width * 100 / 12, \"% + \").concat(hSpace / 2, \"rem)\")\n  };\n};\n\nvar getSpansForSpace = function getSpansForSpace() {\n  var hSpace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return {\n    '&$gridSpan1': getWidthForSpan(1, hSpace),\n    '&$gridSpan2': getWidthForSpan(2, hSpace),\n    '&$gridSpan3': getWidthForSpan(3, hSpace),\n    '&$gridSpan4': getWidthForSpan(4, hSpace),\n    '&$gridSpan5': getWidthForSpan(5, hSpace),\n    '&$gridSpan6': getWidthForSpan(6, hSpace),\n    '&$gridSpan7': getWidthForSpan(7, hSpace),\n    '&$gridSpan8': getWidthForSpan(8, hSpace),\n    '&$gridSpan9': getWidthForSpan(9, hSpace),\n    '&$gridSpan10': getWidthForSpan(10, hSpace),\n    '&$gridSpan11': getWidthForSpan(11, hSpace),\n    '&$gridSpan12': getWidthForSpan(12, hSpace)\n  };\n};\n\nvar getIndentsForSpace = function getIndentsForSpace(hSpace) {\n  return {\n    '&$gridIndent1': getIndentForSpan(1, hSpace),\n    '&$gridIndent2': getIndentForSpan(2, hSpace),\n    '&$gridIndent3': getIndentForSpan(3, hSpace),\n    '&$gridIndent4': getIndentForSpan(4, hSpace),\n    '&$gridIndent5': getIndentForSpan(5, hSpace),\n    '&$gridIndent6': getIndentForSpan(6, hSpace),\n    '&$gridIndent7': getIndentForSpan(7, hSpace),\n    '&$gridIndent8': getIndentForSpan(8, hSpace),\n    '&$gridIndent9': getIndentForSpan(9, hSpace),\n    '&$gridIndent10': getIndentForSpan(10, hSpace),\n    '&$gridIndent11': getIndentForSpan(11, hSpace),\n    '&$gridIndent12': getIndentForSpan(12, hSpace)\n  };\n};\n\nvar GridClasses = {\n  '@global html': {\n    '--_ui5wcr_Grid_float': 'left'\n  },\n  '@global [dir=\"rtl\"]': {\n    '--_ui5wcr_Grid_float': 'right'\n  },\n  grid: {\n    '& $gridSpan': _objectSpread(_objectSpread({}, getSpansForSpace(0)), getIndentsForSpace(0)),\n    '&$gridHSpace05': {\n      padding: '0 0.25rem',\n      '& > div': {\n        margin: '0 0.25rem'\n      },\n      '& $gridSpan': _objectSpread(_objectSpread({}, getSpansForSpace(0.5)), getIndentsForSpace(0.5))\n    },\n    '&$gridHSpace1': {\n      padding: '0 0.5rem',\n      '& > div': {\n        margin: '0 0.5rem'\n      },\n      '& $gridSpan': _objectSpread(_objectSpread({}, getSpansForSpace(1)), getIndentsForSpace(1))\n    },\n    '&$gridHSpace2': {\n      padding: '0 1rem',\n      '& > div': {\n        margin: '0 1rem'\n      },\n      '& $gridSpan': _objectSpread(_objectSpread({}, getSpansForSpace(2)), getIndentsForSpace(2))\n    },\n    '&$gridVSpace0 > $gridSpan': {\n      marginBottom: 0\n    },\n    '&$gridVSpace05 > $gridSpan': {\n      marginBottom: '0.5rem'\n    },\n    '&$gridVSpace1 > $gridSpan': {\n      marginBottom: '1rem'\n    },\n    '&$gridVSpace2 > $gridSpan': {\n      marginBottom: '2rem'\n    },\n    '& > div': {\n      \"float\": 'var(--_ui5wcr_Grid_float)',\n      overflow: 'hidden',\n      minHeight: '1px'\n    },\n    '&$gridPositionCenter': {\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    '&$gridPositionRight': {\n      marginLeft: 'auto',\n      marginRight: 0\n    },\n    '&:after, & > div:after': {\n      clear: 'both',\n      content: '\" \"',\n      display: 'block',\n      fontSize: 0,\n      height: 0,\n      visibility: 'hidden'\n    }\n  },\n  gridHSpace05: {},\n  gridHSpace1: {},\n  gridHSpace2: {},\n  gridVSpace0: {},\n  gridVSpace05: {},\n  gridVSpace1: {},\n  gridVSpace2: {},\n  gridPositionCenter: {},\n  gridPositionRight: {},\n  // small spans\n  gridSpan: {},\n  gridSpan1: {},\n  gridSpan2: {},\n  gridSpan3: {},\n  gridSpan4: {},\n  gridSpan5: {},\n  gridSpan6: {},\n  gridSpan7: {},\n  gridSpan8: {},\n  gridSpan9: {},\n  gridSpan10: {},\n  gridSpan11: {},\n  gridSpan12: {},\n  gridIndent1: {},\n  gridIndent2: {},\n  gridIndent3: {},\n  gridIndent4: {},\n  gridIndent5: {},\n  gridIndent6: {},\n  gridIndent7: {},\n  gridIndent8: {},\n  gridIndent9: {},\n  gridIndent10: {},\n  gridIndent11: {},\n  gridIndent12: {}\n};\n\nvar INDENT_PATTERN = /*#__PURE__*/_wrapRegExp(/^(XL([0-9]|1[01]))? ?(L([0-9]|1[01]))? ?(M([0-9]|1[01]))? ?(S([0-9]|1[01]))?$/i, {\n  LargeDesktop: 2,\n  Desktop: 4,\n  Tablet: 6,\n  Phone: 8\n});\n\nvar SPAN_PATTERN = /*#__PURE__*/_wrapRegExp(/^(XL([1-9]|1[0-2]))? ?(L([1-9]|1[0-2]))? ?(M([1-9]|1[0-2]))? ?(S([1-9]|1[0-2]))?$/i, {\n  LargeDesktop: 2,\n  Desktop: 4,\n  Tablet: 6,\n  Phone: 8\n});\n\nvar DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 12);\nDefaultSpanMap.set('Tablet', 6);\nDefaultSpanMap.set('Desktop', 3);\nDefaultSpanMap.set('LargeDesktop', 3);\nvar DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\n\nvar getSpanFromString = function getSpanFromString(span, currentRange) {\n  var _spanConfig$groups$cu;\n\n  var spanConfig = SPAN_PATTERN.exec(span);\n  return (_spanConfig$groups$cu = spanConfig.groups[currentRange]) !== null && _spanConfig$groups$cu !== void 0 ? _spanConfig$groups$cu : DefaultSpanMap.get(currentRange);\n};\n\nvar getIndentFromString = function getIndentFromString(indent, currentRange) {\n  var _indentConfig$groups$;\n\n  var indentConfig = INDENT_PATTERN.exec(indent);\n  return (_indentConfig$groups$ = indentConfig.groups[currentRange]) !== null && _indentConfig$groups$ !== void 0 ? _indentConfig$groups$ : DefaultIndentMap.get(currentRange);\n};\n\nvar useStyles = createComponentStyles(GridClasses, {\n  name: 'Grid'\n});\n/**\n * <code>import { Grid } from '@ui5/webcomponents-react/lib/Grid';</code>\n */\n\nvar Grid = forwardRef(function (props, ref) {\n  var children = props.children,\n      hSpacing = props.hSpacing,\n      vSpacing = props.vSpacing,\n      position = props.position,\n      width = props.width,\n      style = props.style,\n      className = props.className,\n      tooltip = props.tooltip,\n      slot = props.slot,\n      defaultIndent = props.defaultIndent,\n      defaultSpan = props.defaultSpan;\n  var classes = useStyles();\n  var gridClasses = StyleClassHelper.of(classes.grid);\n  gridClasses.put(classes[\"gridHSpace\".concat(hSpacing === 0.5 ? '05' : hSpacing)]);\n  gridClasses.put(classes[\"gridVSpace\".concat(vSpacing === 0.5 ? '05' : vSpacing)]);\n  var currentRange = useViewportRange('StdExt');\n\n  if (GridPosition.Center === position) {\n    gridClasses.put(classes.gridPositionCenter);\n  }\n\n  if (GridPosition.Right === position) {\n    gridClasses.put(classes.gridPositionRight);\n  }\n\n  var gridStyle = useMemo(function () {\n    var styles = {};\n\n    if (width !== '100%' && width !== 'auto' && width !== 'inherit') {\n      if (hSpacing === 0) {\n        styles.width = width;\n      } else {\n        styles.width = \"calc(\".concat(width, \" - \").concat(hSpacing, \"rem)\");\n      }\n    }\n\n    if (style) {\n      Object.assign(styles, style);\n    }\n\n    return styles;\n  }, [width, hSpacing, style]);\n\n  if (className) {\n    gridClasses.put(className);\n  }\n\n  var renderGridElements = function renderGridElements(child) {\n    var gridSpanClasses = StyleClassHelper.of(classes.gridSpan);\n\n    if (child.props['data-layout'] && child.props['data-layout'].span) {\n      var childSpan = getSpanFromString(child.props['data-layout'].span, currentRange);\n      gridSpanClasses.put(classes[\"gridSpan\".concat(childSpan)]);\n    } else {\n      var span = getSpanFromString(defaultSpan, currentRange);\n      gridSpanClasses.put(classes[\"gridSpan\".concat(span)]);\n    }\n\n    var indentSpan = getIndentFromString(defaultIndent, currentRange);\n\n    if (child.props['data-layout'] && child.props['data-layout'].indent) {\n      var childIndent = getIndentFromString(child.props['data-layout'].indent, currentRange);\n\n      if (childIndent && childIndent > 0) {\n        gridSpanClasses.put(classes[\"gridIndent\".concat(childIndent)]);\n      }\n    } else if (indentSpan && indentSpan > 0) {\n      gridSpanClasses.put(classes[\"gridIndent\".concat(indentSpan)]);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: gridSpanClasses.valueOf()\n    }, child);\n  };\n\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: gridClasses.valueOf(),\n    style: gridStyle,\n    title: tooltip,\n    slot: slot\n  }, passThroughProps), Children.map(children, renderGridElements));\n});\nGrid.displayName = 'Grid';\nGrid.defaultProps = {\n  width: '100%',\n  vSpacing: 1,\n  hSpacing: 1,\n  position: GridPosition.Left,\n  defaultSpan: 'XL3 L3 M6 S12',\n  defaultIndent: 'XL0 L0 M0 S0'\n};\nexport { Grid };","map":{"version":3,"sources":["../src/components/Grid/Grid.jss.ts","../src/components/Grid/index.tsx"],"names":["getWidthForSpan","hSpace","width","getIndentForSpan","marginLeft","getSpansForSpace","getIndentsForSpace","GridClasses","grid","padding","margin","marginBottom","overflow","minHeight","marginRight","clear","content","display","fontSize","height","visibility","gridHSpace05","gridHSpace1","gridHSpace2","gridVSpace0","gridVSpace05","gridVSpace1","gridVSpace2","gridPositionCenter","gridPositionRight","gridSpan","gridSpan1","gridSpan2","gridSpan3","gridSpan4","gridSpan5","gridSpan6","gridSpan7","gridSpan8","gridSpan9","gridSpan10","gridSpan11","gridSpan12","gridIndent1","gridIndent2","gridIndent3","gridIndent4","gridIndent5","gridIndent6","gridIndent7","gridIndent8","gridIndent9","gridIndent10","gridIndent11","gridIndent12","INDENT_PATTERN","SPAN_PATTERN","DefaultSpanMap","DefaultIndentMap","getSpanFromString","spanConfig","getIndentFromString","indentConfig","useStyles","createComponentStyles","name","Grid","forwardRef","children","hSpacing","vSpacing","position","style","className","tooltip","slot","defaultIndent","defaultSpan","props","classes","gridClasses","StyleClassHelper","currentRange","useViewportRange","GridPosition","gridStyle","useMemo","styles","Object","renderGridElements","gridSpanClasses","child","childSpan","span","indentSpan","childIndent","passThroughProps","usePassThroughHtmlProps","Children"],"mappings":"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","sourcesContent":["const getWidthForSpan = (width, hSpace = 0) => {\n  return {\n    width: `calc(${(width * 100) / 12}% - ${hSpace}rem)`\n  };\n};\n\nconst getIndentForSpan = (width, hSpace = 0) => {\n  return {\n    marginLeft: `calc(${(width * 100) / 12}% + ${hSpace / 2}rem)`\n  };\n};\n\nconst getSpansForSpace = (hSpace = 0) => ({\n  '&$gridSpan1': getWidthForSpan(1, hSpace),\n  '&$gridSpan2': getWidthForSpan(2, hSpace),\n  '&$gridSpan3': getWidthForSpan(3, hSpace),\n  '&$gridSpan4': getWidthForSpan(4, hSpace),\n  '&$gridSpan5': getWidthForSpan(5, hSpace),\n  '&$gridSpan6': getWidthForSpan(6, hSpace),\n  '&$gridSpan7': getWidthForSpan(7, hSpace),\n  '&$gridSpan8': getWidthForSpan(8, hSpace),\n  '&$gridSpan9': getWidthForSpan(9, hSpace),\n  '&$gridSpan10': getWidthForSpan(10, hSpace),\n  '&$gridSpan11': getWidthForSpan(11, hSpace),\n  '&$gridSpan12': getWidthForSpan(12, hSpace)\n});\n\nconst getIndentsForSpace = (hSpace) => ({\n  '&$gridIndent1': getIndentForSpan(1, hSpace),\n  '&$gridIndent2': getIndentForSpan(2, hSpace),\n  '&$gridIndent3': getIndentForSpan(3, hSpace),\n  '&$gridIndent4': getIndentForSpan(4, hSpace),\n  '&$gridIndent5': getIndentForSpan(5, hSpace),\n  '&$gridIndent6': getIndentForSpan(6, hSpace),\n  '&$gridIndent7': getIndentForSpan(7, hSpace),\n  '&$gridIndent8': getIndentForSpan(8, hSpace),\n  '&$gridIndent9': getIndentForSpan(9, hSpace),\n  '&$gridIndent10': getIndentForSpan(10, hSpace),\n  '&$gridIndent11': getIndentForSpan(11, hSpace),\n  '&$gridIndent12': getIndentForSpan(12, hSpace)\n});\n\nexport const GridClasses = {\n  '@global html': {\n    '--_ui5wcr_Grid_float': 'left'\n  },\n  '@global [dir=\"rtl\"]': {\n    '--_ui5wcr_Grid_float': 'right'\n  },\n  grid: {\n    '& $gridSpan': { ...getSpansForSpace(0), ...getIndentsForSpace(0) },\n    '&$gridHSpace05': {\n      padding: '0 0.25rem',\n      '& > div': {\n        margin: '0 0.25rem'\n      },\n      '& $gridSpan': { ...getSpansForSpace(0.5), ...getIndentsForSpace(0.5) }\n    },\n    '&$gridHSpace1': {\n      padding: '0 0.5rem',\n      '& > div': {\n        margin: '0 0.5rem'\n      },\n      '& $gridSpan': { ...getSpansForSpace(1), ...getIndentsForSpace(1) }\n    },\n    '&$gridHSpace2': {\n      padding: '0 1rem',\n      '& > div': {\n        margin: '0 1rem'\n      },\n      '& $gridSpan': { ...getSpansForSpace(2), ...getIndentsForSpace(2) }\n    },\n    '&$gridVSpace0 > $gridSpan': {\n      marginBottom: 0\n    },\n    '&$gridVSpace05 > $gridSpan': {\n      marginBottom: '0.5rem'\n    },\n    '&$gridVSpace1 > $gridSpan': {\n      marginBottom: '1rem'\n    },\n    '&$gridVSpace2 > $gridSpan': {\n      marginBottom: '2rem'\n    },\n    '& > div': {\n      float: 'var(--_ui5wcr_Grid_float)',\n      overflow: 'hidden',\n      minHeight: '1px'\n    },\n    '&$gridPositionCenter': {\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    '&$gridPositionRight': {\n      marginLeft: 'auto',\n      marginRight: 0\n    },\n    '&:after, & > div:after': {\n      clear: 'both',\n      content: '\" \"',\n      display: 'block',\n      fontSize: 0,\n      height: 0,\n      visibility: 'hidden'\n    }\n  },\n  gridHSpace05: {},\n  gridHSpace1: {},\n  gridHSpace2: {},\n  gridVSpace0: {},\n  gridVSpace05: {},\n  gridVSpace1: {},\n  gridVSpace2: {},\n  gridPositionCenter: {},\n  gridPositionRight: {},\n  // small spans\n  gridSpan: {},\n  gridSpan1: {},\n  gridSpan2: {},\n  gridSpan3: {},\n  gridSpan4: {},\n  gridSpan5: {},\n  gridSpan6: {},\n  gridSpan7: {},\n  gridSpan8: {},\n  gridSpan9: {},\n  gridSpan10: {},\n  gridSpan11: {},\n  gridSpan12: {},\n  gridIndent1: {},\n  gridIndent2: {},\n  gridIndent3: {},\n  gridIndent4: {},\n  gridIndent5: {},\n  gridIndent6: {},\n  gridIndent7: {},\n  gridIndent8: {},\n  gridIndent9: {},\n  gridIndent10: {},\n  gridIndent11: {},\n  gridIndent12: {}\n};\n","import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useViewportRange } from '@ui5/webcomponents-react-base/lib/useViewportRange';\nimport { GridPosition } from '@ui5/webcomponents-react/lib/GridPosition';\nimport React, {\n  Children,\n  CSSProperties,\n  FC,\n  forwardRef,\n  ReactElement,\n  ReactNode,\n  ReactNodeArray,\n  Ref,\n  useMemo\n} from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { GridClasses } from './Grid.jss';\n\nexport interface GridPropTypes extends CommonProps {\n  /**\n   * Width of the Grid. If not specified, then 100%.\n   */\n  width?: CSSProperties['width'];\n  /**\n   * Vertical spacing between the rows in the Grid. In rem, allowed values are 0, 0.5, 1 and 2.\n   */\n  vSpacing?: 0 | 0.5 | 1 | 2;\n  /**\n   * Horizontal spacing between the content in the Grid. In rem, allowed values are 0, 0.5 , 1 or 2.\n   */\n  hSpacing?: 0 | 0.5 | 1 | 2;\n  /**\n   * Position of the Grid in the window or surrounding container. Possible values are \"Center\", \"Left\" and \"Right\".\n   */\n  position?: GridPosition;\n  /**\n   * A string type that represents Grid's default span values for large, medium and small screens for the whole Grid.\n   * Allowed values are separated by space Letters L, M or S followed by number of columns from 1 to 12 that the container has to take, for example: \"L2 M4 S6\", \"M12\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order large medium small.\n   */\n  defaultSpan?: string;\n  /**\n   * Defines default for the whole Grid numbers of empty columns before the current span begins. It can be defined for large, medium and small screens.\n   * Allowed values are separated by space Letters L, M or S followed by number of columns from 0 to 11 that the container has to take, for example: \"L2 M4 S6\", \"M11\", \"s10\" or \"l4 m4\".\n   * Note that the parameters has to be provided in the order large medium small.\n   */\n  defaultIndent?: string;\n  /**\n   * Components that are placed into Grid layout.\n   */\n  children: ReactNode | ReactNodeArray;\n}\n\nconst INDENT_PATTERN = /^([X][L](?<LargeDesktop>[0-9]|1[0-1]))? ?([L](?<Desktop>[0-9]|1[0-1]))? ?([M](?<Tablet>[0-9]|1[0-1]))? ?([S](?<Phone>[0-9]|1[0-1]))?$/i;\nconst SPAN_PATTERN = /^([X][L](?<LargeDesktop>[1-9]|1[0-2]))? ?([L](?<Desktop>[1-9]|1[0-2]))? ?([M](?<Tablet>[1-9]|1[0-2]))? ?([S](?<Phone>[1-9]|1[0-2]))?$/i;\n\nconst DefaultSpanMap = new Map();\nDefaultSpanMap.set('Phone', 12);\nDefaultSpanMap.set('Tablet', 6);\nDefaultSpanMap.set('Desktop', 3);\nDefaultSpanMap.set('LargeDesktop', 3);\n\nconst DefaultIndentMap = new Map();\nDefaultIndentMap.set('Phone', 0);\nDefaultIndentMap.set('Tablet', 0);\nDefaultIndentMap.set('Desktop', 0);\nDefaultIndentMap.set('LargeDesktop', 0);\n\nconst getSpanFromString = (span, currentRange) => {\n  const spanConfig = SPAN_PATTERN.exec(span);\n  return spanConfig.groups[currentRange] ?? DefaultSpanMap.get(currentRange);\n};\n\nconst getIndentFromString = (indent, currentRange) => {\n  const indentConfig = INDENT_PATTERN.exec(indent);\n  return indentConfig.groups[currentRange] ?? DefaultIndentMap.get(currentRange);\n};\n\nconst useStyles = createComponentStyles(GridClasses, { name: 'Grid' });\n\n/**\n * <code>import { Grid } from '@ui5/webcomponents-react/lib/Grid';</code>\n */\nconst Grid: FC<GridPropTypes> = forwardRef((props: GridPropTypes, ref: Ref<HTMLDivElement>) => {\n  const {\n    children,\n    hSpacing,\n    vSpacing,\n    position,\n    width,\n    style,\n    className,\n    tooltip,\n    slot,\n    defaultIndent,\n    defaultSpan\n  } = props;\n\n  const classes = useStyles();\n  const gridClasses = StyleClassHelper.of(classes.grid);\n  gridClasses.put(classes[`gridHSpace${hSpacing === 0.5 ? '05' : hSpacing}`]);\n  gridClasses.put(classes[`gridVSpace${vSpacing === 0.5 ? '05' : vSpacing}`]);\n\n  const currentRange = useViewportRange('StdExt');\n\n  if (GridPosition.Center === position) {\n    gridClasses.put(classes.gridPositionCenter);\n  }\n\n  if (GridPosition.Right === position) {\n    gridClasses.put(classes.gridPositionRight);\n  }\n\n  const gridStyle: CSSProperties = useMemo(() => {\n    const styles: CSSProperties = {};\n    if (width !== '100%' && width !== 'auto' && width !== 'inherit') {\n      if (hSpacing === 0) {\n        styles.width = width;\n      } else {\n        styles.width = `calc(${width} - ${hSpacing}rem)`;\n      }\n    }\n    if (style) {\n      Object.assign(styles, style);\n    }\n\n    return styles;\n  }, [width, hSpacing, style]);\n\n  if (className) {\n    gridClasses.put(className);\n  }\n\n  const renderGridElements = (child: ReactElement<any>) => {\n    const gridSpanClasses = StyleClassHelper.of(classes.gridSpan);\n    if (child.props['data-layout'] && child.props['data-layout'].span) {\n      const childSpan = getSpanFromString(child.props['data-layout'].span, currentRange);\n      gridSpanClasses.put(classes[`gridSpan${childSpan}`]);\n    } else {\n      const span = getSpanFromString(defaultSpan, currentRange);\n      gridSpanClasses.put(classes[`gridSpan${span}`]);\n    }\n\n    const indentSpan = getIndentFromString(defaultIndent, currentRange);\n    if (child.props['data-layout'] && child.props['data-layout'].indent) {\n      const childIndent = getIndentFromString(child.props['data-layout'].indent, currentRange);\n      if (childIndent && childIndent > 0) {\n        gridSpanClasses.put(classes[`gridIndent${childIndent}`]);\n      }\n    } else if (indentSpan && indentSpan > 0) {\n      gridSpanClasses.put(classes[`gridIndent${indentSpan}`]);\n    }\n    return <div className={gridSpanClasses.valueOf()}>{child}</div>;\n  };\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div\n      ref={ref}\n      className={gridClasses.valueOf()}\n      style={gridStyle}\n      title={tooltip}\n      slot={slot}\n      {...passThroughProps}\n    >\n      {Children.map(children, renderGridElements)}\n    </div>\n  );\n});\n\nGrid.displayName = 'Grid';\nGrid.defaultProps = {\n  width: '100%',\n  vSpacing: 1,\n  hSpacing: 1,\n  position: GridPosition.Left,\n  defaultSpan: 'XL3 L3 M6 S12',\n  defaultIndent: 'XL0 L0 M0 S0'\n};\n\nexport { Grid };\n"]},"metadata":{},"sourceType":"module"}