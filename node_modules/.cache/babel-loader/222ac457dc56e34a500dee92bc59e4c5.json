{"ast":null,"code":"import { ListMode } from '@ui5/webcomponents-react/lib/ListMode';\nimport { ListSeparators } from '@ui5/webcomponents-react/lib/ListSeparators';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/List';\n/**\n * <code>import { List } from '@ui5/webcomponents-react/lib/List';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/List\" target=\"_blank\">UI5 Web Components Playground</a>\n */\n\nvar List = withWebComponent('ui5-list', ['footerText', 'headerText', 'mode', 'noDataText', 'separators'], ['busy', 'infiniteScroll', 'inset'], ['header'], ['itemClick', 'itemDelete', 'loadMore', 'selectionChange']);\nList.displayName = 'List';\nList.defaultProps = {\n  busy: false,\n  infiniteScroll: false,\n  inset: false,\n  mode: ListMode.None,\n  separators: ListSeparators.All\n};\nexport { List };","map":{"version":3,"sources":["../src/webComponents/List/index.tsx"],"names":["List","withWebComponent","busy","infiniteScroll","inset","mode","ListMode","separators","ListSeparators","All"],"mappings":";;;;AAkEA;;;;;;IAKMA,IAAuB,GAAGC,gBAAgB,CAAA,UAAA,EAE9C,CAAA,YAAA,EAAA,YAAA,EAAA,MAAA,EAAA,YAAA,EAF8C,YAE9C,CAF8C,EAG9C,CAAA,MAAA,EAAA,gBAAA,EAH8C,OAG9C,CAH8C,EAI9C,CAJ8C,QAI9C,CAJ8C,EAK9C,CAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAL8C,iBAK9C,CAL8C,C;AAQhDD,IAAI,CAAJA,WAAAA,GAAAA,MAAAA;AAEAA,IAAI,CAAJA,YAAAA,GAAoB;AAClBE,EAAAA,IAAI,EADc,KAAA;AAElBC,EAAAA,cAAc,EAFI,KAAA;AAGlBC,EAAAA,KAAK,EAHa,KAAA;AAIlBC,EAAAA,IAAI,EAAEC,QAAQ,CAJI,IAAA;AAKlBC,EAAAA,UAAU,EAAEC,cAAc,CAACC;AALT,CAApBT","sourcesContent":["import { ListMode } from '@ui5/webcomponents-react/lib/ListMode';\nimport { ListSeparators } from '@ui5/webcomponents-react/lib/ListSeparators';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/List';\nimport React, { FC, ReactNode } from 'react';\nimport { WithWebComponentPropTypes } from '../../internal/withWebComponent';\n\nexport interface ListPropTypes extends WithWebComponentPropTypes {\n  /**\n   * Defines if the component would display a loading indicator at the bottom of the list. It's especially useful, when combined with <code>infiniteScroll</code>.\n   */\n  busy?: boolean;\n  /**\n   * Defines the footer text.\n   */\n  footerText?: string;\n  /**\n   * Defines the <code>ui5-list</code> header text. <br><br> <b>Note:</b> If <code>header</code> is set this property is ignored.\n   */\n  headerText?: string;\n  /**\n   * Defines if the component would fire the <code>loadMore</code> event when the user scrolls to the bottom of the list, and helps achieving an \"infinite scroll\" effect by adding new items each time.\n   */\n  infiniteScroll?: boolean;\n  /**\n   * Determines whether the list items are indented.\n   */\n  inset?: boolean;\n  /**\n   * Defines the mode of the <code>ui5-list</code>. <br><br> <b>Note:</b> Avalaible options are <code>None</code>, <code>SingleSelect</code>, <code>MultiSelect</code>, and <code>Delete</code>.\n   */\n  mode?: ListMode;\n  /**\n   * Defines the text that is displayed when the <code>ui5-list</code> contains no items.\n   */\n  noDataText?: string;\n  /**\n   * Defines the item separator style that is used. <br><br> <b>Notes:</b> <ul> <li>Avalaible options are <code>All</code>, <code>Inner</code>, and <code>None</code>.</li> <li>When set to <code>None</code>, none of the items are separated by horizontal lines.</li> <li>When set to <code>Inner</code>, the first item doesn't have a top separator and the last item doesn't have a bottom separator.</li> </ul>\n   */\n  separators?: ListSeparators;\n  /**\n   * Defines the items of the <code>ui5-list</code>. <br><br> <b>Note:</b> Use <code>ui5-li</code>, <code>ui5-li-custom</code>, and <code>ui5-li-groupheader</code> for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Defines the <code>ui5-li</code> header. <br><br> <b>Note:</b> When <code>header</code> is set, the <code>headerText</code> property is ignored.\n   */\n  header?: ReactNode | ReactNode[];\n  /**\n   * Fired when an item is activated, unless the item's <code>type</code> property is set to <code>Inactive</code>.\n   */\n  onItemClick?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the Delete button of any item is pressed. <br><br> <b>Note:</b> A Delete button is displayed on each item, when the <code>ui5-list</code> <code>mode</code> property is set to <code>Delete</code>.\n   */\n  onItemDelete?: (event: CustomEvent<{ item: ReactNode }>) => void;\n  /**\n   * Fired when the user scrolls to the bottom of the list. <br><br> <b>Note:</b> The event is fired when the <code>infiniteScroll</code> property is enabled.\n   */\n  onLoadMore?: (event: CustomEvent<{}>) => void;\n  /**\n   * Fired when selection is changed by user interaction in <code>SingleSelect</code> and <code>MultiSelect</code> modes.\n   */\n  onSelectionChange?: (event: CustomEvent<{ selectedItems: unknown[]; previouslySelectedItems: unknown[] }>) => void;\n}\n\n/**\n * <code>import { List } from '@ui5/webcomponents-react/lib/List';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/List\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst List: FC<ListPropTypes> = withWebComponent<ListPropTypes>(\n  'ui5-list',\n  ['footerText', 'headerText', 'mode', 'noDataText', 'separators'],\n  ['busy', 'infiniteScroll', 'inset'],\n  ['header'],\n  ['itemClick', 'itemDelete', 'loadMore', 'selectionChange']\n);\n\nList.displayName = 'List';\n\nList.defaultProps = {\n  busy: false,\n  infiniteScroll: false,\n  inset: false,\n  mode: ListMode.None,\n  separators: ListSeparators.All\n};\n\nexport { List };\n"]},"metadata":{},"sourceType":"module"}