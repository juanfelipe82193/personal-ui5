{"ast":null,"code":"import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getRTL } from \"@ui5/webcomponents-base/dist/config/RTL.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/accept.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING } from \"./generated/i18n/i18n-defaults.js\"; // Template\n\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\"; // Styles\n\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-checkbox\",\n  properties:\n  /** @lends sap.ui.webcomponents.main.CheckBox.prototype */\n  {\n    /**\n     * Defines whether the <code>ui5-checkbox</code> is disabled.\n     * <br><br>\n     * <b>Note:</b> A disabled <code>ui5-checkbox</code> is completely noninteractive.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the <code>ui5-checkbox</code> is read-only.\n     * <br><br>\n     * <b>Note:</b> A red-only <code>ui5-checkbox</code> is not editable,\n     * but still provides visual feedback upon user interaction.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * Defines if the <code>ui5-checkbox</code> is checked.\n     * <br><br>\n     * <b>Note:</b> The property can be changed with user interaction,\n     * either by cliking/tapping on the <code>ui5-checkbox</code>, or by\n     * pressing the Enter or Space key.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    checked: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the text of the <code>ui5-checkbox</code>.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    text: {\n      type: String\n    },\n\n    /**\n     * Defines the value state of the <code>ui5-checkbox</code>.\n     * <br><br>\n     * <b>Note:</b> Available options are <code>Warning</code>, <code>Error</code>, and <code>None</code> (default).\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Defines whether the <code>ui5-checkbox</code> text wraps when there is not enough space.\n     * <br><br>\n     * <b>Note:</b> By default, the text truncates when there is not enough space.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    wrap: {\n      type: Boolean\n    },\n\n    /**\n     * Determines the name with which the <code>ui5-checkbox</code> will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the <code>ui5-checkbox</code> so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n    _label: {\n      type: Object\n    }\n  },\n  events:\n  /** @lends sap.ui.webcomponents.main.CheckBox.prototype */\n  {\n    /**\n     * Fired when the <code>ui5-checkbox</code> checked state changes.\n     *\n     * @public\n     * @event\n     */\n    change: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n * <br><br>\n * The <code>ui5-checkbox</code> component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the <code>ui5-checkbox</code>, the user has to click or tap the square\n * box or its label.\n * <br><br>\n * The <code>ui5-checkbox</code> component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the <code>ui5-checkbox</code> between checked and unchecked state.\n *\n * <h3>Usage</h3>\n *\n * You can manually set the width of the element containing the box and the label using the <code>width</code> property.\n * If the text exceeds the available width, it is truncated.\n * The touchable area for toggling the <code>ui5-checkbox</code> ends where the text ends.\n * <br><br>\n * You can disable the <code>ui5-checkbox</code> by setting the <code>disabled</code> property to\n * <code>true</code>,\n * or use the <code>ui5-checkbox</code> in read-only mode by setting the <code>readonly</code>\n * property to <code>true</code>.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/CheckBox\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CheckBox\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-checkbox\n * @public\n */\n\nclass CheckBox extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return CheckBoxTemplate;\n  }\n\n  static get styles() {\n    return checkboxCss;\n  }\n\n  constructor() {\n    super();\n    this._label = {};\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  onBeforeRendering() {\n    this.syncLabel();\n\n    this._enableFormSupport();\n  }\n\n  syncLabel() {\n    this._label = Object.assign({}, this._label);\n    this._label.text = this.text;\n    this._label.wrap = this.wrap;\n    this._label.textDirection = this.textDirection;\n  }\n\n  _enableFormSupport() {\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {\n        nativeInput.disabled = element.disabled || !element.checked;\n        nativeInput.value = element.checked ? \"on\" : \"\";\n      });\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n  }\n\n  _onclick() {\n    this.toggle();\n  }\n\n  _onkeydown(event) {\n    if (isSpace(event)) {\n      event.preventDefault();\n    }\n\n    if (isEnter(event)) {\n      this.toggle();\n    }\n  }\n\n  _onkeyup(event) {\n    if (isSpace(event)) {\n      this.toggle();\n    }\n  }\n\n  toggle() {\n    if (this.canToggle()) {\n      this.checked = !this.checked;\n      this.fireEvent(\"change\"); // Angular two way data binding\n\n      this.fireEvent(\"value-changed\");\n    }\n\n    return this;\n  }\n\n  canToggle() {\n    return !(this.disabled || this.readonly);\n  }\n\n  valueStateTextMappings() {\n    const i18nBundle = this.i18nBundle;\n    return {\n      \"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": i18nBundle.getText(VALUE_STATE_WARNING)\n    };\n  }\n\n  get classes() {\n    return {\n      main: {\n        \"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop()\n      }\n    };\n  }\n\n  get ariaReadonly() {\n    return this.readonly ? \"true\" : undefined;\n  }\n\n  get ariaDisabled() {\n    return this.disabled ? \"true\" : undefined;\n  }\n\n  get ariaLabelledBy() {\n    return this.text ? `${this._id}-label` : undefined;\n  }\n\n  get ariaDescribedBy() {\n    return this.hasValueState ? `${this._id}-descr` : undefined;\n  }\n\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n\n  get valueStateText() {\n    return this.valueStateTextMappings()[this.valueState];\n  }\n\n  get tabIndex() {\n    const tabindex = this.getAttribute(\"tabindex\");\n    return this.disabled ? undefined : tabindex || \"0\";\n  }\n\n  get rtl() {\n    return getRTL() ? \"rtl\" : undefined;\n  }\n\n  static async onDefine() {\n    await Promise.all([Label.define(), Icon.define(), fetchI18nBundle(\"@ui5/webcomponents\")]);\n  }\n\n}\n\nCheckBox.define();\nexport default CheckBox;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/CheckBox.js"],"names":["isDesktop","UI5Element","litRender","fetchI18nBundle","getI18nBundle","ValueState","getFeature","getRTL","isSpace","isEnter","Icon","Label","VALUE_STATE_ERROR","VALUE_STATE_WARNING","CheckBoxTemplate","checkboxCss","metadata","tag","properties","disabled","type","Boolean","readonly","checked","text","String","valueState","defaultValue","None","wrap","name","_label","Object","events","change","CheckBox","render","template","styles","constructor","i18nBundle","onBeforeRendering","syncLabel","_enableFormSupport","assign","textDirection","FormSupport","syncNativeHiddenInput","element","nativeInput","value","console","warn","_onclick","toggle","_onkeydown","event","preventDefault","_onkeyup","canToggle","fireEvent","valueStateTextMappings","getText","classes","main","ariaReadonly","undefined","ariaDisabled","ariaLabelledBy","_id","ariaDescribedBy","hasValueState","valueStateText","tabIndex","tabindex","getAttribute","rtl","onDefine","Promise","all","define"],"mappings":"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","sourcesContent":["import { isDesktop } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { getRTL } from \"@ui5/webcomponents-base/dist/config/RTL.js\";\nimport { isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/accept.js\";\nimport Icon from \"./Icon.js\";\nimport Label from \"./Label.js\";\nimport { VALUE_STATE_ERROR, VALUE_STATE_WARNING } from \"./generated/i18n/i18n-defaults.js\";\n\n// Template\nimport CheckBoxTemplate from \"./generated/templates/CheckBoxTemplate.lit.js\";\n\n// Styles\nimport checkboxCss from \"./generated/themes/CheckBox.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-checkbox\",\n\tproperties: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-checkbox</code> is disabled.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A disabled <code>ui5-checkbox</code> is completely noninteractive.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-checkbox</code> is read-only.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A red-only <code>ui5-checkbox</code> is not editable,\n\t\t * but still provides visual feedback upon user interaction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines if the <code>ui5-checkbox</code> is checked.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The property can be changed with user interaction,\n\t\t * either by cliking/tapping on the <code>ui5-checkbox</code>, or by\n\t\t * pressing the Enter or Space key.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tchecked: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the text of the <code>ui5-checkbox</code>.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\ttext: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the <code>ui5-checkbox</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> Available options are <code>Warning</code>, <code>Error</code>, and <code>None</code> (default).\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-checkbox</code> text wraps when there is not enough space.\n\t\t * <br><br>\n\t\t * <b>Note:</b> By default, the text truncates when there is not enough space.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\twrap: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the <code>ui5-checkbox</code> will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the <code>ui5-checkbox</code> so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t_label: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tevents: /** @lends sap.ui.webcomponents.main.CheckBox.prototype */ {\n\n\t\t/**\n\t\t * Fired when the <code>ui5-checkbox</code> checked state changes.\n\t\t *\n\t\t * @public\n\t\t * @event\n\t\t */\n\t\tchange: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * Allows the user to set a binary value, such as true/false or yes/no for an item.\n * <br><br>\n * The <code>ui5-checkbox</code> component consists of a box and a label that describes its purpose.\n * If it's checked, an indicator is displayed inside the box.\n * To check/uncheck the <code>ui5-checkbox</code>, the user has to click or tap the square\n * box or its label.\n * <br><br>\n * The <code>ui5-checkbox</code> component only has 2 states - checked and unchecked.\n * Clicking or tapping toggles the <code>ui5-checkbox</code> between checked and unchecked state.\n *\n * <h3>Usage</h3>\n *\n * You can manually set the width of the element containing the box and the label using the <code>width</code> property.\n * If the text exceeds the available width, it is truncated.\n * The touchable area for toggling the <code>ui5-checkbox</code> ends where the text ends.\n * <br><br>\n * You can disable the <code>ui5-checkbox</code> by setting the <code>disabled</code> property to\n * <code>true</code>,\n * or use the <code>ui5-checkbox</code> in read-only mode by setting the <code>readonly</code>\n * property to <code>true</code>.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/CheckBox\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.CheckBox\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-checkbox\n * @public\n */\nclass CheckBox extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn CheckBoxTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn checkboxCss;\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._label = {};\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tonBeforeRendering() {\n\t\tthis.syncLabel();\n\n\t\tthis._enableFormSupport();\n\t}\n\n\tsyncLabel() {\n\t\tthis._label = Object.assign({}, this._label);\n\t\tthis._label.text = this.text;\n\t\tthis._label.wrap = this.wrap;\n\t\tthis._label.textDirection = this.textDirection;\n\t}\n\n\t_enableFormSupport() {\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this, (element, nativeInput) => {\n\t\t\t\tnativeInput.disabled = element.disabled || !element.checked;\n\t\t\t\tnativeInput.value = element.checked ? \"on\" : \"\";\n\t\t\t});\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\t}\n\n\t_onclick() {\n\t\tthis.toggle();\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isSpace(event)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\tthis.toggle();\n\t\t}\n\t}\n\n\t_onkeyup(event) {\n\t\tif (isSpace(event)) {\n\t\t\tthis.toggle();\n\t\t}\n\t}\n\n\ttoggle() {\n\t\tif (this.canToggle()) {\n\t\t\tthis.checked = !this.checked;\n\t\t\tthis.fireEvent(\"change\");\n\t\t\t// Angular two way data binding\n\t\t\tthis.fireEvent(\"value-changed\");\n\t\t}\n\t\treturn this;\n\t}\n\n\tcanToggle() {\n\t\treturn !(this.disabled || this.readonly);\n\t}\n\n\tvalueStateTextMappings() {\n\t\tconst i18nBundle = this.i18nBundle;\n\n\t\treturn {\n\t\t\t\"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t};\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tmain: {\n\t\t\t\t\"ui5-checkbox--hoverable\": !this.disabled && !this.readonly && isDesktop(),\n\t\t\t},\n\t\t};\n\t}\n\n\tget ariaReadonly() {\n\t\treturn this.readonly ? \"true\" : undefined;\n\t}\n\n\tget ariaDisabled() {\n\t\treturn this.disabled ? \"true\" : undefined;\n\t}\n\n\tget ariaLabelledBy() {\n\t\treturn this.text ? `${this._id}-label` : undefined;\n\t}\n\n\tget ariaDescribedBy() {\n\t\treturn this.hasValueState ? `${this._id}-descr` : undefined;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget valueStateText() {\n\t\treturn this.valueStateTextMappings()[this.valueState];\n\t}\n\n\tget tabIndex() {\n\t\tconst tabindex = this.getAttribute(\"tabindex\");\n\t\treturn this.disabled ? undefined : tabindex || \"0\";\n\t}\n\n\tget rtl() {\n\t\treturn getRTL() ? \"rtl\" : undefined;\n\t}\n\n\tstatic async onDefine() {\n\t\tawait Promise.all([\n\t\t\tLabel.define(),\n\t\t\tIcon.define(),\n\t\t\tfetchI18nBundle(\"@ui5/webcomponents\"),\n\t\t]);\n\t}\n}\n\nCheckBox.define();\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}