{"ast":null,"code":"import _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { Device } from '@ui5/webcomponents-react-base/lib/Device';\nimport { useState, useRef, useEffect } from 'react';\n\nvar useViewportRange = function useViewportRange(rangeSet) {\n  var _useState = useState(Device.media.getCurrentRange(rangeSet, window.innerWidth).name),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentRange = _useState2[0],\n      setCurrentRange = _useState2[1];\n\n  var isMounted = useRef(true);\n  useEffect(function () {\n    var handler = function handler(_ref) {\n      var range = _ref.name;\n\n      if (isMounted.current === true) {\n        setCurrentRange(range);\n      }\n    };\n\n    Device.media.attachHandler(handler, null, 'StdExt');\n    return function () {\n      isMounted.current = false;\n      Device.resize.detachHandler(handler, null);\n    };\n  }, [setCurrentRange, isMounted]);\n  return currentRange;\n};\n\nexport { useViewportRange };","map":{"version":3,"sources":["../src/hooks/useViewportRange.ts"],"names":["useViewportRange","currentRange","setCurrentRange","useState","Device","window","isMounted","useRef","useEffect","handler","name","range"],"mappings":";;;;IAGaA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,QAAA,EAAc;AAAA,MAAA,SAAA,GACJG,QAAQ,CAACC,MAAM,CAANA,KAAAA,CAAAA,eAAAA,CAAAA,QAAAA,EAAuCC,MAAM,CAA7CD,UAAAA,EADL,IACI,CADJ;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACrCH,YADqC,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACvBC,eADuB,GAAA,UAAA,CAAA,CAAA,CAAA;;AAE5C,MAAMI,SAAS,GAAGC,MAAM,CAAxB,IAAwB,CAAxB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAqB;AAAA,UAAZE,KAAY,GAAA,IAAA,CAAlBD,IAAkB;;AACnC,UAAIJ,SAAS,CAATA,OAAAA,KAAJ,IAAA,EAAgC;AAC9BJ,QAAAA,eAAe,CAAfA,KAAe,CAAfA;AACD;AAHH,KAAA;;AAKAE,IAAAA,MAAM,CAANA,KAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,IAAAA,EAAAA,QAAAA;AACA,WAAO,YAAM;AACXE,MAAAA,SAAS,CAATA,OAAAA,GAAAA,KAAAA;AACAF,MAAAA,MAAM,CAANA,MAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,IAAAA;AAFF,KAAA;AAPO,GAAA,EAWN,CAAA,eAAA,EAXHI,SAWG,CAXM,CAATA;AAaA,SAAA,YAAA;AACD,C","sourcesContent":["import { Device } from '@ui5/webcomponents-react-base/lib/Device';\nimport { useEffect, useState, useRef } from 'react';\n\nexport const useViewportRange = (rangeSet) => {\n  const [currentRange, setCurrentRange] = useState(Device.media.getCurrentRange(rangeSet, window.innerWidth).name);\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    const handler = ({ name: range }) => {\n      if (isMounted.current === true) {\n        setCurrentRange(range);\n      }\n    };\n    Device.media.attachHandler(handler, null, 'StdExt');\n    return () => {\n      isMounted.current = false;\n      Device.resize.detachHandler(handler, null);\n    };\n  }, [setCurrentRange, isMounted]);\n\n  return currentRange;\n};\n"]},"metadata":{},"sourceType":"module"}