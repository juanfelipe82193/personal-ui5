{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport React, { useState, useRef, useCallback, useEffect, forwardRef, useMemo } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Loader } from '@ui5/webcomponents-react/lib/Loader';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport debounce from 'lodash.debounce';\nvar loaderStyles = {\n  position: 'absolute'\n};\n\nvar getLoadingState = function getLoadingState(loading, datasets, Placeholder) {\n  if (!loading) {\n    return null;\n  }\n\n  if (loading && datasets.length > 0) {\n    return /*#__PURE__*/React.createElement(Loader, {\n      style: loaderStyles\n    });\n  }\n\n  if (loading && datasets.length === 0) {\n    return /*#__PURE__*/React.createElement(Placeholder, null);\n  }\n\n  return null;\n};\n\nvar useSizeMonitor = function useSizeMonitor(props, container) {\n  var heightProp = props.height,\n      widthProp = props.width,\n      minHeight = props.minHeight,\n      minWidth = props.minWidth;\n\n  var _useState = useState({\n    height: null,\n    width: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      sizeState = _useState2[0],\n      setSizeState = _useState2[1];\n\n  var observer = useRef(null);\n  var dynamicHeightProp = typeof heightProp === 'string';\n  var dynamicWidthProp = typeof heightProp === 'string';\n  var enableSizeMonitor = dynamicHeightProp || dynamicWidthProp;\n  var recalculateSize = useCallback(function (e) {\n    var clientRectHeight;\n    var clientRectWidth;\n\n    if (!e || !e[0] || !e[0].contentRect) {\n      clientRectHeight = container.current.getBoundingClientRect().height;\n      clientRectWidth = container.current.getBoundingClientRect().width;\n    } else {\n      clientRectHeight = e[0].contentRect.height;\n      clientRectWidth = e[0].contentRect.width;\n    }\n\n    if (dynamicHeightProp || dynamicWidthProp) {\n      setSizeState(function (state) {\n        return _objectSpread(_objectSpread(_objectSpread({}, state), dynamicHeightProp && {\n          height: Math.max(minHeight, clientRectHeight)\n        }), dynamicWidthProp && {\n          width: Math.max(minWidth, clientRectWidth)\n        });\n      });\n    }\n  }, [setSizeState, minWidth, minHeight, dynamicHeightProp, dynamicWidthProp]);\n  useEffect(function () {\n    if (enableSizeMonitor && container.current) {\n      // @ts-ignore\n      observer.current = new ResizeObserver(debounce(recalculateSize, 500));\n      observer.current.observe(container.current);\n    }\n\n    return function () {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [recalculateSize]);\n  return {\n    height: dynamicHeightProp ? sizeState.height : heightProp,\n    width: dynamicWidthProp ? sizeState.width : widthProp\n  };\n};\n\nvar calculateChartHeight = function calculateChartHeight(props) {\n  if (props.noLegend) {\n    return typeof props.height === 'string' ? props.height : \"\".concat(props.height, \"px\");\n  }\n\n  return typeof props.height === 'string' ? \"calc(\".concat(props.height, \" - 60px)\") : \"\".concat(props.height - 60, \"px\");\n};\n\nvar styles = {\n  chart: {\n    '& .legend': {\n      height: '55px',\n      maxHeight: '55px',\n      marginTop: '5px',\n      overflowY: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap',\n      padding: '0 1rem',\n      boxSizing: 'border-box'\n    },\n    '& > svg[role=\"img\"]': {\n      width: function width(props) {\n        return \"\".concat(props.width, \"px\");\n      },\n      height: calculateChartHeight\n    }\n  }\n};\nvar useStyles = createUseStyles(styles, {\n  name: 'ChartContainer'\n});\n\nvar withChartContainer = function withChartContainer(Component) {\n  var ChartContainer = forwardRef(function (props, ref) {\n    var style = props.style,\n        className = props.className,\n        tooltip = props.tooltip,\n        loading = props.loading,\n        datasets = props.datasets,\n        slot = props.slot,\n        noLegend = props.noLegend,\n        rest = _objectWithoutProperties(props, [\"style\", \"className\", \"tooltip\", \"loading\", \"datasets\", \"slot\", \"noLegend\"]);\n\n    var outerContainer = useRef(null);\n    var legendRef = useRef(null);\n    var classes = useStyles(props);\n    var classNames = classes.chart;\n\n    if (className) {\n      classNames = \"\".concat(classNames, \" \").concat(className);\n    }\n\n    var loadingIndicator = useMemo(function () {\n      return getLoadingState(loading, datasets, Component.LoadingPlaceholder);\n    }, [loading, datasets, Component]);\n\n    var _useSizeMonitor = useSizeMonitor(props, outerContainer),\n        height = _useSizeMonitor.height,\n        width = _useSizeMonitor.width;\n\n    var inlineStyle = useMemo(function () {\n      return _objectSpread({\n        position: 'relative',\n        paddingTop: '6px',\n        width: typeof props.width === 'string' ? props.width : \"\".concat(width, \"px\"),\n        height: typeof props.height === 'string' ? props.height : \"\".concat(height, \"px\")\n      }, style);\n    }, [props.width, props.height, width, height, style]);\n    var chartHeight = useMemo(function () {\n      return noLegend ? height : height - 60;\n    }, [noLegend, height]);\n    var chartWrapperStyles = useMemo(function () {\n      var innerChartWrapperStyles = {\n        position: 'relative',\n        height: chartHeight >= 0 ? \"\".concat(chartHeight, \"px\") : 'auto',\n        width: width ? \"\".concat(width, \"px\") : 'auto'\n      };\n      return innerChartWrapperStyles;\n    }, [chartHeight, width]);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: outerContainer,\n      className: classNames,\n      style: inlineStyle,\n      title: tooltip,\n      slot: slot\n    }, loadingIndicator, height && datasets.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      style: chartWrapperStyles\n    }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n      noLegend: noLegend,\n      height: chartHeight,\n      width: width,\n      ref: ref,\n      datasets: datasets,\n      loading: loading,\n      legendRef: legendRef\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      ref: legendRef,\n      className: \"legend\"\n    }));\n  });\n  ChartContainer.defaultProps = Component.defaultProps;\n  ChartContainer.displayName = Component.displayName;\n  return ChartContainer;\n};\n\nexport { withChartContainer };","map":{"version":3,"sources":["../src/internal/Placeholder.tsx","../src/hooks/useSizeMonitor.ts","../src/internal/withChartContainer.tsx"],"names":["loaderStyles","position","getLoadingState","loading","datasets","useSizeMonitor","heightProp","widthProp","minHeight","minWidth","props","sizeState","setSizeState","useState","height","width","observer","useRef","dynamicHeightProp","dynamicWidthProp","enableSizeMonitor","recalculateSize","useCallback","e","clientRectHeight","container","clientRectWidth","Math","useEffect","debounce","calculateChartHeight","styles","chart","maxHeight","marginTop","overflowY","display","flexWrap","padding","boxSizing","useStyles","createUseStyles","name","withChartContainer","ChartContainer","forwardRef","style","className","tooltip","slot","noLegend","rest","outerContainer","legendRef","classes","classNames","loadingIndicator","useMemo","Component","inlineStyle","paddingTop","chartHeight","chartWrapperStyles","innerChartWrapperStyles"],"mappings":"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","sourcesContent":["import { Loader } from '@ui5/webcomponents-react/lib/Loader';\nimport React, { CSSProperties } from 'react';\n\nconst loaderStyles: CSSProperties = {\n  position: 'absolute'\n};\n\nexport const getLoadingState = (loading, datasets, Placeholder) => {\n  if (!loading) {\n    return null;\n  }\n\n  if (loading && datasets.length > 0) {\n    return <Loader style={loaderStyles} />;\n  }\n\n  if (loading && datasets.length === 0) {\n    return <Placeholder />;\n  }\n\n  return null;\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport debounce from 'lodash.debounce';\n\nexport const useSizeMonitor = (props, container) => {\n  const { height: heightProp, width: widthProp, minHeight, minWidth } = props;\n  const [sizeState, setSizeState] = useState({\n    height: null,\n    width: null\n  });\n  const observer = useRef(null);\n\n  const dynamicHeightProp = typeof heightProp === 'string';\n  const dynamicWidthProp = typeof heightProp === 'string';\n  const enableSizeMonitor = dynamicHeightProp || dynamicWidthProp;\n\n  const recalculateSize = useCallback(\n    (e?) => {\n      let clientRectHeight;\n      let clientRectWidth;\n\n      if (!e || !e[0] || !e[0].contentRect) {\n        clientRectHeight = container.current.getBoundingClientRect().height;\n        clientRectWidth = container.current.getBoundingClientRect().width;\n      } else {\n        clientRectHeight = e[0].contentRect.height;\n        clientRectWidth = e[0].contentRect.width;\n      }\n\n      if (dynamicHeightProp || dynamicWidthProp) {\n        setSizeState((state) => ({\n          ...state,\n          ...(dynamicHeightProp && { height: Math.max(minHeight, clientRectHeight) }),\n          ...(dynamicWidthProp && { width: Math.max(minWidth, clientRectWidth) })\n        }));\n      }\n    },\n    [setSizeState, minWidth, minHeight, dynamicHeightProp, dynamicWidthProp]\n  );\n\n  useEffect(() => {\n    if (enableSizeMonitor && container.current) {\n      // @ts-ignore\n      observer.current = new ResizeObserver(debounce(recalculateSize, 500));\n      observer.current.observe(container.current);\n    }\n    return () => {\n      if (observer.current) {\n        observer.current.disconnect();\n      }\n    };\n  }, [recalculateSize]);\n\n  return {\n    height: dynamicHeightProp ? sizeState.height : heightProp,\n    width: dynamicWidthProp ? sizeState.width : widthProp\n  };\n};\n","import React, { ComponentType, CSSProperties, forwardRef, Ref, useMemo, useRef } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { ChartBaseProps } from '../interfaces/ChartBaseProps';\nimport { getLoadingState } from './Placeholder';\nimport { useSizeMonitor } from '../hooks/useSizeMonitor';\n\nconst calculateChartHeight = (props) => {\n  if (props.noLegend) {\n    return typeof props.height === 'string' ? props.height : `${props.height}px`;\n  }\n  return typeof props.height === 'string' ? `calc(${props.height} - 60px)` : `${props.height - 60}px`;\n};\n\nconst styles = {\n  chart: {\n    '& .legend': {\n      height: '55px',\n      maxHeight: '55px',\n      marginTop: '5px',\n      overflowY: 'auto',\n      display: 'flex',\n      flexWrap: 'wrap',\n      padding: '0 1rem',\n      boxSizing: 'border-box'\n    },\n    '& > svg[role=\"img\"]': {\n      width: (props) => `${props.width}px`,\n      height: calculateChartHeight\n    }\n  }\n};\n\nconst useStyles = createUseStyles(styles, { name: 'ChartContainer' });\n\nexport const withChartContainer = (Component: ComponentType<any>) => {\n  const ChartContainer = forwardRef((props: ChartBaseProps, ref: Ref<any>) => {\n    const { style, className, tooltip, loading, datasets, slot, noLegend, ...rest } = props;\n\n    const outerContainer = useRef(null);\n    const legendRef = useRef(null);\n\n    const classes = useStyles(props);\n    let classNames = classes.chart;\n    if (className) {\n      classNames = `${classNames} ${className}`;\n    }\n\n    const loadingIndicator = useMemo(() => {\n      return getLoadingState(loading, datasets, (Component as any).LoadingPlaceholder);\n    }, [loading, datasets, Component]);\n\n    const { height, width } = useSizeMonitor(props, outerContainer);\n\n    const inlineStyle: CSSProperties = useMemo(() => {\n      return {\n        position: 'relative',\n        paddingTop: '6px',\n        width: typeof props.width === 'string' ? props.width : `${width}px`,\n        height: typeof props.height === 'string' ? props.height : `${height}px`,\n        ...style\n      };\n    }, [props.width, props.height, width, height, style]);\n\n    const chartHeight = useMemo(() => (noLegend ? height : height - 60), [noLegend, height]);\n\n    const chartWrapperStyles: CSSProperties = useMemo(() => {\n      let innerChartWrapperStyles: CSSProperties = {\n        position: 'relative',\n        height: chartHeight >= 0 ? `${chartHeight}px` : 'auto',\n        width: width ? `${width}px` : 'auto'\n      };\n\n      return innerChartWrapperStyles;\n    }, [chartHeight, width]);\n\n    return (\n      <div ref={outerContainer} className={classNames} style={inlineStyle} title={tooltip} slot={slot}>\n        {loadingIndicator}\n        {height && datasets.length > 0 && (\n          <div style={chartWrapperStyles}>\n            <Component\n              {...rest}\n              noLegend={noLegend}\n              height={chartHeight}\n              width={width}\n              ref={ref}\n              datasets={datasets}\n              loading={loading}\n              legendRef={legendRef}\n            />\n          </div>\n        )}\n        <div ref={legendRef} className=\"legend\" />\n      </div>\n    );\n  });\n\n  ChartContainer.defaultProps = Component.defaultProps;\n  ChartContainer.displayName = Component.displayName;\n\n  return ChartContainer;\n};\n"]},"metadata":{},"sourceType":"module"}