{"ast":null,"code":"const INTERVAL = 300;\n\nclass CustomResize {\n  static initialize() {\n    CustomResize.initialized = false;\n    CustomResize.resizeInterval = undefined;\n    CustomResize.resizeListeners = new Map();\n  }\n\n  static attachListener(ref, callback) {\n    const observedObject = CustomResize.resizeListeners.get(ref);\n    const existingCallbacks = observedObject ? observedObject.callbacks : [];\n    CustomResize.resizeListeners.set(ref, {\n      width: ref ? ref.offsetWidth : 0,\n      height: ref ? ref.offsetHeight : 0,\n      callbacks: existingCallbacks.concat(callback)\n    });\n    CustomResize.initListener();\n  }\n\n  static initListener() {\n    if (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {\n      CustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);\n    }\n  }\n\n  static checkListeners() {\n    CustomResize.resizeListeners.forEach((entry, ref) => {\n      const changed = CustomResize.checkSizes(entry, ref);\n\n      if (changed || entry && !entry._hasBeenRendered) {\n        CustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);\n        entry.callbacks.forEach(el => el());\n        entry._hasBeenRendered = true;\n      }\n    });\n  }\n\n  static updateSizes(sizes, newWidth, newHeight) {\n    sizes.width = newWidth;\n    sizes.height = newHeight;\n  }\n\n  static checkSizes(entry, ref) {\n    const oldHeight = entry.height;\n    const oldWidth = entry.width;\n    const newHeight = ref.offsetHeight;\n    const newWidth = ref.offsetWidth;\n    return oldHeight !== newHeight || oldWidth !== newWidth;\n  }\n\n  static detachListener(ref, callback) {\n    const listenerObject = CustomResize.resizeListeners.get(ref);\n    const callbacks = listenerObject ? listenerObject.callbacks : [];\n    const filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n    if (!listenerObject || callbacks.length === filteredCallbacks.length && callbacks.length !== 0) {\n      return;\n    }\n\n    CustomResize.resizeListeners.set(ref, Object.assign(listenerObject, {\n      callbacks: filteredCallbacks\n    }));\n\n    if (!filteredCallbacks.length) {\n      listenerObject.callbacks = null;\n      CustomResize.resizeListeners.delete(ref);\n    }\n\n    if (CustomResize.resizeListeners.size === 0) {\n      CustomResize.initialized = false;\n      clearInterval(CustomResize.resizeInterval);\n    }\n  }\n\n}\n\nexport default CustomResize;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/delegate/CustomResize.js"],"names":["INTERVAL","CustomResize","initialize","initialized","resizeInterval","undefined","resizeListeners","Map","attachListener","ref","callback","observedObject","get","existingCallbacks","callbacks","set","width","offsetWidth","height","offsetHeight","concat","initListener","size","setInterval","checkListeners","bind","forEach","entry","changed","checkSizes","_hasBeenRendered","updateSizes","el","sizes","newWidth","newHeight","oldHeight","oldWidth","detachListener","listenerObject","filteredCallbacks","filter","fn","length","Object","assign","delete","clearInterval"],"mappings":"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","sourcesContent":["const INTERVAL = 300;\n\nclass CustomResize {\n\tstatic initialize() {\n\t\tCustomResize.initialized = false;\n\t\tCustomResize.resizeInterval = undefined;\n\t\tCustomResize.resizeListeners = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedObject = CustomResize.resizeListeners.get(ref);\n\t\tconst existingCallbacks = observedObject ? observedObject.callbacks : [];\n\n\t\tCustomResize.resizeListeners.set(ref, {\n\t\t\twidth: ref ? ref.offsetWidth : 0,\n\t\t\theight: ref ? ref.offsetHeight : 0,\n\t\t\tcallbacks: existingCallbacks.concat(callback),\n\t\t});\n\n\t\tCustomResize.initListener();\n\t}\n\n\tstatic initListener() {\n\t\tif (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {\n\t\t\tCustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);\n\t\t}\n\t}\n\n\tstatic checkListeners() {\n\t\tCustomResize.resizeListeners.forEach((entry, ref) => {\n\t\t\tconst changed = CustomResize.checkSizes(entry, ref);\n\n\t\t\tif (changed || (entry && !entry._hasBeenRendered)) {\n\t\t\t\tCustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);\n\t\t\t\tentry.callbacks.forEach(el => el());\n\t\t\t\tentry._hasBeenRendered = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic updateSizes(sizes, newWidth, newHeight) {\n\t\tsizes.width = newWidth;\n\t\tsizes.height = newHeight;\n\t}\n\n\tstatic checkSizes(entry, ref) {\n\t\tconst oldHeight = entry.height;\n\t\tconst oldWidth = entry.width;\n\t\tconst newHeight = ref.offsetHeight;\n\t\tconst newWidth = ref.offsetWidth;\n\n\t\treturn ((oldHeight !== newHeight) || oldWidth !== newWidth);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst listenerObject = CustomResize.resizeListeners.get(ref);\n\t\tconst callbacks = listenerObject ? listenerObject.callbacks : [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!listenerObject || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tCustomResize.resizeListeners.set(ref, Object.assign(listenerObject, { callbacks: filteredCallbacks }));\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tlistenerObject.callbacks = null;\n\t\t\tCustomResize.resizeListeners.delete(ref);\n\t\t}\n\n\t\tif (CustomResize.resizeListeners.size === 0) {\n\t\t\tCustomResize.initialized = false;\n\t\t\tclearInterval(CustomResize.resizeInterval);\n\t\t}\n\t}\n}\n\nexport default CustomResize;\n"]},"metadata":{},"sourceType":"module"}