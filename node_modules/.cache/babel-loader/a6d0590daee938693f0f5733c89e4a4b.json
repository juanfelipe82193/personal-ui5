{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport { getCalendarType } from \"@ui5/webcomponents-base/dist/config/CalendarType.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport LocaleData from \"@ui5/webcomponents-localization/dist/LocaleData.js\";\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport CalendarType from \"@ui5/webcomponents-base/dist/types/CalendarType.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { isShow } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getRTL } from \"@ui5/webcomponents-base/dist/config/RTL.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/appointment-2.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/decline.js\";\nimport { DATEPICKER_OPEN_ICON_TITLE, DATEPICKER_DATE_ACC_TEXT, INPUT_SUGGESTIONS_TITLE } from \"./generated/i18n/i18n-defaults.js\";\nimport Icon from \"./Icon.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport Calendar from \"./Calendar.js\";\nimport Input from \"./Input.js\";\nimport InputType from \"./types/InputType.js\";\nimport DatePickerTemplate from \"./generated/templates/DatePickerTemplate.lit.js\";\nimport DatePickerPopoverTemplate from \"./generated/templates/DatePickerPopoverTemplate.lit.js\"; // default calendar for bundling\n\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\"; // Styles\n\nimport datePickerCss from \"./generated/themes/DatePicker.css.js\";\nimport datePickerPopoverCss from \"./generated/themes/DatePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-datepicker\",\n  properties:\n  /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */\n  {\n    /**\n     * Defines a formatted date value.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    value: {\n      type: String\n    },\n\n    /**\n     * Defines the value state of the <code>ui5-datepicker</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Determines the format, displayed in the input field.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    formatPattern: {\n      type: String\n    },\n\n    /**\n     * Determines the minimum date available for selection.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @since 1.0.0-rc.6\n     * @public\n     */\n    minDate: {\n      type: String\n    },\n\n    /**\n     * Determines the maximum date available for selection.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @since 1.0.0-rc.6\n     * @public\n     */\n    maxDate: {\n      type: String\n    },\n\n    /**\n     * Determines the calendar type.\n     * The input value is formated according to the calendar type\n     * and the picker shows the months and years from the specified calendar.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>Gregorian</code></li>\n     * <li><code>Islamic</code></li>\n     * <li><code>Japanese</code></li>\n     * <li><code>Buddhist</code></li>\n     * <li><code>Persian</code></li>\n     * </ul>\n     *\n     * @type {CalendarType}\n     * @defaultvalue \"Gregorian\"\n     * @public\n     */\n    primaryCalendarType: {\n      type: CalendarType\n    },\n\n    /**\n     * Determines whether the <code>ui5-datepicker</code> is displayed as disabled.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Determines whether the <code>ui5-datepicker</code> is displayed as read-only.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * Defines a short hint, intended to aid the user with data entry when the\n     * <code>ui5-datepicker</code> has no value.\n     *\n     * <br><br>\n     * <b>Note:</b> When no placeholder is set, the format pattern is displayed as a placeholder.\n     * Passing an empty string as the value of this property will make the <code>ui5-datepicker</code> appear empty - without placeholder or format pattern.\n     *\n     * @type {string}\n     * @defaultvalue undefined\n     * @public\n     */\n    placeholder: {\n      type: String,\n      defaultValue: undefined\n    },\n\n    /**\n     * Determines the name with which the <code>ui5-datepicker</code> will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the <code>ui5-datepicker</code> so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n    _isPickerOpen: {\n      type: Boolean,\n      noAttribute: true\n    },\n    _respPopoverConfig: {\n      type: Object\n    },\n    _calendar: {\n      type: Object\n    }\n  },\n  events:\n  /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */\n  {\n    /**\n     * Fired when the input operation has finished by pressing Enter or on focusout.\n     *\n     * @event\n     * @public\n    */\n    change: {},\n\n    /**\n     * Fired when the value of the <code>ui5-datepicker</code> is changed at each key stroke.\n     *\n     * @event\n     * @public\n    */\n    input: {}\n  }\n};\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-datepicker</code> component provides an input field with assigned calendar which opens on user action.\n * The <code>ui5-datepicker</code> allows users to select a localized date using touch,\n * mouse, or keyboard input. It consists of two parts: the date input field and the\n * date picker.\n *\n * <h3>Usage</h3>\n *\n * The user can enter a date by:\n * <ul>\n * <li>Using the calendar that opens in a popup</li>\n * <li>Typing it in directly in the input field</li>\n * </ul>\n * <br><br>\n * When the user makes an entry and chooses the enter key, the calendar shows the corresponding date.\n * When the user directly triggers the calendar display, the actual date is displayed.\n *\n * <h3>Formatting</h3>\n *\n * If a date is entered by typing it into\n * the input field, it must fit to the used date format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"http://unicode.org/reports/tr35/#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * For example, if the <code>format-pattern</code> is \"yyyy-MM-dd\",\n * a valid value string is \"2015-07-30\" and the same is displayed in the input.\n *\n * <h3>Keyboard Handling</h3>\n * The <code>ui5-datepicker</code> provides advanced keyboard handling.\n * If the <code>ui5-datepicker</code> is focused,\n * you can open or close the drop-down by pressing <code>F4</code>, <code>ALT+UP</code> or <code>ALT+DOWN</code> keys.\n * Once the drop-down is opened, you can use the <code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code> arrow keys\n * to navigate through the dates and select one by pressing the <code>Space</code> or <code>Enter</code> keys. Moreover you can\n * use TAB to reach the buttons for changing month and year.\n * <br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DatePicker\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DatePicker\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-datepicker\n * @public\n */\n\nclass DatePicker extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return DatePickerTemplate;\n  }\n\n  static get staticAreaTemplate() {\n    return DatePickerPopoverTemplate;\n  }\n\n  static get styles() {\n    return datePickerCss;\n  }\n\n  static get staticAreaStyles() {\n    return [datePickerPopoverCss, ResponsivePopoverCommonCss];\n  }\n\n  constructor() {\n    super();\n    this._respPopoverConfig = {\n      allowTargetOverlap: true,\n      stayOpenOnScroll: true,\n      afterClose: () => {\n        this._isPickerOpen = false;\n\n        if (isPhone()) {\n          // close device's keyboard and prevent further typing\n          this.blur();\n        } else if (this._focusInputAfterClose) {\n          this._getInput().focus();\n\n          this._focusInputAfterClose = false;\n        }\n\n        const calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n\n        if (calendar) {\n          calendar._hideMonthPicker();\n\n          calendar._hideYearPicker();\n        }\n      },\n      afterOpen: () => {\n        const calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n\n        if (!calendar) {\n          return;\n        }\n\n        const dayPicker = calendar.shadowRoot.querySelector(`#${calendar._id}-daypicker`);\n        const selectedDay = dayPicker.shadowRoot.querySelector(\".ui5-dp-item--selected\");\n        const today = dayPicker.shadowRoot.querySelector(\".ui5-dp-item--now\");\n        let focusableDay = selectedDay || today;\n\n        if (!selectedDay && (this.minDate || this.maxDate) && !this.isInValidRange(new Date().getTime())) {\n          focusableDay = this.findFirstFocusableDay(dayPicker);\n        }\n\n        if (this._focusInputAfterOpen) {\n          this._focusInputAfterOpen = false;\n\n          this._getInput().focus();\n        } else if (focusableDay) {\n          focusableDay.focus();\n          let focusableDayIdx = parseInt(focusableDay.getAttribute(\"data-sap-index\"));\n          const focusableItem = dayPicker.focusableDays.find(item => parseInt(item._index) === focusableDayIdx);\n          focusableDayIdx = focusableItem ? dayPicker.focusableDays.indexOf(focusableItem) : focusableDayIdx;\n          dayPicker._itemNav.current = focusableDayIdx;\n\n          dayPicker._itemNav.update();\n        }\n      }\n    };\n    this._calendar = {\n      onSelectedDatesChange: this._handleCalendarChange.bind(this),\n      selectedDates: []\n    };\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n  }\n\n  findFirstFocusableDay(daypicker) {\n    const today = new Date();\n\n    if (!this.isInValidRange(today.getTime())) {\n      const focusableItems = Array.from(daypicker.shadowRoot.querySelectorAll(\".ui5-dp-item\"));\n      return focusableItems.filter(x => !x.classList.contains(\"ui5-dp-item--disabled\"))[0];\n    }\n  }\n\n  onBeforeRendering() {\n    this._calendar.primaryCalendarType = this._primaryCalendarType;\n    this._calendar.formatPattern = this._formatPattern;\n\n    if (this.minDate && !this.isValid(this.minDate)) {\n      this.minDate = null;\n      console.warn(`In order for the \"minDate\" property to have effect, you should enter valid date format`); // eslint-disable-line\n    }\n\n    if (this.maxDate && !this.isValid(this.maxDate)) {\n      this.maxDate = null;\n      console.warn(`In order for the \"maxDate\" property to have effect, you should enter valid date format`); // eslint-disable-line\n    }\n\n    if (this.isValid(this.value) && this.isInValidRange(this._getTimeStampFromString(this.value))) {\n      this._changeCalendarSelection();\n    } else {\n      this._calendar.selectedDates = [];\n    }\n\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this);\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n\n    if (this.minDate) {\n      this._calendar.minDate = this.minDate;\n    }\n\n    if (this.maxDate) {\n      this._calendar.maxDate = this.maxDate;\n    }\n  }\n\n  _getTimeStampFromString(value) {\n    if (this.getFormat().parse(value)) {\n      const jsDate = new Date(this.getFormat().parse(value).getFullYear(), this.getFormat().parse(value).getMonth(), this.getFormat().parse(value).getDate());\n      const oCalDate = CalendarDate.fromTimestamp(jsDate.getTime(), this._primaryCalendarType);\n      return oCalDate.valueOf();\n    }\n\n    return undefined;\n  }\n\n  _onkeydown(event) {\n    if (isShow(event)) {\n      this.togglePicker();\n\n      this._getInput().focus();\n    }\n  }\n\n  _getInput() {\n    return this.shadowRoot.querySelector(\"ui5-input\");\n  }\n\n  _handleInputChange() {\n    let nextValue = this._getInput().getInputValue();\n\n    const emptyValue = nextValue === \"\";\n    const isValid = emptyValue || this.isValid(nextValue);\n    const isInValidRange = this.isInValidRange(this._getTimeStampFromString(nextValue));\n\n    if (isValid && isInValidRange) {\n      nextValue = this.normalizeValue(nextValue);\n      this.valueState = ValueState.None;\n    } else {\n      this.valueState = ValueState.Error;\n    }\n\n    this.value = nextValue;\n    this.fireEvent(\"change\", {\n      value: nextValue,\n      valid: isValid\n    }); // Angular two way data binding\n\n    this.fireEvent(\"value-changed\", {\n      value: nextValue,\n      valid: isValid\n    });\n  }\n\n  _handleInputLiveChange() {\n    const nextValue = this._getInput().getInputValue();\n\n    const emptyValue = nextValue === \"\";\n    const isValid = emptyValue || this.isValid(nextValue) && this.isInValidRange(this._getTimeStampFromString(nextValue));\n    this.value = nextValue;\n    this.fireEvent(\"input\", {\n      value: nextValue,\n      valid: isValid\n    });\n  }\n\n  _click(event) {\n    if (isPhone()) {\n      this.responsivePopover.open(this);\n      event.preventDefault(); // prevent immediate selection of any item\n    }\n  }\n  /**\n   * Checks if a value is valid against the current date format of the DatePicker.\n   * @param {string} value A value to be tested against the current date format\n   * @public\n   */\n\n\n  isValid(value = \"\") {\n    return !!(value && this.getFormat().parse(value));\n  }\n  /**\n   * Checks if a date is in range between minimum and maximum date.\n   * @param {object} value\n   * @public\n   */\n\n\n  isInValidRange(value = \"\") {\n    const pickedDate = new Date(value),\n          minDate = this._minDate && new Date(this._minDate),\n          maxDate = this._maxDate && new Date(this._maxDate);\n\n    if (minDate && maxDate) {\n      if (minDate <= pickedDate && maxDate >= pickedDate) {\n        return true;\n      }\n    } else if (minDate && !maxDate) {\n      if (minDate <= pickedDate) {\n        return true;\n      }\n    } else if (maxDate && !minDate) {\n      if (maxDate >= pickedDate) {\n        return true;\n      }\n    } else if (!maxDate && !minDate) {\n      return true;\n    }\n\n    return false;\n  } // because the parser understands more than one format\n  // but we need values in one format\n\n\n  normalizeValue(value) {\n    if (value === \"\") {\n      return value;\n    }\n\n    return this.getFormat().format(this.getFormat().parse(value));\n  }\n\n  get validValue() {\n    if (this.isValid(this.value)) {\n      return this.value;\n    }\n\n    return this.getFormat().format(new Date());\n  }\n\n  get _calendarDate() {\n    const millisecondsUTC = this.getFormat().parse(this.validValue, true).getTime();\n    const oCalDate = CalendarDate.fromTimestamp(millisecondsUTC - millisecondsUTC % (24 * 60 * 60 * 1000), this._primaryCalendarType);\n    return oCalDate;\n  }\n\n  get _primaryCalendarType() {\n    return this.primaryCalendarType || getCalendarType() || LocaleData.getInstance(getLocale()).getPreferredCalendarType();\n  }\n\n  get _formatPattern() {\n    return this.formatPattern || \"medium\"; // get from config\n  }\n\n  get _isPattern() {\n    return this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n  }\n\n  get _displayFormat() {\n    return this.getFormat().oFormatOptions.pattern;\n  }\n\n  get _placeholder() {\n    return this.placeholder !== undefined ? this.placeholder : this._displayFormat;\n  }\n\n  get _headerTitleText() {\n    return this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n  }\n\n  get phone() {\n    return isPhone();\n  }\n\n  get showHeader() {\n    return this.phone;\n  }\n\n  get showFooter() {\n    return this.phone;\n  }\n\n  getFormat() {\n    if (this._isPattern) {\n      this._oDateFormat = DateFormat.getInstance({\n        pattern: this._formatPattern,\n        calendarType: this._primaryCalendarType\n      });\n    } else {\n      this._oDateFormat = DateFormat.getInstance({\n        style: this._formatPattern,\n        calendarType: this._primaryCalendarType\n      });\n    }\n\n    return this._oDateFormat;\n  }\n\n  get accInfo() {\n    return {\n      \"ariaDescribedBy\": `${this._id}-date`,\n      \"ariaHasPopup\": \"true\",\n      \"ariaAutoComplete\": \"none\",\n      \"role\": \"combobox\",\n      \"ariaOwns\": `${this._id}-responsive-popover`,\n      \"ariaExpanded\": this.isOpen(),\n      \"ariaDescription\": this.dateAriaDescription\n    };\n  }\n\n  get _maxDate() {\n    if (this.maxDate) {\n      return this._getTimeStampFromString(this.maxDate);\n    }\n\n    return this.maxDate;\n  }\n\n  get _minDate() {\n    if (this.minDate) {\n      return this._getTimeStampFromString(this.minDate);\n    }\n\n    return this.minDate;\n  }\n\n  get openIconTitle() {\n    return this.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);\n  }\n\n  get openIconName() {\n    return \"appointment-2\";\n  }\n\n  get dateAriaDescription() {\n    return this.i18nBundle.getText(DATEPICKER_DATE_ACC_TEXT);\n  }\n\n  get dir() {\n    return getRTL() ? \"rtl\" : \"ltr\";\n  }\n  /**\n   * Defines whether the dialog on mobile should have header\n   * @private\n   */\n\n\n  get _shouldHideHeader() {\n    return false;\n  }\n\n  async _respPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(\"ui5-responsive-popover\");\n  }\n\n  _canOpenPicker() {\n    return !this.disabled && !this.readonly;\n  }\n\n  _handleCalendarChange(event) {\n    const iNewValue = event.detail.dates && event.detail.dates[0];\n\n    if (this._calendar.selectedDates.indexOf(iNewValue) !== -1) {\n      this.closePicker();\n      return false;\n    }\n\n    const fireChange = this._handleCalendarSelectedDatesChange(event, iNewValue);\n\n    if (fireChange) {\n      this.fireEvent(\"change\", {\n        value: this.value,\n        valid: true\n      }); // Angular two way data binding\n\n      this.fireEvent(\"value-changed\", {\n        value: this.value,\n        valid: true\n      });\n    }\n\n    this.closePicker();\n  }\n\n  _handleCalendarSelectedDatesChange(event, newValue) {\n    this._updateValueCalendarSelectedDatesChange(newValue);\n\n    this._calendar.timestamp = newValue;\n    this._calendar.selectedDates = event.detail.dates;\n    this._focusInputAfterClose = true;\n\n    if (this.isInValidRange(this._getTimeStampFromString(this.value))) {\n      this.valueState = ValueState.None;\n    } else {\n      this.valueState = ValueState.Error;\n    }\n\n    return true;\n  }\n\n  _updateValueCalendarSelectedDatesChange(newValue) {\n    this.value = this.getFormat().format(new Date(CalendarDate.fromTimestamp(newValue * 1000, this._primaryCalendarType).valueOf()), true);\n  }\n  /**\n   * Closes the picker.\n   * @public\n   */\n\n\n  closePicker() {\n    this.responsivePopover.close();\n  }\n  /**\n   * Opens the picker.\n   * @param {object} options A JSON object with additional configuration.<br>\n   * <code>{ focusInput: true }</code> By default, the focus goes in the picker after opening it.\n   * Specify this option to focus the input field.\n   * @public\n   */\n\n\n  async openPicker(options) {\n    this._isPickerOpen = true;\n    this.responsivePopover = await this._respPopover();\n\n    this._changeCalendarSelection();\n\n    if (options && options.focusInput) {\n      this._focusInputAfterOpen = true;\n    }\n\n    this.responsivePopover.open(this);\n  }\n\n  togglePicker() {\n    if (this.isOpen()) {\n      this.closePicker();\n    } else if (this._canOpenPicker()) {\n      this.updateStaticAreaItemContentDensity();\n      this.openPicker();\n    }\n  }\n\n  _changeCalendarSelection(focusTimestamp) {\n    if (this._calendarDate.getYear() < 1) {\n      // 0 is a valid year, but we cannot display it\n      return;\n    }\n\n    const oCalDate = this._calendarDate;\n    const timestamp = focusTimestamp || oCalDate.valueOf() / 1000;\n    this._calendar = Object.assign({}, this._calendar);\n    this._calendar.timestamp = timestamp;\n\n    if (this.value) {\n      this._calendar.selectedDates = [timestamp];\n    }\n  }\n  /**\n   * Checks if the picker is open.\n   * @returns {Boolean} true if the picker is open, false otherwise\n   * @public\n   */\n\n\n  isOpen() {\n    return !!this._isPickerOpen;\n  }\n  /**\n   * Gets some semantic details about an event originated in the control.\n   * @param {*} event An event object\n   * @returns {Object} Semantic details\n   */\n\n\n  getSemanticTargetInfo(event) {\n    const oDomTarget = getDomTarget(event);\n    let isInput = false;\n\n    if (oDomTarget && oDomTarget.className.indexOf(\"ui5-input-inner\") > -1) {\n      isInput = true;\n    }\n\n    return {\n      isInput\n    };\n  }\n  /**\n   * Currently selected date represented as JavaScript Date instance.\n   *\n   * @readonly\n   * @type { Date }\n   * @public\n   */\n\n\n  get dateValue() {\n    return this.getFormat().parse(this.value);\n  }\n\n  get styles() {\n    return {\n      main: {\n        width: \"100%\"\n      }\n    };\n  }\n\n  get type() {\n    return InputType.Text;\n  }\n\n  static async onDefine() {\n    await Promise.all([fetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()), Icon.define(), ResponsivePopover.define(), Calendar.define(), Input.define(), fetchI18nBundle(\"@ui5/webcomponents\")]);\n  }\n\n}\n\nconst getDomTarget = event => {\n  let target, composedPath;\n\n  if (typeof event.composedPath === \"function\") {\n    composedPath = event.composedPath();\n  }\n\n  if (Array.isArray(composedPath) && composedPath.length) {\n    target = composedPath[0];\n  }\n\n  return target;\n};\n\nDatePicker.define();\nexport default DatePicker;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/DatePicker.js"],"names":["UI5Element","litRender","fetchCldr","getCalendarType","getLocale","getFeature","LocaleData","DateFormat","CalendarType","CalendarDate","ValueState","isShow","getRTL","isPhone","fetchI18nBundle","getI18nBundle","DATEPICKER_OPEN_ICON_TITLE","DATEPICKER_DATE_ACC_TEXT","INPUT_SUGGESTIONS_TITLE","Icon","ResponsivePopover","Calendar","Input","InputType","DatePickerTemplate","DatePickerPopoverTemplate","datePickerCss","datePickerPopoverCss","ResponsivePopoverCommonCss","metadata","tag","properties","value","type","String","valueState","defaultValue","None","formatPattern","minDate","maxDate","primaryCalendarType","disabled","Boolean","readonly","placeholder","undefined","name","_isPickerOpen","noAttribute","_respPopoverConfig","Object","_calendar","events","change","input","DatePicker","render","template","staticAreaTemplate","styles","staticAreaStyles","constructor","allowTargetOverlap","stayOpenOnScroll","afterClose","blur","_focusInputAfterClose","_getInput","focus","calendar","responsivePopover","querySelector","_id","_hideMonthPicker","_hideYearPicker","afterOpen","dayPicker","shadowRoot","selectedDay","today","focusableDay","isInValidRange","Date","getTime","findFirstFocusableDay","_focusInputAfterOpen","focusableDayIdx","parseInt","getAttribute","focusableItem","focusableDays","find","item","_index","indexOf","_itemNav","current","update","onSelectedDatesChange","_handleCalendarChange","bind","selectedDates","i18nBundle","daypicker","focusableItems","Array","from","querySelectorAll","filter","x","classList","contains","onBeforeRendering","_primaryCalendarType","_formatPattern","isValid","console","warn","_getTimeStampFromString","_changeCalendarSelection","FormSupport","syncNativeHiddenInput","getFormat","parse","jsDate","getFullYear","getMonth","getDate","oCalDate","fromTimestamp","valueOf","_onkeydown","event","togglePicker","_handleInputChange","nextValue","getInputValue","emptyValue","normalizeValue","Error","fireEvent","valid","_handleInputLiveChange","_click","open","preventDefault","pickedDate","_minDate","_maxDate","format","validValue","_calendarDate","millisecondsUTC","getInstance","getPreferredCalendarType","_isPattern","_displayFormat","oFormatOptions","pattern","_placeholder","_headerTitleText","getText","phone","showHeader","showFooter","_oDateFormat","calendarType","style","accInfo","isOpen","dateAriaDescription","openIconTitle","openIconName","dir","_shouldHideHeader","_respPopover","staticAreaItem","getStaticAreaItemDomRef","_canOpenPicker","iNewValue","detail","dates","closePicker","fireChange","_handleCalendarSelectedDatesChange","newValue","_updateValueCalendarSelectedDatesChange","timestamp","close","openPicker","options","focusInput","updateStaticAreaItemContentDensity","focusTimestamp","getYear","assign","getSemanticTargetInfo","oDomTarget","getDomTarget","isInput","className","dateValue","main","width","Text","onDefine","Promise","all","getLanguage","getRegion","getScript","define","target","composedPath","isArray","length"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { fetchCldr } from \"@ui5/webcomponents-base/dist/asset-registries/LocaleData.js\";\nimport { getCalendarType } from \"@ui5/webcomponents-base/dist/config/CalendarType.js\";\nimport getLocale from \"@ui5/webcomponents-base/dist/locale/getLocale.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport LocaleData from \"@ui5/webcomponents-localization/dist/LocaleData.js\";\nimport DateFormat from \"@ui5/webcomponents-localization/dist/DateFormat.js\";\nimport CalendarType from \"@ui5/webcomponents-base/dist/types/CalendarType.js\";\nimport CalendarDate from \"@ui5/webcomponents-localization/dist/dates/CalendarDate.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { isShow } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport { getRTL } from \"@ui5/webcomponents-base/dist/config/RTL.js\";\nimport { isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/appointment-2.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/decline.js\";\nimport { DATEPICKER_OPEN_ICON_TITLE, DATEPICKER_DATE_ACC_TEXT, INPUT_SUGGESTIONS_TITLE } from \"./generated/i18n/i18n-defaults.js\";\nimport Icon from \"./Icon.js\";\nimport ResponsivePopover from \"./ResponsivePopover.js\";\nimport Calendar from \"./Calendar.js\";\nimport Input from \"./Input.js\";\nimport InputType from \"./types/InputType.js\";\nimport DatePickerTemplate from \"./generated/templates/DatePickerTemplate.lit.js\";\nimport DatePickerPopoverTemplate from \"./generated/templates/DatePickerPopoverTemplate.lit.js\";\n\n// default calendar for bundling\nimport \"@ui5/webcomponents-localization/dist/features/calendar/Gregorian.js\";\n\n// Styles\nimport datePickerCss from \"./generated/themes/DatePicker.css.js\";\nimport datePickerPopoverCss from \"./generated/themes/DatePickerPopover.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-datepicker\",\n\tproperties: /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */ {\n\t\t/**\n\t\t * Defines a formatted date value.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the <code>ui5-datepicker</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Determines the format, displayed in the input field.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tformatPattern: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Determines the minimum date available for selection.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.0.0-rc.6\n\t\t * @public\n\t\t */\n\t\tminDate: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Determines the maximum date available for selection.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @since 1.0.0-rc.6\n\t\t * @public\n\t\t */\n\t\tmaxDate: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Determines the calendar type.\n\t\t * The input value is formated according to the calendar type\n\t\t * and the picker shows the months and years from the specified calendar.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>Gregorian</code></li>\n\t\t * <li><code>Islamic</code></li>\n\t\t * <li><code>Japanese</code></li>\n\t\t * <li><code>Buddhist</code></li>\n\t\t * <li><code>Persian</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {CalendarType}\n\t\t * @defaultvalue \"Gregorian\"\n\t\t * @public\n\t\t */\n\t\tprimaryCalendarType: {\n\t\t\ttype: CalendarType,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the <code>ui5-datepicker</code> is displayed as disabled.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Determines whether the <code>ui5-datepicker</code> is displayed as read-only.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines a short hint, intended to aid the user with data entry when the\n\t\t * <code>ui5-datepicker</code> has no value.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When no placeholder is set, the format pattern is displayed as a placeholder.\n\t\t * Passing an empty string as the value of this property will make the <code>ui5-datepicker</code> appear empty - without placeholder or format pattern.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue undefined\n\t\t * @public\n\t\t */\n\t\tplaceholder: {\n\t\t\ttype: String,\n\t\t\tdefaultValue: undefined,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the <code>ui5-datepicker</code> will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the <code>ui5-datepicker</code> so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t_isPickerOpen: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\n\t\t_respPopoverConfig: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_calendar: {\n\t\t\ttype: Object,\n\t\t},\n\t},\n\tevents: /** @lends  sap.ui.webcomponents.main.DatePicker.prototype */ {\n\n\t\t/**\n\t\t * Fired when the input operation has finished by pressing Enter or on focusout.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t*/\n\t\tchange: {},\n\n\t\t/**\n\t\t * Fired when the value of the <code>ui5-datepicker</code> is changed at each key stroke.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t*/\n\t\tinput: {},\n\t},\n};\n\n/**\n * @class\n *\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-datepicker</code> component provides an input field with assigned calendar which opens on user action.\n * The <code>ui5-datepicker</code> allows users to select a localized date using touch,\n * mouse, or keyboard input. It consists of two parts: the date input field and the\n * date picker.\n *\n * <h3>Usage</h3>\n *\n * The user can enter a date by:\n * <ul>\n * <li>Using the calendar that opens in a popup</li>\n * <li>Typing it in directly in the input field</li>\n * </ul>\n * <br><br>\n * When the user makes an entry and chooses the enter key, the calendar shows the corresponding date.\n * When the user directly triggers the calendar display, the actual date is displayed.\n *\n * <h3>Formatting</h3>\n *\n * If a date is entered by typing it into\n * the input field, it must fit to the used date format.\n * <br><br>\n * Supported format options are pattern-based on Unicode LDML Date Format notation.\n * For more information, see <ui5-link target=\"_blank\" href=\"http://unicode.org/reports/tr35/#Date_Field_Symbol_Table\" class=\"api-table-content-cell-link\">UTS #35: Unicode Locale Data Markup Language</ui5-link>.\n * <br><br>\n * For example, if the <code>format-pattern</code> is \"yyyy-MM-dd\",\n * a valid value string is \"2015-07-30\" and the same is displayed in the input.\n *\n * <h3>Keyboard Handling</h3>\n * The <code>ui5-datepicker</code> provides advanced keyboard handling.\n * If the <code>ui5-datepicker</code> is focused,\n * you can open or close the drop-down by pressing <code>F4</code>, <code>ALT+UP</code> or <code>ALT+DOWN</code> keys.\n * Once the drop-down is opened, you can use the <code>UP</code>, <code>DOWN</code>, <code>LEFT</code>, <code>RIGHT</code> arrow keys\n * to navigate through the dates and select one by pressing the <code>Space</code> or <code>Enter</code> keys. Moreover you can\n * use TAB to reach the buttons for changing month and year.\n * <br>\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/DatePicker\";</code>\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.DatePicker\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-datepicker\n * @public\n */\nclass DatePicker extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn DatePickerTemplate;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn DatePickerPopoverTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn datePickerCss;\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [datePickerPopoverCss, ResponsivePopoverCommonCss];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._respPopoverConfig = {\n\t\t\tallowTargetOverlap: true,\n\t\t\tstayOpenOnScroll: true,\n\t\t\tafterClose: () => {\n\t\t\t\tthis._isPickerOpen = false;\n\n\t\t\t\tif (isPhone()) {\n\t\t\t\t\t// close device's keyboard and prevent further typing\n\t\t\t\t\tthis.blur();\n\t\t\t\t} else if (this._focusInputAfterClose) {\n\t\t\t\t\tthis._getInput().focus();\n\t\t\t\t\tthis._focusInputAfterClose = false;\n\t\t\t\t}\n\n\t\t\t\tconst calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n\t\t\t\tif (calendar) {\n\t\t\t\t\tcalendar._hideMonthPicker();\n\t\t\t\t\tcalendar._hideYearPicker();\n\t\t\t\t}\n\t\t\t},\n\t\t\tafterOpen: () => {\n\t\t\t\tconst calendar = this.responsivePopover.querySelector(`#${this._id}-calendar`);\n\n\t\t\t\tif (!calendar) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst dayPicker = calendar.shadowRoot.querySelector(`#${calendar._id}-daypicker`);\n\t\t\t\tconst selectedDay = dayPicker.shadowRoot.querySelector(\".ui5-dp-item--selected\");\n\t\t\t\tconst today = dayPicker.shadowRoot.querySelector(\".ui5-dp-item--now\");\n\t\t\t\tlet focusableDay = selectedDay || today;\n\t\t\t\tif (!selectedDay && (this.minDate || this.maxDate) && !this.isInValidRange((new Date().getTime()))) {\n\t\t\t\t\tfocusableDay = this.findFirstFocusableDay(dayPicker);\n\t\t\t\t}\n\n\t\t\t\tif (this._focusInputAfterOpen) {\n\t\t\t\t\tthis._focusInputAfterOpen = false;\n\t\t\t\t\tthis._getInput().focus();\n\t\t\t\t} else if (focusableDay) {\n\t\t\t\t\tfocusableDay.focus();\n\n\t\t\t\t\tlet focusableDayIdx = parseInt(focusableDay.getAttribute(\"data-sap-index\"));\n\t\t\t\t\tconst focusableItem = dayPicker.focusableDays.find(item => parseInt(item._index) === focusableDayIdx);\n\t\t\t\t\tfocusableDayIdx = focusableItem ? dayPicker.focusableDays.indexOf(focusableItem) : focusableDayIdx;\n\n\t\t\t\t\tdayPicker._itemNav.current = focusableDayIdx;\n\t\t\t\t\tdayPicker._itemNav.update();\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\tthis._calendar = {\n\t\t\tonSelectedDatesChange: this._handleCalendarChange.bind(this),\n\t\t\tselectedDates: [],\n\t\t};\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\t}\n\n\tfindFirstFocusableDay(daypicker) {\n\t\tconst today = new Date();\n\t\tif (!this.isInValidRange(today.getTime())) {\n\t\t\tconst focusableItems = Array.from(daypicker.shadowRoot.querySelectorAll(\".ui5-dp-item\"));\n\t\t\treturn focusableItems.filter(x => !x.classList.contains(\"ui5-dp-item--disabled\"))[0];\n\t\t}\n\t}\n\n\tonBeforeRendering() {\n\t\tthis._calendar.primaryCalendarType = this._primaryCalendarType;\n\t\tthis._calendar.formatPattern = this._formatPattern;\n\n\t\tif (this.minDate && !this.isValid(this.minDate)) {\n\t\t\tthis.minDate = null;\n\t\t\tconsole.warn(`In order for the \"minDate\" property to have effect, you should enter valid date format`); // eslint-disable-line\n\t\t}\n\n\t\tif (this.maxDate && !this.isValid(this.maxDate)) {\n\t\t\tthis.maxDate = null;\n\t\t\tconsole.warn(`In order for the \"maxDate\" property to have effect, you should enter valid date format`); // eslint-disable-line\n\t\t}\n\t\tif (this.isValid(this.value) && this.isInValidRange(this._getTimeStampFromString(this.value))) {\n\t\t\tthis._changeCalendarSelection();\n\t\t} else {\n\t\t\tthis._calendar.selectedDates = [];\n\t\t}\n\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this);\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\n\t\tif (this.minDate) {\n\t\t\tthis._calendar.minDate = this.minDate;\n\t\t}\n\n\t\tif (this.maxDate) {\n\t\t\tthis._calendar.maxDate = this.maxDate;\n\t\t}\n\t}\n\n\t_getTimeStampFromString(value) {\n\t\tif (this.getFormat().parse(value)) {\n\t\t\tconst jsDate = new Date(this.getFormat().parse(value).getFullYear(), this.getFormat().parse(value).getMonth(), this.getFormat().parse(value).getDate());\n\t\t\tconst oCalDate = CalendarDate.fromTimestamp(jsDate.getTime(), this._primaryCalendarType);\n\t\t\treturn oCalDate.valueOf();\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isShow(event)) {\n\t\t\tthis.togglePicker();\n\t\t\tthis._getInput().focus();\n\t\t}\n\t}\n\n\t_getInput() {\n\t\treturn this.shadowRoot.querySelector(\"ui5-input\");\n\t}\n\n\t_handleInputChange() {\n\t\tlet nextValue = this._getInput().getInputValue();\n\t\tconst emptyValue = nextValue === \"\";\n\t\tconst isValid = emptyValue || this.isValid(nextValue);\n\t\tconst isInValidRange = this.isInValidRange(this._getTimeStampFromString(nextValue));\n\n\t\tif (isValid && isInValidRange) {\n\t\t\tnextValue = this.normalizeValue(nextValue);\n\t\t\tthis.valueState = ValueState.None;\n\t\t} else {\n\t\t\tthis.valueState = ValueState.Error;\n\t\t}\n\n\n\t\tthis.value = nextValue;\n\t\tthis.fireEvent(\"change\", { value: nextValue, valid: isValid });\n\t\t// Angular two way data binding\n\t\tthis.fireEvent(\"value-changed\", { value: nextValue, valid: isValid });\n\t}\n\n\t_handleInputLiveChange() {\n\t\tconst nextValue = this._getInput().getInputValue();\n\t\tconst emptyValue = nextValue === \"\";\n\t\tconst isValid = emptyValue || (this.isValid(nextValue) && this.isInValidRange(this._getTimeStampFromString(nextValue)));\n\n\t\tthis.value = nextValue;\n\t\tthis.fireEvent(\"input\", { value: nextValue, valid: isValid });\n\t}\n\n\t_click(event) {\n\t\tif (isPhone()) {\n\t\t\tthis.responsivePopover.open(this);\n\t\t\tevent.preventDefault(); // prevent immediate selection of any item\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a value is valid against the current date format of the DatePicker.\n\t * @param {string} value A value to be tested against the current date format\n\t * @public\n\t */\n\tisValid(value = \"\") {\n\t\treturn !!(value && this.getFormat().parse(value));\n\t}\n\n\t/**\n\t * Checks if a date is in range between minimum and maximum date.\n\t * @param {object} value\n\t * @public\n\t */\n\tisInValidRange(value = \"\") {\n\t\tconst pickedDate = new Date(value),\n\t\t\tminDate = this._minDate && new Date(this._minDate),\n\t\t\tmaxDate = this._maxDate && new Date(this._maxDate);\n\n\t\tif (minDate && maxDate) {\n\t\t\tif (minDate <= pickedDate && maxDate >= pickedDate) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (minDate && !maxDate) {\n\t\t\tif (minDate <= pickedDate) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (maxDate && !minDate) {\n\t\t\tif (maxDate >= pickedDate) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (!maxDate && !minDate) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t// because the parser understands more than one format\n\t// but we need values in one format\n\tnormalizeValue(value) {\n\t\tif (value === \"\") {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn this.getFormat().format(this.getFormat().parse(value));\n\t}\n\n\tget validValue() {\n\t\tif (this.isValid(this.value)) {\n\t\t\treturn this.value;\n\t\t}\n\t\treturn this.getFormat().format(new Date());\n\t}\n\n\tget _calendarDate() {\n\t\tconst millisecondsUTC = this.getFormat().parse(this.validValue, true).getTime();\n\t\tconst oCalDate = CalendarDate.fromTimestamp(\n\t\t\tmillisecondsUTC - (millisecondsUTC % (24 * 60 * 60 * 1000)),\n\t\t\tthis._primaryCalendarType\n\t\t);\n\t\treturn oCalDate;\n\t}\n\n\tget _primaryCalendarType() {\n\t\treturn this.primaryCalendarType || getCalendarType() || LocaleData.getInstance(getLocale()).getPreferredCalendarType();\n\t}\n\n\tget _formatPattern() {\n\t\treturn this.formatPattern || \"medium\"; // get from config\n\t}\n\n\tget _isPattern() {\n\t\treturn this._formatPattern !== \"medium\" && this._formatPattern !== \"short\" && this._formatPattern !== \"long\";\n\t}\n\n\tget _displayFormat() {\n\t\treturn this.getFormat().oFormatOptions.pattern;\n\t}\n\n\tget _placeholder() {\n\t\treturn this.placeholder !== undefined ? this.placeholder : this._displayFormat;\n\t}\n\n\tget _headerTitleText() {\n\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n\t}\n\n\tget phone() {\n\t\treturn isPhone();\n\t}\n\n\tget showHeader() {\n\t\treturn this.phone;\n\t}\n\n\tget showFooter() {\n\t\treturn this.phone;\n\t}\n\n\tgetFormat() {\n\t\tif (this._isPattern) {\n\t\t\tthis._oDateFormat = DateFormat.getInstance({\n\t\t\t\tpattern: this._formatPattern,\n\t\t\t\tcalendarType: this._primaryCalendarType,\n\t\t\t});\n\t\t} else {\n\t\t\tthis._oDateFormat = DateFormat.getInstance({\n\t\t\t\tstyle: this._formatPattern,\n\t\t\t\tcalendarType: this._primaryCalendarType,\n\t\t\t});\n\t\t}\n\t\treturn this._oDateFormat;\n\t}\n\n\tget accInfo() {\n\t\treturn {\n\t\t\t\"ariaDescribedBy\": `${this._id}-date`,\n\t\t\t\"ariaHasPopup\": \"true\",\n\t\t\t\"ariaAutoComplete\": \"none\",\n\t\t\t\"role\": \"combobox\",\n\t\t\t\"ariaOwns\": `${this._id}-responsive-popover`,\n\t\t\t\"ariaExpanded\": this.isOpen(),\n\t\t\t\"ariaDescription\": this.dateAriaDescription,\n\t\t};\n\t}\n\n\tget _maxDate() {\n\t\tif (this.maxDate) {\n\t\t\treturn this._getTimeStampFromString(this.maxDate);\n\t\t}\n\t\treturn this.maxDate;\n\t}\n\n\tget _minDate() {\n\t\tif (this.minDate) {\n\t\t\treturn this._getTimeStampFromString(this.minDate);\n\t\t}\n\t\treturn this.minDate;\n\t}\n\n\tget openIconTitle() {\n\t\treturn this.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);\n\t}\n\n\tget openIconName() {\n\t\treturn \"appointment-2\";\n\t}\n\n\tget dateAriaDescription() {\n\t\treturn this.i18nBundle.getText(DATEPICKER_DATE_ACC_TEXT);\n\t}\n\n\tget dir() {\n\t\treturn getRTL() ? \"rtl\" : \"ltr\";\n\t}\n\n\t/**\n\t * Defines whether the dialog on mobile should have header\n\t * @private\n\t */\n\tget _shouldHideHeader() {\n\t\treturn false;\n\t}\n\n\tasync _respPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"ui5-responsive-popover\");\n\t}\n\n\t_canOpenPicker() {\n\t\treturn !this.disabled && !this.readonly;\n\t}\n\n\t_handleCalendarChange(event) {\n\t\tconst iNewValue = event.detail.dates && event.detail.dates[0];\n\n\t\tif (this._calendar.selectedDates.indexOf(iNewValue) !== -1) {\n\t\t\tthis.closePicker();\n\t\t\treturn false;\n\t\t}\n\n\t\tconst fireChange = this._handleCalendarSelectedDatesChange(event, iNewValue);\n\n\t\tif (fireChange) {\n\t\t\tthis.fireEvent(\"change\", { value: this.value, valid: true });\n\t\t\t// Angular two way data binding\n\t\t\tthis.fireEvent(\"value-changed\", { value: this.value, valid: true });\n\t\t}\n\n\t\tthis.closePicker();\n\t}\n\n\t_handleCalendarSelectedDatesChange(event, newValue) {\n\t\tthis._updateValueCalendarSelectedDatesChange(newValue);\n\n\t\tthis._calendar.timestamp = newValue;\n\t\tthis._calendar.selectedDates = event.detail.dates;\n\t\tthis._focusInputAfterClose = true;\n\n\t\tif (this.isInValidRange(this._getTimeStampFromString(this.value))) {\n\t\t\tthis.valueState = ValueState.None;\n\t\t} else {\n\t\t\tthis.valueState = ValueState.Error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t_updateValueCalendarSelectedDatesChange(newValue) {\n\t\tthis.value = this.getFormat().format(\n\t\t\tnew Date(CalendarDate.fromTimestamp(\n\t\t\t\tnewValue * 1000,\n\t\t\t\tthis._primaryCalendarType\n\t\t\t).valueOf()),\n\t\t\ttrue\n\t\t);\n\t}\n\n\t/**\n\t * Closes the picker.\n\t * @public\n\t */\n\tclosePicker() {\n\t\tthis.responsivePopover.close();\n\t}\n\n\t/**\n\t * Opens the picker.\n\t * @param {object} options A JSON object with additional configuration.<br>\n\t * <code>{ focusInput: true }</code> By default, the focus goes in the picker after opening it.\n\t * Specify this option to focus the input field.\n\t * @public\n\t */\n\tasync openPicker(options) {\n\t\tthis._isPickerOpen = true;\n\t\tthis.responsivePopover = await this._respPopover();\n\t\tthis._changeCalendarSelection();\n\n\t\tif (options && options.focusInput) {\n\t\t\tthis._focusInputAfterOpen = true;\n\t\t}\n\n\t\tthis.responsivePopover.open(this);\n\t}\n\n\ttogglePicker() {\n\t\tif (this.isOpen()) {\n\t\t\tthis.closePicker();\n\t\t} else if (this._canOpenPicker()) {\n\t\t\tthis.updateStaticAreaItemContentDensity();\n\t\t\tthis.openPicker();\n\t\t}\n\t}\n\n\t_changeCalendarSelection(focusTimestamp) {\n\t\tif (this._calendarDate.getYear() < 1) {\n\t\t\t// 0 is a valid year, but we cannot display it\n\t\t\treturn;\n\t\t}\n\n\t\tconst oCalDate = this._calendarDate;\n\t\tconst timestamp = focusTimestamp || oCalDate.valueOf() / 1000;\n\n\t\tthis._calendar = Object.assign({}, this._calendar);\n\t\tthis._calendar.timestamp = timestamp;\n\t\tif (this.value) {\n\t\t\tthis._calendar.selectedDates = [timestamp];\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the picker is open.\n\t * @returns {Boolean} true if the picker is open, false otherwise\n\t * @public\n\t */\n\tisOpen() {\n\t\treturn !!this._isPickerOpen;\n\t}\n\n\t/**\n\t * Gets some semantic details about an event originated in the control.\n\t * @param {*} event An event object\n\t * @returns {Object} Semantic details\n\t */\n\tgetSemanticTargetInfo(event) {\n\t\tconst oDomTarget = getDomTarget(event);\n\t\tlet isInput = false;\n\n\t\tif (oDomTarget && oDomTarget.className.indexOf(\"ui5-input-inner\") > -1) {\n\t\t\tisInput = true;\n\t\t}\n\n\t\treturn { isInput };\n\t}\n\n\t/**\n\t * Currently selected date represented as JavaScript Date instance.\n\t *\n\t * @readonly\n\t * @type { Date }\n\t * @public\n\t */\n\tget dateValue() {\n\t\treturn this.getFormat().parse(this.value);\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tmain: {\n\t\t\t\twidth: \"100%\",\n\t\t\t},\n\t\t};\n\t}\n\n\tget type() {\n\t\treturn InputType.Text;\n\t}\n\n\tstatic async onDefine() {\n\t\tawait Promise.all([\n\t\t\tfetchCldr(getLocale().getLanguage(), getLocale().getRegion(), getLocale().getScript()),\n\t\t\tIcon.define(),\n\t\t\tResponsivePopover.define(),\n\t\t\tCalendar.define(),\n\t\t\tInput.define(),\n\t\t\tfetchI18nBundle(\"@ui5/webcomponents\"),\n\t\t]);\n\t}\n}\n\nconst getDomTarget = event => {\n\tlet target,\n\t\tcomposedPath;\n\n\tif (typeof event.composedPath === \"function\") {\n\t\tcomposedPath = event.composedPath();\n\t}\n\n\tif (Array.isArray(composedPath) && composedPath.length) {\n\t\ttarget = composedPath[0];\n\t}\n\n\treturn target;\n};\n\nDatePicker.define();\n\nexport default DatePicker;\n"]},"metadata":{},"sourceType":"module"}