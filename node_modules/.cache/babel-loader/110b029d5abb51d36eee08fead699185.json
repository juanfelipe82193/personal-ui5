{"ast":null,"code":"var canvas;\nvar textHeight;\n\nvar getTextWidth = function getTextWidth(text) {\n  var font = \"normal 12pt \\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif\"; // re-use canvas object for better performance\n\n  canvas = canvas || (canvas = document.createElement('canvas'));\n  var context = canvas.getContext('2d');\n  context.font = font;\n  var metrics = context.measureText(text);\n  return metrics.width;\n};\n\nvar getTextHeight = function getTextHeight() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'M';\n  var font = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"normal 12pt \\\"72\\\",\\\"72full\\\",Arial,Helvetica,sans-serif\"; // re-use canvas object for better performance\n\n  canvas = canvas || (canvas = document.createElement('canvas'));\n  var context = canvas.getContext('2d');\n  context.font = font;\n  var metrics = context.measureText(text); // should be around 90% accurate...\n\n  return textHeight || (textHeight = metrics.width);\n};\n\nvar truncateLongLabel = function truncateLongLabel(value) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 13;\n\n  if ((value === null || value === void 0 ? void 0 : value.length) > length) {\n    return \"\".concat(value.slice(0, length - 2), \"...\");\n  }\n\n  return value;\n};\n\nexport { getTextHeight, getTextWidth, truncateLongLabel };","map":{"version":3,"sources":["../src/util/Utils.ts"],"names":["getTextWidth","font","canvas","document","context","metrics","getTextHeight","text","textHeight","truncateLongLabel","length","value"],"mappings":"AAAA,IAAA,MAAA;AACA,IAAA,UAAA;;IAEaA,YAAY,GAAG,SAAfA,YAAe,CAAA,IAAA,EAAU;AACpC,MAAMC,IAAI,GAD0B,0DACpC,CADoC,CAAA;;AAGpCC,EAAAA,MAAM,GAAGA,MAAM,KAAKA,MAAM,GAAGC,QAAQ,CAARA,aAAAA,CAA7BD,QAA6BC,CAAd,CAAfD;AACA,MAAME,OAAO,GAAGF,MAAM,CAANA,UAAAA,CAAhB,IAAgBA,CAAhB;AACAE,EAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAPA,WAAAA,CAAhB,IAAgBA,CAAhB;AACA,SAAOC,OAAO,CAAd,KAAA;AACD,C;;IAEYC,aAAa,GAAG,SAAhBA,aAAgB,GAA+E;AAAA,MAA9EC,IAA8E,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAvE,GAAuE;AAAA,MAAlEN,IAAkE,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,0DAAA,CAAA,CAC1G;;AACAC,EAAAA,MAAM,GAAGA,MAAM,KAAKA,MAAM,GAAGC,QAAQ,CAARA,aAAAA,CAA7BD,QAA6BC,CAAd,CAAfD;AACA,MAAME,OAAO,GAAGF,MAAM,CAANA,UAAAA,CAAhB,IAAgBA,CAAhB;AACAE,EAAAA,OAAO,CAAPA,IAAAA,GAAAA,IAAAA;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAPA,WAAAA,CAL0F,IAK1FA,CAAhB,CAL0G,CAAA;;AAM1G,SAAOI,UAAU,KAAKA,UAAU,GAAGH,OAAO,CAA1C,KAAiB,CAAjB;AACD,C;;IAEYI,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAgC;AAAA,MAAhBC,MAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,EAAO;;AAC/D,MAAI,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAA,KAAL,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAL,MAAA,IAAJ,MAAA,EAA4B;AAC1B,WAAA,GAAA,MAAA,CAAUC,KAAK,CAALA,KAAAA,CAAAA,CAAAA,EAAeD,MAAM,GAA/B,CAAUC,CAAV,EAAA,KAAA,CAAA;AACD;;AACD,SAAA,KAAA;AACD,C","sourcesContent":["let canvas;\nlet textHeight;\n\nexport const getTextWidth = (text) => {\n  const font = `normal 12pt \"72\",\"72full\",Arial,Helvetica,sans-serif`;\n  // re-use canvas object for better performance\n  canvas = canvas || (canvas = document.createElement('canvas'));\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text);\n  return metrics.width;\n};\n\nexport const getTextHeight = (text = 'M', font = `normal 12pt \"72\",\"72full\",Arial,Helvetica,sans-serif`) => {\n  // re-use canvas object for better performance\n  canvas = canvas || (canvas = document.createElement('canvas'));\n  const context = canvas.getContext('2d');\n  context.font = font;\n  const metrics = context.measureText(text); // should be around 90% accurate...\n  return textHeight || (textHeight = metrics.width);\n};\n\nexport const truncateLongLabel = (value: string, length = 13) => {\n  if (value?.length > length) {\n    return `${value.slice(0, length - 2)}...`;\n  }\n  return value;\n};\n"]},"metadata":{},"sourceType":"module"}