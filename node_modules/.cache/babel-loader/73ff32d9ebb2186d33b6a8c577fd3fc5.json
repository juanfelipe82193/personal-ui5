{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar fetchPromises = new Map();\nvar jsonPromises = new Map();\nvar textPromises = new Map();\n\nvar fetchTextOnce = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!fetchPromises.get(url)) {\n              fetchPromises.set(url, fetch(url));\n            }\n\n            _context.next = 3;\n            return fetchPromises.get(url);\n\n          case 3:\n            response = _context.sent;\n\n            if (!textPromises.get(url)) {\n              textPromises.set(url, response.text());\n            }\n\n            return _context.abrupt(\"return\", textPromises.get(url));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchTextOnce(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchJsonOnce = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!fetchPromises.get(url)) {\n              fetchPromises.set(url, fetch(url));\n            }\n\n            _context2.next = 3;\n            return fetchPromises.get(url);\n\n          case 3:\n            response = _context2.sent;\n\n            if (!jsonPromises.get(url)) {\n              jsonPromises.set(url, response.json());\n            }\n\n            return _context2.abrupt(\"return\", jsonPromises.get(url));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchJsonOnce(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { fetchTextOnce, fetchJsonOnce };","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/util/FetchHelper.js"],"names":["fetchPromises","Map","jsonPromises","textPromises","fetchTextOnce","url","get","set","fetch","response","text","fetchJsonOnce","json"],"mappings":";;AAAA,IAAMA,aAAa,GAAG,IAAIC,GAAJ,EAAtB;AACA,IAAMC,YAAY,GAAG,IAAID,GAAJ,EAArB;AACA,IAAME,YAAY,GAAG,IAAIF,GAAJ,EAArB;;AAEA,IAAMG,aAAa;AAAA,sEAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB,gBAAI,CAACL,aAAa,CAACM,GAAd,CAAkBD,GAAlB,CAAL,EAA6B;AAC5BL,cAAAA,aAAa,CAACO,GAAd,CAAkBF,GAAlB,EAAuBG,KAAK,CAACH,GAAD,CAA5B;AACA;;AAHoB;AAAA,mBAIEL,aAAa,CAACM,GAAd,CAAkBD,GAAlB,CAJF;;AAAA;AAIfI,YAAAA,QAJe;;AAMrB,gBAAI,CAACN,YAAY,CAACG,GAAb,CAAiBD,GAAjB,CAAL,EAA4B;AAC3BF,cAAAA,YAAY,CAACI,GAAb,CAAiBF,GAAjB,EAAsBI,QAAQ,CAACC,IAAT,EAAtB;AACA;;AARoB,6CAUdP,YAAY,CAACG,GAAb,CAAiBD,GAAjB,CAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbD,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAaA,IAAMO,aAAa;AAAA,uEAAG,kBAAMN,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB,gBAAI,CAACL,aAAa,CAACM,GAAd,CAAkBD,GAAlB,CAAL,EAA6B;AAC5BL,cAAAA,aAAa,CAACO,GAAd,CAAkBF,GAAlB,EAAuBG,KAAK,CAACH,GAAD,CAA5B;AACA;;AAHoB;AAAA,mBAIEL,aAAa,CAACM,GAAd,CAAkBD,GAAlB,CAJF;;AAAA;AAIfI,YAAAA,QAJe;;AAMrB,gBAAI,CAACP,YAAY,CAACI,GAAb,CAAiBD,GAAjB,CAAL,EAA4B;AAC3BH,cAAAA,YAAY,CAACK,GAAb,CAAiBF,GAAjB,EAAsBI,QAAQ,CAACG,IAAT,EAAtB;AACA;;AARoB,8CAUdV,YAAY,CAACI,GAAb,CAAiBD,GAAjB,CAVc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbM,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAaA,SAASP,aAAT,EAAwBO,aAAxB","sourcesContent":["const fetchPromises = new Map();\nconst jsonPromises = new Map();\nconst textPromises = new Map();\n\nconst fetchTextOnce = async url => {\n\tif (!fetchPromises.get(url)) {\n\t\tfetchPromises.set(url, fetch(url));\n\t}\n\tconst response = await fetchPromises.get(url);\n\n\tif (!textPromises.get(url)) {\n\t\ttextPromises.set(url, response.text());\n\t}\n\n\treturn textPromises.get(url);\n};\n\nconst fetchJsonOnce = async url => {\n\tif (!fetchPromises.get(url)) {\n\t\tfetchPromises.set(url, fetch(url));\n\t}\n\tconst response = await fetchPromises.get(url);\n\n\tif (!jsonPromises.get(url)) {\n\t\tjsonPromises.set(url, response.json());\n\t}\n\n\treturn jsonPromises.get(url);\n};\n\nexport { fetchTextOnce, fetchJsonOnce };\n"]},"metadata":{},"sourceType":"module"}