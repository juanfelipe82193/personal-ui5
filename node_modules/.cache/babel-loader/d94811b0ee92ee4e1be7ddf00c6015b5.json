{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _toConsumableArray from '@babel/runtime/helpers/toConsumableArray';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { useI18nBundle, useDeprecateRenderMethods } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { TableScaleWidthMode } from '@ui5/webcomponents-react/lib/TableScaleWidthMode';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/lib/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport debounce from 'lodash.debounce';\nimport React, { forwardRef, useCallback, useMemo, useRef, useState, useEffect, isValidElement } from 'react';\nimport { defaultOrderByFn, useTable, useFilters, useGroupBy, useColumnOrder, useSortBy, useExpanded, useRowSelect, useResizeColumns } from 'react-table';\nimport { CssSizeVariables, CssSizeVariablesNames } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { getRTL } from '@ui5/webcomponents-base/dist/config/RTL';\nimport '@ui5/webcomponents-icons/dist/icons/filter';\nimport '@ui5/webcomponents-icons/dist/icons/group-2';\nimport '@ui5/webcomponents-icons/dist/icons/sort-ascending';\nimport '@ui5/webcomponents-icons/dist/icons/sort-descending';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport '@ui5/webcomponents-icons/dist/icons/decline';\nimport { CLEAR_SORTING, SORT_ASCENDING, SORT_DESCENDING, UNGROUP, GROUP } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/lib/FlexBoxAlignItems';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { ListItemTypes } from '@ui5/webcomponents-react/lib/ListItemTypes';\nimport { PlacementType } from '@ui5/webcomponents-react/lib/PlacementType';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { PopoverHorizontalAlign } from '@ui5/webcomponents-react/lib/PopoverHorizontalAlign';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport { VerticalAlign } from '@ui5/webcomponents-react/lib/VerticalAlign';\nimport { Input } from '@ui5/webcomponents-react/lib/Input';\nimport { TextAlign } from '@ui5/webcomponents-react/lib/TextAlign';\nimport { Loader } from '@ui5/webcomponents-react/lib/Loader';\nimport ContentLoader from 'react-content-loader';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { CheckBox } from '@ui5/webcomponents-react/lib/CheckBox';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-down-arrow';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-right-arrow';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { GlobalStyleClasses } from '@ui5/webcomponents-react/lib/GlobalStyleClasses';\nimport { useVirtual } from 'react-virtual';\nvar styles = {\n  table: {\n    position: 'relative',\n    width: '100%',\n    maxWidth: '100%',\n    overflowY: 'hidden',\n    overflowX: 'auto',\n    height: '100%',\n    minHeight: '3rem',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal'\n  },\n  tableHeaderRow: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    position: 'relative',\n    display: 'inline-flex'\n  },\n  th: {\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    color: ThemingParameters.sapList_HeaderTextColor,\n    borderTop: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    padding: \"0 0.5rem\",\n    textAlign: 'start',\n    boxSizing: 'border-box',\n    '&:first-child': {\n      borderLeft: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n    },\n    '&:last-child': {\n      '& [data-resizer]': {\n        transform: 'translateX(0px)'\n      }\n    }\n  },\n  tbody: {\n    position: 'relative',\n    backgroundColor: ThemingParameters.sapList_Background,\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  alternateRowColor: {\n    backgroundColor: ThemingParameters.sapList_AlternatingBackground\n  },\n  tr: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    color: ThemingParameters.sapList_TextColor,\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    boxSizing: 'border-box',\n    display: 'flex',\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    },\n    '&[data-is-selected]': {\n      borderBottom: \"1px solid \".concat(ThemingParameters.sapList_SelectionBorderColor),\n      backgroundColor: ThemingParameters.sapList_SelectionBackgroundColor\n    },\n    '&[data-is-selected]:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_SelectionBackground\n    }\n  },\n  trActive: {\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    '&:active': {\n      backgroundColor: ThemingParameters.sapList_Active_Background,\n      '& $tableCell': {\n        borderRight: \"1px solid \".concat(ThemingParameters.sapList_Active_Background),\n        color: \"\".concat(ThemingParameters.sapList_Active_TextColor),\n        '--sapTextColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n  tableGroupHeader: {\n    '&$tr': {\n      backgroundColor: \"\".concat(ThemingParameters.sapList_TableGroupHeaderBackground),\n      border: \"1px solid \".concat(ThemingParameters.sapList_TableGroupHeaderBorderColor),\n      color: ThemingParameters.sapList_TextColor,\n      '& $tableCell': {\n        borderRight: 'none'\n      }\n    }\n  },\n  tableCell: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    boxSizing: 'border-box',\n    borderRight: \"1px solid \".concat(ThemingParameters.sapList_BorderColor),\n    display: 'inline-flex',\n    padding: '0 0.5rem',\n    '&:first-child': {\n      borderLeft: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n    },\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    alignItems: 'center',\n    position: 'relative',\n    '&:focus': {\n      outlineOffset: '-2px',\n      outline: \"1px dotted \".concat(ThemingParameters.sapContent_FocusColor)\n    }\n  },\n  noDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    backgroundColor: ThemingParameters.sapList_Background,\n    width: '100%',\n    boxSizing: 'border-box',\n    color: ThemingParameters.sapList_TextColor,\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n  }\n};\nvar staticStyle = {\n  fontWeight: 'normal'\n};\nvar ColumnHeaderModal = forwardRef(function (props, ref) {\n  var column = props.column,\n      onSort = props.onSort,\n      onGroupBy = props.onGroupBy;\n  var showFilter = column.canFilter;\n  var showGroup = column.canGroupBy;\n  var showSort = column.canSort;\n  var Filter = column.Filter;\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var handleSort = useCallback(function (e) {\n    var sortType = e.detail.item.getAttribute('data-sort');\n\n    switch (sortType) {\n      case 'asc':\n        column.toggleSortBy(false);\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'desc':\n        column.toggleSortBy(true);\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'clear':\n        column.clearSortBy();\n\n        if (typeof onSort === 'function') {\n          onSort(enrichEventWithDetails(e, {\n            column: column,\n            sortDirection: sortType\n          }));\n        }\n\n        break;\n\n      case 'group':\n        var willGroup = !column.isGrouped;\n        column.toggleGroupBy(willGroup);\n\n        if (typeof onGroupBy === 'function') {\n          onGroupBy(enrichEventWithDetails(e, {\n            column: column,\n            isGrouped: willGroup\n          }));\n        }\n\n        break;\n    }\n\n    if (ref.current) {\n      ref.current.close();\n    }\n  }, [column, ref, onGroupBy, onSort]);\n  var isSortedAscending = column.isSorted && column.isSortedDesc === false;\n  var isSortedDescending = column.isSorted && column.isSortedDesc === true;\n  return /*#__PURE__*/React.createElement(Popover, {\n    noArrow: true,\n    horizontalAlign: PopoverHorizontalAlign.Left,\n    placementType: PlacementType.Bottom,\n    ref: ref,\n    style: staticStyle\n  }, /*#__PURE__*/React.createElement(List, {\n    onItemClick: handleSort\n  }, isSortedAscending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemTypes.Active,\n    icon: \"decline\",\n    \"data-sort\": \"clear\"\n  }, i18nBundle.getText(CLEAR_SORTING)), showSort && !isSortedAscending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemTypes.Active,\n    icon: \"sort-ascending\",\n    \"data-sort\": \"asc\"\n  }, i18nBundle.getText(SORT_ASCENDING)), showSort && !isSortedDescending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemTypes.Active,\n    icon: \"sort-descending\",\n    \"data-sort\": \"desc\"\n  }, i18nBundle.getText(SORT_DESCENDING)), isSortedDescending && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemTypes.Active,\n    icon: \"decline\",\n    \"data-sort\": \"clear\"\n  }, i18nBundle.getText(CLEAR_SORTING)), showFilter && !column.isGrouped && /*#__PURE__*/React.createElement(FlexBox, {\n    alignItems: FlexBoxAlignItems.Center,\n    style: {\n      padding: '0px 1rem',\n      height: 'var(--_ui5_custom_list_item_height)',\n      borderBottom: \"1px solid \".concat(ThemingParameters.sapList_BorderColor)\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"filter\",\n    style: {\n      paddingRight: '0.5rem',\n      minWidth: '1rem',\n      minHeight: '1rem'\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    column: column,\n    popoverRef: ref\n  })), showGroup && /*#__PURE__*/React.createElement(StandardListItem, {\n    type: ListItemTypes.Active,\n    icon: \"group-2\",\n    \"data-sort\": 'group'\n  }, i18nBundle.getText(column.isGrouped ? UNGROUP : GROUP))));\n});\nColumnHeaderModal.displayName = 'ColumnHeaderModal';\nvar styles$1 = {\n  header: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'begin',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    color: ThemingParameters.sapList_TextColor,\n    background: ThemingParameters.sapList_HeaderBackground,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative',\n    width: '100%',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    boxSizing: 'border-box',\n    '&[data-h-align=\"End\"]': {\n      '& $text': {\n        textAlign: 'end'\n      }\n    }\n  },\n  text: {\n    width: '100%',\n    textAlign: 'start'\n  },\n  iconContainer: {\n    display: 'inline-block',\n    position: 'absolute',\n    color: ThemingParameters.sapContent_IconColor,\n    right: getRTL() === false ? '0.5rem' : undefined,\n    left: getRTL() === true ? '0.5rem' : undefined\n  },\n  resizer: {\n    display: 'inline-block',\n    width: '16px',\n    height: '100%',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    transform: 'translateX(50%)',\n    zIndex: 1\n  }\n};\nvar useStyles = createComponentStyles(styles$1, {\n  name: 'TableColumnHeader'\n});\n/**\n * <code>import { ColumnHeader } from '@ui5/webcomponents-react/lib/ColumnHeader';</code>\n */\n\nvar ColumnHeader = function ColumnHeader(props) {\n  var classes = useStyles(props);\n  var id = props.id,\n      children = props.children,\n      column = props.column,\n      className = props.className,\n      style = props.style,\n      onSort = props.onSort,\n      onGroupBy = props.onGroupBy,\n      onDragEnter = props.onDragEnter,\n      onDragOver = props.onDragOver,\n      onDragStart = props.onDragStart,\n      onDrop = props.onDrop,\n      onDragEnd = props.onDragEnd,\n      isDraggable = props.isDraggable,\n      dragOver = props.dragOver,\n      role = props.role;\n  var isFiltered = column.filterValue && column.filterValue.length > 0;\n  var sortingIcon = column.isSorted ? /*#__PURE__*/React.createElement(Icon, {\n    name: column.isSortedDesc ? 'sort-descending' : 'sort-ascending'\n  }) : null;\n  var filterIcon = isFiltered ? /*#__PURE__*/React.createElement(Icon, {\n    name: \"filter\"\n  }) : null;\n  var groupingIcon = column.isGrouped ? /*#__PURE__*/React.createElement(Icon, {\n    name: \"group-2\"\n  }) : null;\n  var textStyle = useMemo(function () {\n    var margin = 0;\n    if (column.isSorted) margin++;\n    if (column.isGrouped) margin++;\n    if (isFiltered) margin++;\n\n    if (margin === 0) {\n      return {};\n    }\n\n    if (margin > 0) margin += 0.5;\n\n    if (getRTL()) {\n      return {\n        marginLeft: \"\".concat(margin, \"rem\")\n      };\n    }\n\n    return {\n      marginRight: \"\".concat(margin, \"rem\")\n    };\n  }, [column.isSorted, column.isGrouped, isFiltered]);\n  var hasPopover = column.canGroupBy || column.canSort || column.canFilter;\n  var innerStyle = useMemo(function () {\n    var modifiedStyles = {\n      cursor: hasPopover ? 'pointer' : 'auto'\n    };\n\n    if (dragOver) {\n      modifiedStyles.borderLeft = \"3px solid \".concat(ThemingParameters.sapSelectedColor);\n    }\n\n    return modifiedStyles;\n  }, [dragOver, hasPopover]);\n  var popoverRef = useRef(null);\n  var onOpenPopover = useCallback(function (e) {\n    if (popoverRef.current && hasPopover) {\n      popoverRef.current.openBy(e.target);\n    }\n  }, [popoverRef, hasPopover]);\n  if (!column) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: className,\n    style: style,\n    role: role,\n    draggable: isDraggable,\n    onDragEnter: onDragEnter,\n    onDragOver: onDragOver,\n    onDragStart: onDragStart,\n    onDrop: onDrop,\n    onDragEnd: onDragEnd,\n    \"data-column-id\": id\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: innerStyle,\n    onClick: onOpenPopover,\n    className: classes.header,\n    \"data-h-align\": column.hAlign\n  }, /*#__PURE__*/React.createElement(Text, {\n    tooltip: typeof children === 'string' ? children : null,\n    wrapping: false,\n    style: textStyle,\n    className: classes.text\n  }, children), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.iconContainer\n  }, filterIcon, sortingIcon, groupingIcon)), hasPopover && /*#__PURE__*/React.createElement(ColumnHeaderModal, {\n    column: column,\n    onSort: onSort,\n    onGroupBy: onGroupBy,\n    ref: popoverRef\n  }), column.canResize && column.getResizerProps && /*#__PURE__*/React.createElement(\"div\", _extends({}, column.getResizerProps(), {\n    \"data-resizer\": true,\n    className: \"\".concat(classes.resizer)\n  })));\n};\n\nvar DefaultFilterComponent = function DefaultFilterComponent(_ref) {\n  var column = _ref.column;\n  var handleChange = useCallback(function (e) {\n    column.setFilter(e.target.value || undefined);\n  }, [column.setFilter]);\n  return /*#__PURE__*/React.createElement(Input, {\n    onInput: handleChange\n  }, column.filterValue);\n};\n\nvar Cell = function Cell(_ref) {\n  var _ref$cell = _ref.cell,\n      _ref$cell$value = _ref$cell.value,\n      value = _ref$cell$value === void 0 ? '' : _ref$cell$value,\n      isGrouped = _ref$cell.isGrouped,\n      row = _ref.row;\n  var cellContent = \"\".concat(value !== null && value !== void 0 ? value : '');\n\n  if (isGrouped) {\n    cellContent += \" (\".concat(row.subRows.length, \")\");\n  }\n\n  return /*#__PURE__*/React.createElement(Text, {\n    wrapping: false,\n    tooltip: cellContent\n  }, cellContent);\n};\n\nvar tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nvar getPadding = function getPadding(level) {\n  switch (level) {\n    case 0:\n      return 0;\n\n    case 1:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n\n    case 2:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n\n    case 3:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n\n    default:\n      return \"calc(\".concat(CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3, \" + \").concat(level - 3, \"rem * 0.5)\");\n  }\n};\n\nvar Expandable = function Expandable(props) {\n  var cell = props.cell,\n      row = props.row,\n      column = props.column,\n      columns = props.columns;\n  var tableColumns = columns.filter(function (_ref) {\n    var id = _ref.id;\n    return id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column';\n  });\n  var columnIndex = tableColumns.findIndex(function (col) {\n    return col.id === column.id;\n  });\n  var paddingLeft;\n\n  if (row.canExpand) {\n    paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n  } else {\n    paddingLeft = columnIndex === 0 ? \"calc(\".concat(getPadding(row.depth), \" + 2rem)\") : 0;\n  }\n\n  var style = {\n    paddingLeft: paddingLeft\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columnIndex === 0 && row.canExpand ? /*#__PURE__*/React.createElement(\"span\", row.getToggleRowExpandedProps({\n    style: style\n  }), /*#__PURE__*/React.createElement(Icon, {\n    name: \"\".concat(row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'),\n    style: tableGroupExpandCollapseIcon\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    style: style\n  }), cell.render('Cell'));\n};\n\nvar tableGroupExpandCollapseIcon$1 = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nvar Grouped = function Grouped(props) {\n  var cell = props.cell,\n      row = props.row;\n  var style = {};\n\n  if (cell.column.hAlign && (cell.column.hAlign !== TextAlign.Left || cell.column.hAlign !== TextAlign.Begin)) {\n    style.marginRight = 'auto';\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", row.getToggleRowExpandedProps({\n    style: style\n  }), /*#__PURE__*/React.createElement(Icon, {\n    name: \"\".concat(row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'),\n    style: tableGroupExpandCollapseIcon$1\n  })), cell.render('Cell'));\n};\n\nvar RepeatedValue = function RepeatedValue() {\n  return null;\n};\n\nvar DEFAULT_COLUMN_WIDTH = 60;\n\nvar defaultFilterMethod = function defaultFilterMethod(filter, row) {\n  return new RegExp(filter.value, 'gi').test(String(row[filter.id]));\n};\n\nvar DefaultColumn = {\n  Filter: DefaultFilterComponent,\n  canResize: true,\n  canReorder: true,\n  minWidth: DEFAULT_COLUMN_WIDTH,\n  vAlign: VerticalAlign.Middle,\n  defaultFilter: defaultFilterMethod,\n  Grouped: Grouped,\n  Cell: Cell,\n  Expandable: Expandable,\n  RepeatedValue: RepeatedValue\n};\nvar styles$2 = {\n  position: 'absolute',\n  top: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n  left: 0,\n  right: 0,\n  zIndex: 1\n};\n\nvar DefaultLoadingComponent = function DefaultLoadingComponent(_ref) {\n  var style = _ref.style;\n  return /*#__PURE__*/React.createElement(Loader, {\n    delay: 500,\n    style: _objectSpread(_objectSpread({}, styles$2), style)\n  });\n};\n\nDefaultLoadingComponent.displayName = 'DefaultLoadingComponent';\n\nvar getArrayOfLength = function getArrayOfLength(len) {\n  return Array.from(Array(len).keys());\n};\n\nvar TableRow = function TableRow(_ref) {\n  var columns = _ref.columns,\n      y = _ref.y,\n      row = _ref.row;\n  var columnOffset = 0;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columns.map(function (column, i) {\n    var el = /*#__PURE__*/React.createElement(\"rect\", {\n      key: \"column-\".concat(i, \"-row-\").concat(row),\n      x: columnOffset + 2,\n      y: y,\n      rx: \"2\",\n      ry: \"8\",\n      width: column.totalWidth - 4,\n      height: \"16\"\n    });\n    columnOffset += column.totalWidth;\n    return el;\n  }));\n};\n\nvar TablePlaceholder = function TablePlaceholder(props) {\n  var columns = props.columns,\n      _props$rows = props.rows,\n      rows = _props$rows === void 0 ? 5 : _props$rows,\n      style = props.style,\n      rowHeight = props.rowHeight,\n      tableWidth = props.tableWidth;\n  var height = rows * rowHeight;\n  var innerStyles = useMemo(function () {\n    return _objectSpread({\n      backgroundColor: ThemingParameters.sapList_Background\n    }, style);\n  }, [style, ThemingParameters.sapList_Background]);\n  return /*#__PURE__*/React.createElement(ContentLoader, {\n    style: innerStyles,\n    height: height,\n    width: tableWidth,\n    speed: 2,\n    backgroundColor: ThemingParameters.sapContent_ImagePlaceholderBackground,\n    foregroundColor: ThemingParameters.sapContent_ImagePlaceholderForegroundColor,\n    backgroundOpacity: ThemingParameters.sapContent_DisabledOpacity\n  }, getArrayOfLength(rows).map(function (_, index) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: index,\n      columns: columns,\n      y: rowHeight * index + rowHeight / 2,\n      row: index\n    });\n  }));\n};\n\nvar DefaultNoDataComponent = function DefaultNoDataComponent(_ref) {\n  var noDataText = _ref.noDataText,\n      className = _ref.className,\n      style = _ref.style;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, noDataText);\n};\n\nvar getColumnId = function getColumnId(column) {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\n\nvar useDragAndDrop = function useDragAndDrop(props, setColumnOrder, columnOrder, resizeInfo, columns) {\n  var onColumnsReordered = props.onColumnsReordered;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      dragOver = _useState2[0],\n      setDragOver = _useState2[1];\n\n  var handleDragStart = useCallback(function (e) {\n    if (resizeInfo.isResizingColumn) {\n      e.preventDefault();\n      return;\n    }\n\n    e.dataTransfer.setData('colId', e.currentTarget.dataset.columnId);\n  }, [resizeInfo.isResizingColumn]);\n  var handleDragOver = useCallback(function (e) {\n    e.preventDefault();\n  }, []);\n  var handleDragEnter = useCallback(function (e) {\n    setDragOver(e.currentTarget.dataset.columnId);\n  }, []);\n  var handleOnDrop = useCallback(function (e) {\n    setDragOver('');\n    var droppedColId = e.currentTarget.dataset.columnId;\n    var draggedColId = e.dataTransfer.getData('colId');\n    if (droppedColId === draggedColId) return;\n    var internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map(function (col) {\n      return getColumnId(col);\n    });\n    var droppedColIdx = internalColumnOrder.findIndex(function (col) {\n      return col === droppedColId;\n    });\n    var draggedColIdx = internalColumnOrder.findIndex(function (col) {\n      return col === draggedColId;\n    });\n\n    var tempCols = _toConsumableArray(internalColumnOrder);\n\n    tempCols.splice(droppedColIdx, 0, tempCols.splice(draggedColIdx, 1)[0]);\n    setColumnOrder(tempCols);\n    var columnsNewOrder = tempCols.map(function (tempColId) {\n      return columns.find(function (col) {\n        return getColumnId(col) === tempColId;\n      });\n    });\n    onColumnsReordered(enrichEventWithDetails(e, {\n      columnsNewOrder: columnsNewOrder,\n      column: columns[draggedColIdx]\n    }));\n  }, [columnOrder, onColumnsReordered]);\n  var handleOnDragEnd = useCallback(function () {\n    setDragOver('');\n  }, [dragOver]);\n  return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};\n\nvar ROW_SAMPLE_SIZE = 20;\nvar DEFAULT_HEADER_NUM_CHAR = 10;\nvar MAX_WIDTH = 700; // a function, which approximates header px sizes given a character length\n\nvar approximateHeaderPxFromCharLength = function approximateHeaderPxFromCharLength(charLength) {\n  return charLength < 15 ? Math.sqrt(charLength * 1500) : 8 * charLength;\n};\n\nvar approximateContentPxFromCharLength = function approximateContentPxFromCharLength(charLength) {\n  return 8 * charLength;\n};\n\nvar columnsDeps = function columnsDeps(deps, _ref) {\n  var _ref$instance = _ref.instance,\n      state = _ref$instance.state,\n      webComponentsReactProperties = _ref$instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [state.tableClientWidth, webComponentsReactProperties.scaleWidthMode, webComponentsReactProperties.loading]);\n};\n\nvar columns = function columns(_columns, _ref2) {\n  var instance = _ref2.instance;\n\n  if (!instance.state || !instance.rows) {\n    return _columns;\n  }\n\n  var rows = instance.rows,\n      state = instance.state;\n  var hiddenColumns = state.hiddenColumns,\n      totalWidth = state.tableClientWidth;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      scaleWidthMode = _instance$webComponen.scaleWidthMode,\n      loading = _instance$webComponen.loading;\n  if (_columns.length === 0 || !totalWidth) return _columns;\n\n  var visibleColumns = _columns.filter(Boolean).filter(function (item) {\n    var _item$isVisible;\n\n    return ((_item$isVisible = item.isVisible) !== null && _item$isVisible !== void 0 ? _item$isVisible : true) && !hiddenColumns.includes(item.accessor);\n  });\n\n  var calculateDefaultTableWidth = function calculateDefaultTableWidth() {\n    var columnsWithFixedWidth = visibleColumns.filter(function (_ref3) {\n      var width = _ref3.width;\n      return width !== null && width !== void 0 ? width : false;\n    }).map(function (_ref4) {\n      var width = _ref4.width;\n      return width;\n    });\n    var fixedWidth = columnsWithFixedWidth.reduce(function (acc, val) {\n      return acc + val;\n    }, 0);\n    var defaultColumnsCount = visibleColumns.length - columnsWithFixedWidth.length; // check if columns are visible and table has width\n\n    if (visibleColumns.length > 0 && totalWidth > 0) {\n      // set fixedWidth as defaultWidth if visible columns have fixed value\n      if (visibleColumns.length === columnsWithFixedWidth.length) {\n        return fixedWidth / visibleColumns.length;\n      } // spread default columns\n\n\n      if (totalWidth >= fixedWidth + defaultColumnsCount * DEFAULT_COLUMN_WIDTH) {\n        return (totalWidth - fixedWidth) / defaultColumnsCount;\n      }\n    }\n\n    return DEFAULT_COLUMN_WIDTH;\n  };\n\n  var hasData = rows.some(function (row) {\n    var _row$original;\n\n    return !((_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow);\n  });\n\n  if (scaleWidthMode === TableScaleWidthMode.Default || !hasData && loading) {\n    var defaultWidth = calculateDefaultTableWidth();\n    return _columns.map(function (column) {\n      var _column$width;\n\n      return _objectSpread(_objectSpread({}, column), {}, {\n        width: (_column$width = column.width) !== null && _column$width !== void 0 ? _column$width : defaultWidth\n      });\n    });\n  }\n\n  var rowSample = rows.slice(0, ROW_SAMPLE_SIZE);\n  var columnMeta = visibleColumns.reduce(function (acc, column) {\n    if (column.id === '__ui5wcr__internal_selection_column' || column.id === '__ui5wcr__internal_highlight_column') {\n      acc[column.accessor] = {\n        minHeaderWidth: column.width,\n        fullWidth: column.width,\n        contentCharAvg: 0\n      };\n      return acc;\n    }\n\n    var headerLength = typeof column.Header === 'string' ? column.Header.length : DEFAULT_HEADER_NUM_CHAR; // max character length\n\n    var contentMaxCharLength = Math.max.apply(Math, [headerLength].concat(_toConsumableArray(rowSample.map(function (row) {\n      var _row$values;\n\n      var dataPoint = (_row$values = row.values) === null || _row$values === void 0 ? void 0 : _row$values[column.accessor];\n\n      if (dataPoint) {\n        if (typeof dataPoint === 'string') return dataPoint.length;\n        if (typeof dataPoint === 'number') return (dataPoint + '').length;\n      }\n\n      return 0;\n    })))); // avg character length\n\n    var contentCharAvg = rowSample.reduce(function (acc, item) {\n      var _item$values;\n\n      var dataPoint = (_item$values = item.values) === null || _item$values === void 0 ? void 0 : _item$values[column.accessor];\n      var val = 0;\n\n      if (dataPoint) {\n        if (typeof dataPoint === 'string') val = dataPoint.length;\n        if (typeof dataPoint === 'number') val = (dataPoint + '').length;\n      }\n\n      return acc + val;\n    }, 0) / rowSample.length;\n    var minHeaderWidth = approximateHeaderPxFromCharLength(headerLength);\n    acc[column.accessor] = {\n      minHeaderWidth: minHeaderWidth,\n      fullWidth: Math.max(minHeaderWidth, approximateContentPxFromCharLength(contentMaxCharLength)),\n      contentCharAvg: contentCharAvg\n    };\n    return acc;\n  }, {});\n  var totalCharNum = Object.values(columnMeta).reduce(function (acc, item) {\n    return acc + item.contentCharAvg;\n  }, 0);\n  var reservedWidth = visibleColumns.reduce(function (acc, column) {\n    var _columnMeta$column$ac = columnMeta[column.accessor],\n        minHeaderWidth = _columnMeta$column$ac.minHeaderWidth,\n        fullWidth = _columnMeta$column$ac.fullWidth;\n    return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0, scaleWidthMode === TableScaleWidthMode.Grow ? fullWidth : 0) || 0;\n  }, 0);\n  var availableWidth = totalWidth - reservedWidth;\n\n  if (scaleWidthMode === TableScaleWidthMode.Smart || availableWidth > 0) {\n    if (scaleWidthMode === TableScaleWidthMode.Grow) {\n      reservedWidth = visibleColumns.reduce(function (acc, column) {\n        var minHeaderWidth = columnMeta[column.accessor].minHeaderWidth;\n        return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0) || 0;\n      }, 0);\n      availableWidth = totalWidth - reservedWidth;\n    }\n\n    return _columns.map(function (column) {\n      var _column$isVisible;\n\n      var isColumnVisible = ((_column$isVisible = column.isVisible) !== null && _column$isVisible !== void 0 ? _column$isVisible : true) && !hiddenColumns.includes(column.accessor);\n\n      if (isColumnVisible) {\n        var _column$width2, _column$minWidth;\n\n        var _columnMeta$column$ac2 = columnMeta[column.accessor],\n            minHeaderWidth = _columnMeta$column$ac2.minHeaderWidth,\n            contentCharAvg = _columnMeta$column$ac2.contentCharAvg;\n        var additionalSpaceFactor = totalCharNum > 0 ? contentCharAvg / totalCharNum : 1 / visibleColumns.length;\n        var targetWidth = additionalSpaceFactor * availableWidth + minHeaderWidth;\n        return _objectSpread(_objectSpread({}, column), {}, {\n          width: (_column$width2 = column.width) !== null && _column$width2 !== void 0 ? _column$width2 : targetWidth,\n          minWidth: (_column$minWidth = column.minWidth) !== null && _column$minWidth !== void 0 ? _column$minWidth : minHeaderWidth\n        });\n      }\n\n      return column;\n    });\n  } // TableScaleWidthMode Grow\n\n\n  return _columns.map(function (column) {\n    var _column$isVisible2;\n\n    var isColumnVisible = ((_column$isVisible2 = column.isVisible) !== null && _column$isVisible2 !== void 0 ? _column$isVisible2 : true) && !hiddenColumns.includes(column.accessor);\n\n    if (isColumnVisible) {\n      var _column$width3;\n\n      var fullWidth = columnMeta[column.accessor].fullWidth;\n      return _objectSpread(_objectSpread({}, column), {}, {\n        width: (_column$width3 = column.width) !== null && _column$width3 !== void 0 ? _column$width3 : fullWidth,\n        maxWidth: MAX_WIDTH\n      });\n    }\n\n    return column;\n  });\n};\n\nvar useDynamicColumnWidths = function useDynamicColumnWidths(hooks) {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n};\n\nvar baseStyles = {\n  width: '100%',\n  height: '100%'\n};\nvar StyleMap = new Map();\nStyleMap.set(ValueState.None, baseStyles);\nStyleMap.set(ValueState.Success, _objectSpread(_objectSpread({}, baseStyles), {}, {\n  backgroundColor: ThemingParameters.sapSuccessColor\n}));\nStyleMap.set(ValueState.Warning, _objectSpread(_objectSpread({}, baseStyles), {}, {\n  backgroundColor: ThemingParameters.sapWarningColor\n}));\nStyleMap.set(ValueState.Error, _objectSpread(_objectSpread({}, baseStyles), {}, {\n  backgroundColor: ThemingParameters.sapErrorColor\n}));\nStyleMap.set(ValueState.Information, _objectSpread(_objectSpread({}, baseStyles), {}, {\n  backgroundColor: ThemingParameters.sapInformationColor\n}));\n/*\n * COMPONENTS\n */\n\nvar Header = function Header() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '6px'\n    }\n  });\n};\n\nvar Cell$1 = function Cell(_ref) {\n  var value = _ref.cell.value;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: StyleMap.get(value)\n  });\n};\n/*\n * TABLE HOOKS\n */\n\n\nvar columnsDeps$1 = function columnsDeps(deps, _ref2) {\n  var webComponentsReactProperties = _ref2.instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField]);\n};\n\nvar visibleColumnsDeps = function visibleColumnsDeps(deps, _ref3) {\n  var instance = _ref3.instance;\n  return [].concat(_toConsumableArray(deps), [instance.webComponentsReactProperties.withRowHighlight]);\n};\n\nvar visibleColumns = function visibleColumns(currentVisibleColumns, _ref4) {\n  var webComponentsReactProperties = _ref4.instance.webComponentsReactProperties;\n\n  if (!webComponentsReactProperties.withRowHighlight) {\n    return currentVisibleColumns.filter(function (_ref5) {\n      var id = _ref5.id;\n      return id !== '__ui5wcr__internal_highlight_column';\n    });\n  }\n\n  var highlightColumn = currentVisibleColumns.find(function (_ref6) {\n    var id = _ref6.id;\n    return id === '__ui5wcr__internal_highlight_column';\n  });\n  return [highlightColumn].concat(_toConsumableArray(currentVisibleColumns.filter(function (_ref7) {\n    var id = _ref7.id;\n    return id !== '__ui5wcr__internal_highlight_column';\n  })));\n};\n\nvar columns$1 = function columns(currentColumns, _ref8) {\n  var instance = _ref8.instance;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      withRowHighlight = _instance$webComponen.withRowHighlight,\n      highlightField = _instance$webComponen.highlightField;\n\n  if (!withRowHighlight) {\n    return currentColumns;\n  }\n\n  return [{\n    id: '__ui5wcr__internal_highlight_column',\n    accessor: highlightField,\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    canReorder: false,\n    width: 6,\n    minWidth: 6,\n    maxWidth: 6,\n    Header: Header,\n    Cell: Cell$1\n  }].concat(_toConsumableArray(currentColumns));\n};\n\nvar useRowHighlight = function useRowHighlight(hooks) {\n  hooks.columns.push(columns$1);\n  hooks.columnsDeps.push(columnsDeps$1);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\n\nuseRowHighlight.pluginName = 'useRowHighlight';\nvar divStyle = {\n  width: '100%',\n  height: '100%',\n  cursor: 'pointer'\n};\nvar customCheckBoxStyling = {\n  cursor: 'pointer',\n  verticalAlign: 'middle'\n};\n/*\n * COMPONENTS\n */\n\nvar Header$1 = function Header(_ref) {\n  var getToggleAllRowsSelectedProps = _ref.getToggleAllRowsSelectedProps,\n      flatRows = _ref.flatRows,\n      _ref$webComponentsRea = _ref.webComponentsReactProperties,\n      onRowSelected = _ref$webComponentsRea.onRowSelected,\n      selectionMode = _ref$webComponentsRea.selectionMode,\n      toggleAllRowsSelected = _ref.toggleAllRowsSelected;\n  var onChange = useCallback(function (e) {\n    var allRowsSelected = e.target.checked;\n    toggleAllRowsSelected(allRowsSelected);\n\n    if (typeof onRowSelected === 'function') {\n      onRowSelected( // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n      enrichEventWithDetails(e, {\n        allRowsSelected: allRowsSelected,\n        selectedFlatRows: allRowsSelected ? flatRows : []\n      }));\n    }\n  }, [toggleAllRowsSelected, flatRows]);\n\n  if (selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(CheckBox, _extends({}, getToggleAllRowsSelectedProps(), {\n    style: customCheckBoxStyling,\n    onChange: onChange\n  }));\n};\n\nvar Cell$2 = function Cell(_ref2) {\n  var row = _ref2.row,\n      _ref2$webComponentsRe = _ref2.webComponentsReactProperties,\n      selectionBehavior = _ref2$webComponentsRe.selectionBehavior,\n      selectionMode = _ref2$webComponentsRe.selectionMode;\n  var handleCellClick = useCallback(function (e) {\n    if (TableSelectionBehavior.ROW_SELECTOR === selectionBehavior) {\n      row.getRowProps().onClick(e, true);\n    }\n  }, [selectionMode, row]);\n\n  if (row.isGrouped && selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return null;\n  }\n\n  if (selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      onClick: handleCellClick\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CheckBox, _extends({}, row.getToggleRowSelectedProps(), {\n    onChange: handleCellClick,\n    style: customCheckBoxStyling,\n    \"data-name\": \"internal_selection_column\"\n  }));\n};\n/*\n * TABLE HOOKS\n */\n\n\nvar columnDeps = function columnDeps(deps, _ref3) {\n  var webComponentsReactProperties = _ref3.instance.webComponentsReactProperties;\n  return [].concat(_toConsumableArray(deps), [webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior]);\n};\n\nvar visibleColumnsDeps$1 = function visibleColumnsDeps(deps, _ref4) {\n  var instance = _ref4.instance;\n  return [].concat(_toConsumableArray(deps), [instance.webComponentsReactProperties.selectionMode, instance.webComponentsReactProperties.selectionBehavior]);\n};\n\nvar visibleColumns$1 = function visibleColumns(currentVisibleColumns, _ref5) {\n  var webComponentsReactProperties = _ref5.instance.webComponentsReactProperties;\n\n  if (webComponentsReactProperties.selectionMode === TableSelectionMode.NONE || webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.ROW_ONLY) {\n    return currentVisibleColumns;\n  }\n\n  var selectionColumn = currentVisibleColumns.find(function (_ref6) {\n    var id = _ref6.id;\n    return id === '__ui5wcr__internal_selection_column';\n  });\n  return [selectionColumn].concat(_toConsumableArray(currentVisibleColumns.filter(function (_ref7) {\n    var id = _ref7.id;\n    return id !== '__ui5wcr__internal_selection_column';\n  })));\n};\n\nvar columns$2 = function columns(currentColumns, _ref8) {\n  var instance = _ref8.instance;\n  var webComponentsReactProperties = instance.webComponentsReactProperties;\n  var selectionMode = webComponentsReactProperties.selectionMode,\n      selectionBehavior = webComponentsReactProperties.selectionBehavior,\n      tableRef = webComponentsReactProperties.tableRef;\n\n  if (selectionMode === TableSelectionMode.NONE || selectionBehavior === TableSelectionBehavior.ROW_ONLY) {\n    return currentColumns;\n  }\n\n  var selectionColumnWidth = tableRef.current ? parseInt(getComputedStyle(tableRef.current).getPropertyValue(\"--\".concat(CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth)), 10) : 47;\n  return [{\n    id: '__ui5wcr__internal_selection_column',\n    accessor: '__ui5wcr__internal_selection_column',\n    disableFilters: true,\n    disableSortBy: true,\n    disableGroupBy: true,\n    disableResizing: true,\n    canReorder: false,\n    width: selectionColumnWidth,\n    minWidth: selectionColumnWidth,\n    maxWidth: selectionColumnWidth,\n    Header: Header$1,\n    Cell: Cell$2\n  }].concat(_toConsumableArray(currentColumns));\n};\n\nvar useRowSelectionColumn = function useRowSelectionColumn(hooks) {\n  hooks.columns.push(columns$2);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps$1);\n  hooks.visibleColumns.push(visibleColumns$1);\n};\n\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';\n\nvar prepareRow = function prepareRow(row, _ref) {\n  var instance = _ref.instance;\n\n  row.selectSingleRow = function (event) {\n    var selectionCellClick = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    instance.selectSingleRow(row, event, selectionCellClick);\n  };\n};\n\nvar getRowProps = function getRowProps(rowProps, _ref2) {\n  var row = _ref2.row;\n  return [rowProps, {\n    onClick: row.selectSingleRow\n  }];\n};\n\nvar tagNamesWhichShouldNotSelectARow = new Set(['UI5-INPUT', 'UI5-LINK', 'UI5-BUTTON', 'UI5-CHECKBOX', 'UI5-COMBOBOX', 'UI5-DATEPICKER', 'UI5-MULTI-COMBOBOX', 'UI5-SELECT', 'UI5-RADIOBUTTON', 'UI5-SEGMENTEDBUTTON', 'UI5-SWITCH', 'UI5-TOGGLEBUTTON']);\n\nvar useInstance = function useInstance(instance) {\n  var webComponentsReactProperties = instance.webComponentsReactProperties,\n      dispatch = instance.dispatch,\n      toggleRowSelected = instance.toggleRowSelected,\n      selectedFlatRows = instance.selectedFlatRows;\n  var isTreeTable = webComponentsReactProperties.isTreeTable,\n      selectionMode = webComponentsReactProperties.selectionMode,\n      onRowSelected = webComponentsReactProperties.onRowSelected,\n      selectionBehavior = webComponentsReactProperties.selectionBehavior;\n  var selectSingleRow = useCallback(function (row, e) {\n    var _e$target, _e$target$dataset, _e$nativeEvent, _row$original;\n\n    var selectionCellClick = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (((_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$dataset = _e$target.dataset) === null || _e$target$dataset === void 0 ? void 0 : _e$target$dataset.name) !== 'internal_selection_column' && !(e.markerAllowTableRowSelection === true || ((_e$nativeEvent = e.nativeEvent) === null || _e$nativeEvent === void 0 ? void 0 : _e$nativeEvent.markerAllowTableRowSelection) === true) && tagNamesWhichShouldNotSelectARow.has(e.target.tagName)) {\n      return;\n    }\n\n    var isEmptyRow = (_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow;\n\n    if ([TableSelectionMode.SINGLE_SELECT, TableSelectionMode.MULTI_SELECT].includes(selectionMode) && !isEmptyRow) {\n      if (row.isGrouped || TableSelectionBehavior.ROW_SELECTOR === selectionBehavior && !selectionCellClick) {\n        return;\n      }\n\n      if (isTreeTable) {\n        if (selectionMode === TableSelectionMode.MULTI_SELECT) {\n          dispatch({\n            type: 'SET_SELECTED_ROWS',\n            selectedIds: Object.assign.apply(Object, [{}].concat(_toConsumableArray(selectedFlatRows.map(function (item) {\n              return _defineProperty({}, item.id, true);\n            })), [_defineProperty({}, row.id, !row.isSelected)]))\n          });\n        } else {\n          dispatch({\n            type: 'SET_SELECTED_ROWS',\n            selectedIds: _defineProperty({}, row.id, !row.isSelected)\n          });\n        }\n      } else {\n        row.toggleRowSelected();\n      }\n\n      if (typeof onRowSelected === 'function') {\n        var payload = {\n          row: row,\n          isSelected: !row.isSelected\n        };\n\n        var payloadWithFlatRows = _objectSpread(_objectSpread({}, payload), {}, {\n          selectedFlatRows: !row.isSelected ? [].concat(_toConsumableArray(selectedFlatRows), [row]) : selectedFlatRows.filter(function (prevRow) {\n            return prevRow.id !== row.id;\n          })\n        });\n\n        onRowSelected(enrichEventWithDetails(e, TableSelectionMode.MULTI_SELECT === selectionMode ? payloadWithFlatRows : payload));\n      }\n\n      if (selectionMode === TableSelectionMode.SINGLE_SELECT && !isTreeTable) {\n        selectedFlatRows.forEach(function (_ref5) {\n          var id = _ref5.id;\n          toggleRowSelected(id, false);\n        });\n      }\n    }\n  }, [selectionMode, isTreeTable, dispatch, selectedFlatRows, onRowSelected, toggleRowSelected]);\n  Object.assign(instance, {\n    selectSingleRow: selectSingleRow\n  });\n};\n\nvar useSingleRowStateSelection = function useSingleRowStateSelection(hooks) {\n  hooks.useInstance.push(useInstance);\n  hooks.prepareRow.push(prepareRow);\n  hooks.getRowProps.push(getRowProps);\n};\n\nuseSingleRowStateSelection.pluginName = 'useSingleRowStateSelection';\n\nvar getTableProps = function getTableProps(tableProps, _ref) {\n  var instance = _ref.instance;\n  var classes = instance.webComponentsReactProperties.classes;\n  return [tableProps, {\n    className: classes.table\n  }];\n};\n\nvar getHeaderGroupProps = function getHeaderGroupProps(headerGroupProps, _ref2) {\n  var instance = _ref2.instance;\n  var classes = instance.webComponentsReactProperties.classes;\n  return [headerGroupProps, {\n    className: classes.tableHeaderRow\n  }];\n};\n\nvar getHeaderProps = function getHeaderProps(columnProps, _ref3) {\n  var instance = _ref3.instance,\n      column = _ref3.column;\n  var classes = instance.webComponentsReactProperties.classes;\n  var isRTL = getRTL();\n  var lastColumnId = instance.visibleColumns[instance.visibleColumns.length - 1].id;\n  var isLastColumn = column.id === lastColumnId;\n  var style = {\n    width: column.totalWidth\n  };\n\n  if (instance.state.isScrollable && isLastColumn) {\n    style[isRTL ? 'paddingLeft' : 'paddingRight'] = ThemingParameters.sapScrollBar_Dimension;\n  }\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column') {\n    style.padding = 0;\n  }\n\n  return [columnProps, {\n    className: classes.th,\n    column: column,\n    style: style,\n    id: column.id\n  }];\n};\n\nvar ROW_SELECTION_ATTRIBUTE = 'data-is-selected';\n\nvar getRowProps$1 = function getRowProps(rowProps, _ref4) {\n  var _row$original;\n\n  var instance = _ref4.instance,\n      row = _ref4.row;\n  var webComponentsReactProperties = instance.webComponentsReactProperties;\n  var classes = webComponentsReactProperties.classes,\n      selectionBehavior = webComponentsReactProperties.selectionBehavior,\n      selectionMode = webComponentsReactProperties.selectionMode,\n      alternateRowColor = webComponentsReactProperties.alternateRowColor;\n  var isEmptyRow = (_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow;\n  var className = classes.tr;\n  var rowCanBeSelected = [TableSelectionMode.SINGLE_SELECT, TableSelectionMode.MULTI_SELECT].includes(selectionMode) && !isEmptyRow;\n\n  if (row.isGrouped) {\n    className += \" \".concat(classes.tableGroupHeader);\n  }\n\n  if (alternateRowColor && row.index % 2 !== 0) {\n    className += \" \".concat(classes.alternateRowColor);\n  }\n\n  var newRowProps = {\n    className: className,\n    role: 'row',\n    'aria-rowindex': row.index\n  };\n\n  if (rowCanBeSelected) {\n    if (TableSelectionBehavior.ROW_SELECTOR !== selectionBehavior) {\n      newRowProps.className += \" \".concat(classes.trActive);\n    }\n\n    if (row.isSelected) {\n      newRowProps[ROW_SELECTION_ATTRIBUTE] = '';\n    }\n  }\n\n  return [rowProps, newRowProps];\n};\n\nvar getCellProps = function getCellProps(cellProps, _ref5) {\n  var column = _ref5.cell.column,\n      instance = _ref5.instance;\n  var columnIndex = instance.visibleColumns.findIndex(function (_ref6) {\n    var id = _ref6.id;\n    return id === column.id;\n  });\n  var isLastColumn = instance.visibleColumns.length === columnIndex + 1;\n  var classes = instance.webComponentsReactProperties.classes;\n  var style = {};\n\n  switch (column.hAlign) {\n    case TextAlign.Begin:\n      style.justifyContent = 'flex-start';\n      style.textAlign = 'start';\n      break;\n\n    case TextAlign.Center:\n      style.justifyContent = 'center';\n      style.textAlign = 'center';\n      break;\n\n    case TextAlign.End:\n      style.justifyContent = 'flex-end';\n      style.textAlign = 'end';\n      break;\n\n    case TextAlign.Left:\n      style.justifyContent = 'left';\n      style.textAlign = 'left';\n      break;\n\n    case TextAlign.Right:\n      style.justifyContent = 'right';\n      style.textAlign = 'right';\n      break;\n  }\n\n  switch (column.vAlign) {\n    case VerticalAlign.Bottom:\n      style.alignItems = 'flex-end';\n      break;\n\n    case VerticalAlign.Middle:\n      style.alignItems = 'center';\n      break;\n\n    case VerticalAlign.Top:\n      style.alignItems = 'flex-start';\n      break;\n  }\n\n  var className = classes.tableCell;\n\n  if (column.className) {\n    className += \" \".concat(column.className);\n  }\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column') {\n    style.padding = 0;\n  }\n\n  if (isLastColumn && instance.state.isScrollable) {\n    style.width = \"calc(\".concat(column.totalWidth, \"px - \").concat(ThemingParameters.sapScrollBar_Dimension, \")\");\n  } else {\n    style.width = \"\".concat(column.totalWidth, \"px\");\n  }\n\n  return [cellProps, {\n    className: className,\n    style: style,\n    tabIndex: -1,\n    'aria-colindex': columnIndex + 1 // aria index is 1 based, not 0\n\n  }];\n};\n\nvar useStyling = function useStyling(hooks) {\n  hooks.getTableProps.push(getTableProps);\n  hooks.getHeaderGroupProps.push(getHeaderGroupProps);\n  hooks.getHeaderProps.push(getHeaderProps);\n  hooks.getRowProps.push(getRowProps$1);\n  hooks.getCellProps.push(getCellProps);\n};\n\nuseStyling.pluginName = 'useStyling';\n\nvar useTableScrollHandles = function useTableScrollHandles(ref) {\n  var analyticalTableRef = useConsolidatedRef(ref);\n  var reactWindowRef = useRef({});\n  useEffect(function () {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: function scrollTo(offset, align) {\n          var _reactWindowRef$curre;\n\n          if (typeof ((_reactWindowRef$curre = reactWindowRef.current) === null || _reactWindowRef$curre === void 0 ? void 0 : _reactWindowRef$curre.scrollToOffset) === 'function') {\n            reactWindowRef.current.scrollToOffset(offset, {\n              align: align\n            });\n          }\n        },\n        scrollToItem: function scrollToItem(index, align) {\n          var _reactWindowRef$curre2;\n\n          if (typeof ((_reactWindowRef$curre2 = reactWindowRef.current) === null || _reactWindowRef$curre2 === void 0 ? void 0 : _reactWindowRef$curre2.scrollToIndex) === 'function') {\n            reactWindowRef.current.scrollToIndex(index, {\n              align: align\n            });\n          }\n        }\n      });\n    }\n  }, [analyticalTableRef.current, reactWindowRef.current.scrollToIndex, reactWindowRef.current.scrollToOffset]);\n  return [analyticalTableRef, reactWindowRef];\n};\n\nvar getToggleRowExpandedProps = function getToggleRowExpandedProps(rowProps, _ref) {\n  var row = _ref.row,\n      instance = _ref.instance;\n  var _instance$webComponen = instance.webComponentsReactProperties,\n      onRowExpandChange = _instance$webComponen.onRowExpandChange,\n      isTreeTable = _instance$webComponen.isTreeTable;\n  var onClick = useCallback(function (e) {\n    e.stopPropagation();\n    e.persist();\n    row.toggleRowExpanded();\n    var column = null;\n\n    if (!isTreeTable) {\n      column = row.cells.find(function (cell) {\n        return cell.column.id === row.groupByID;\n      }).column;\n    }\n\n    onRowExpandChange(enrichEventWithDetails(e, {\n      row: row,\n      column: column\n    }));\n  }, [row, isTreeTable, onRowExpandChange]);\n  return [rowProps, {\n    onClick: onClick\n  }];\n};\n\nvar useToggleRowExpand = function useToggleRowExpand(hooks) {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\n\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';\n\nfunction deepCompare(obj1, obj2) {\n  //Loop through properties in object 1\n  if (!obj1 && obj2 || obj1 && !obj2) {\n    return false;\n  }\n\n  for (var p in obj1) {\n    //Check property exists on both objects\n    if (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;\n\n    switch (typeof obj1[p]) {\n      //Deep compare objects\n      case 'object':\n        if (!deepCompare(obj1[p], obj2[p])) return false;\n        break;\n      //Compare function code\n\n      case 'function':\n        if (typeof obj2[p] == 'undefined' || p != 'compare' && obj1[p].toString() != obj2[p].toString()) return false;\n        break;\n      //Compare values\n\n      default:\n        if (obj1[p] != obj2[p]) return false;\n    }\n  } //Check object 2 for any extra properties\n\n\n  for (var _p in obj2) {\n    if (typeof obj2[_p] !== 'undefined' && typeof obj1[_p] === 'undefined') {\n      return false;\n    } // if (typeof (obj1[p]) == 'undefined') return false;\n\n  }\n\n  return true;\n}\n\nvar stateReducer = function stateReducer(newState, action) {\n  var payload = action.payload;\n\n  switch (action.type) {\n    case 'SET_GROUP_BY':\n      if (deepCompare(newState.groupBy, payload)) {\n        return newState;\n      }\n\n      return _objectSpread(_objectSpread({}, newState), {}, {\n        groupBy: payload\n      });\n\n    case 'SET_SELECTED_ROWS':\n      if (deepCompare(newState.selectedRowIds, action.selectedIds)) {\n        return newState;\n      }\n\n      return _objectSpread(_objectSpread({}, newState), {}, {\n        selectedRowIds: action.selectedIds\n      });\n\n    case 'TABLE_RESIZE':\n      return _objectSpread(_objectSpread({}, newState), {}, {\n        tableClientWidth: payload.tableClientWidth\n      });\n\n    case 'TABLE_SCROLLING_ENABLED':\n      return _objectSpread(_objectSpread({}, newState), {}, {\n        isScrollable: payload.isScrollable\n      });\n\n    default:\n      return newState;\n  }\n};\n\nvar styles$3 = {\n  minHeight: '1.5rem',\n  display: 'flex',\n  alignItems: 'center'\n};\n\nvar TitleBar = function TitleBar(props) {\n  var children = props.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles$3\n  }, typeof children === 'string' && /*#__PURE__*/React.createElement(Title, null, children), isValidElement(children) && children);\n};\n\nvar orderByFn = function orderByFn(rows, functions, directions) {\n  var wrapSortFn = function wrapSortFn(sortFn, index) {\n    var desc = directions[index] === false || directions[index] === 'desc';\n    return function (rowA, rowB) {\n      var _rowA$original, _rowB$original, _rowA$original2, _rowB$original2, _rowA$original3, _rowB$original3;\n\n      if (((_rowA$original = rowA.original) === null || _rowA$original === void 0 ? void 0 : _rowA$original.emptyRow) && !((_rowB$original = rowB.original) === null || _rowB$original === void 0 ? void 0 : _rowB$original.emptyRow)) {\n        return desc ? -1 : 1;\n      }\n\n      if (!((_rowA$original2 = rowA.original) === null || _rowA$original2 === void 0 ? void 0 : _rowA$original2.emptyRow) && ((_rowB$original2 = rowB.original) === null || _rowB$original2 === void 0 ? void 0 : _rowB$original2.emptyRow)) {\n        return desc ? 1 : -1;\n      }\n\n      if (((_rowA$original3 = rowA.original) === null || _rowA$original3 === void 0 ? void 0 : _rowA$original3.emptyRow) && ((_rowB$original3 = rowB.original) === null || _rowB$original3 === void 0 ? void 0 : _rowB$original3.emptyRow)) {\n        return 0;\n      }\n\n      return sortFn(rowA, rowB);\n    };\n  };\n\n  var wrappedSortfunctions = functions.map(wrapSortFn);\n  return defaultOrderByFn(rows, wrappedSortfunctions, directions);\n};\n\nvar VirtualTableBody = function VirtualTableBody(props) {\n  var classes = props.classes,\n      prepareRow = props.prepareRow,\n      rows = props.rows,\n      minRows = props.minRows,\n      selectionMode = props.selectionMode,\n      reactWindowRef = props.reactWindowRef,\n      isTreeTable = props.isTreeTable,\n      internalRowHeight = props.internalRowHeight,\n      tableBodyHeight = props.tableBodyHeight,\n      visibleRows = props.visibleRows,\n      overscanCount = props.overscanCount,\n      totalColumnsWidth = props.totalColumnsWidth,\n      infiniteScroll = props.infiniteScroll,\n      infiniteScrollThreshold = props.infiniteScrollThreshold,\n      onLoadMore = props.onLoadMore;\n  var firedInfiniteLoadEvents = useRef(new Set());\n  var itemCount = Math.max(minRows, rows.length);\n  var overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n  var parentRef = useRef();\n  var rowVirtualizer = useVirtual({\n    size: itemCount,\n    parentRef: parentRef,\n    estimateSize: React.useCallback(function () {\n      return internalRowHeight;\n    }, [internalRowHeight]),\n    overscan: overscan\n  });\n  reactWindowRef.current = {\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  };\n  var classNames = StyleClassHelper.of(classes.tbody, GlobalStyleClasses.sapScrollBar);\n  var lastScrollTop = useRef(0);\n  var onScroll = useCallback(function (event) {\n    var scrollOffset = event.target.scrollTop;\n    var isScrollingDown = lastScrollTop.current < scrollOffset;\n\n    if (isScrollingDown && infiniteScroll) {\n      lastScrollTop.current = scrollOffset;\n      var currentTopRow = Math.floor(scrollOffset / internalRowHeight);\n\n      if (rows.length - currentTopRow < infiniteScrollThreshold) {\n        if (!firedInfiniteLoadEvents.current.has(rows.length)) {\n          onLoadMore({\n            detail: {\n              rowCount: rows.length\n            }\n          });\n        }\n\n        firedInfiniteLoadEvents.current.add(rows.length);\n      }\n    }\n  }, [infiniteScroll, infiniteScrollThreshold, onLoadMore, rows.length, internalRowHeight, firedInfiniteLoadEvents, lastScrollTop]);\n  var currentlyFocusedCell = useRef(null);\n  var onTableFocus = useCallback(function (e) {\n    var firstCell = e.target.querySelector('div[role=\"row\"]:first-child div[role=\"cell\"]:first-child');\n\n    if (firstCell) {\n      firstCell.tabIndex = 0;\n      firstCell.focus();\n      currentlyFocusedCell.current = firstCell;\n    }\n  }, [currentlyFocusedCell]);\n  var onKeyboardNavigation = useCallback(function (e) {\n    if (currentlyFocusedCell.current) {\n      switch (e.key) {\n        case 'ArrowRight':\n          {\n            var newElement = currentlyFocusedCell.current.nextElementSibling;\n\n            if (newElement) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            }\n\n            break;\n          }\n\n        case 'ArrowLeft':\n          {\n            var _newElement = currentlyFocusedCell.current.previousElementSibling;\n\n            if (_newElement) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              _newElement.tabIndex = 0;\n\n              _newElement.focus();\n\n              currentlyFocusedCell.current = _newElement;\n            }\n\n            break;\n          }\n\n        case 'ArrowDown':\n          {\n            var nextRow = currentlyFocusedCell.current.parentElement.nextElementSibling;\n\n            if (nextRow) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              var currentColumnIndex = currentlyFocusedCell.current.getAttribute('aria-colindex');\n\n              var _newElement2 = nextRow.querySelector(\"div[aria-colindex=\\\"\".concat(currentColumnIndex, \"\\\"]\"));\n\n              _newElement2.tabIndex = 0;\n\n              _newElement2.focus();\n\n              currentlyFocusedCell.current = _newElement2;\n            }\n\n            break;\n          }\n\n        case 'ArrowUp':\n          {\n            var previousRow = currentlyFocusedCell.current.parentElement.previousElementSibling;\n\n            if (previousRow) {\n              currentlyFocusedCell.current.tabIndex = -1;\n\n              var _currentColumnIndex = currentlyFocusedCell.current.getAttribute('aria-colindex');\n\n              var _newElement3 = previousRow.querySelector(\"div[aria-colindex=\\\"\".concat(_currentColumnIndex, \"\\\"]\"));\n\n              _newElement3.tabIndex = 0;\n\n              _newElement3.focus();\n\n              currentlyFocusedCell.current = _newElement3;\n            }\n\n            break;\n          }\n      }\n    }\n  }, [currentlyFocusedCell]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames.valueOf(),\n    ref: parentRef,\n    onScroll: onScroll,\n    style: {\n      height: \"\".concat(tableBodyHeight, \"px\"),\n      width: \"\".concat(totalColumnsWidth, \"px\")\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    tabIndex: 0,\n    onFocus: onTableFocus,\n    onKeyDown: onKeyboardNavigation,\n    style: {\n      height: \"\".concat(rowVirtualizer.totalSize, \"px\"),\n      width: \"\".concat(totalColumnsWidth, \"px\"),\n      position: 'relative'\n    }\n  }, rowVirtualizer.virtualItems.map(function (virtualRow) {\n    var row = rows[virtualRow.index];\n\n    if (!row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: \"empty_row_\".concat(virtualRow.index),\n        className: classes.tr,\n        style: {\n          height: \"\".concat(virtualRow.size, \"px\"),\n          transform: \"translateY(\".concat(virtualRow.start, \"px)\")\n        }\n      });\n    }\n\n    prepareRow(row);\n    var rowProps = row.getRowProps();\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rowProps, {\n      style: {\n        height: \"\".concat(virtualRow.size, \"px\"),\n        transform: \"translateY(\".concat(virtualRow.start, \"px)\")\n      }\n    }), row.cells.map(function (cell) {\n      var _row$original;\n\n      var cellProps = cell.getCellProps();\n\n      if ((_row$original = row.original) === null || _row$original === void 0 ? void 0 : _row$original.emptyRow) {\n        return /*#__PURE__*/React.createElement(\"div\", cellProps);\n      }\n\n      var contentToRender;\n\n      if (cell.column.id == '__ui5wcr__internal_highlight_column' || cell.column.id === '__ui5wcr__internal_selection_column') {\n        contentToRender = 'Cell';\n      } else if (isTreeTable) {\n        contentToRender = 'Expandable';\n      } else if (cell.isGrouped) {\n        contentToRender = 'Grouped';\n      } else if (cell.isAggregated) {\n        contentToRender = 'Aggregated';\n      } else if (cell.isPlaceholder) {\n        contentToRender = 'RepeatedValue';\n      } else {\n        contentToRender = 'Cell';\n      } // eslint-disable-next-line react/jsx-key\n\n\n      return /*#__PURE__*/React.createElement(\"div\", cellProps, cell.render(contentToRender));\n    }));\n  })));\n};\n\nvar useStyles$1 = createComponentStyles(styles, {\n  name: 'AnalyticalTable'\n});\n/**\n * <code>import { AnalyticalTable } from '@ui5/webcomponents-react/lib/AnalyticalTable';</code><br />\n * <br />\n * ### Usage Notes\n * By default, the `AnalyticalTable` will not select any rows after clicking on active elements like a `Button`, `Link`,\n * etc. <br />\n * In case you want to select the row anyways, you can \"mark\" the event to allow such a behaviour. <br />\n * Example: `<Link onClick={(e) => {e.markerAllowTableRowSelection = true;}>My Link Text</Link>`\n */\n\nvar AnalyticalTable = forwardRef(function (props, ref) {\n  var _tableRef$current, _props$data, _props$data2, _props$data3, _props$data4;\n\n  var columns = props.columns,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      title = props.title,\n      loading = props.loading,\n      groupBy = props.groupBy,\n      selectionMode = props.selectionMode,\n      selectionBehavior = props.selectionBehavior,\n      onRowSelected = props.onRowSelected,\n      onSort = props.onSort,\n      reactTableOptions = props.reactTableOptions,\n      tableHooks = props.tableHooks,\n      busyIndicatorEnabled = props.busyIndicatorEnabled,\n      subRowsKey = props.subRowsKey,\n      onGroup = props.onGroup,\n      rowHeight = props.rowHeight,\n      selectedRowIds = props.selectedRowIds,\n      LoadingComponent = props.LoadingComponent,\n      onRowExpandChange = props.onRowExpandChange,\n      noDataText = props.noDataText,\n      NoDataComponent = props.NoDataComponent,\n      visibleRows = props.visibleRows,\n      minRows = props.minRows,\n      isTreeTable = props.isTreeTable,\n      alternateRowColor = props.alternateRowColor,\n      overscanCount = props.overscanCount,\n      scaleWidthMode = props.scaleWidthMode,\n      withRowHighlight = props.withRowHighlight,\n      _props$highlightField = props.highlightField,\n      highlightField = _props$highlightField === void 0 ? 'status' : _props$highlightField,\n      groupable = props.groupable,\n      sortable = props.sortable,\n      filterable = props.filterable,\n      infiniteScroll = props.infiniteScroll,\n      _props$infiniteScroll = props.infiniteScrollThreshold,\n      infiniteScrollThreshold = _props$infiniteScroll === void 0 ? 20 : _props$infiniteScroll,\n      onLoadMore = props.onLoadMore;\n  var classes = useStyles$1();\n\n  var _useTableScrollHandle = useTableScrollHandles(ref),\n      _useTableScrollHandle2 = _slicedToArray(_useTableScrollHandle, 2),\n      analyticalTableRef = _useTableScrollHandle2[0],\n      reactWindowRef = _useTableScrollHandle2[1];\n\n  var tableRef = useRef();\n  var extension = useDeprecateRenderMethods(props, 'renderExtension', 'extension');\n  var getSubRows = useCallback(function (row) {\n    return row[subRowsKey] || [];\n  }, [subRowsKey]);\n  var data = useMemo(function () {\n    if (minRows > props.data.length) {\n      var missingRows = minRows - props.data.length;\n      var emptyRows = Array.from({\n        length: missingRows\n      }, function (v, i) {\n        return i;\n      }).map(function () {\n        return {\n          emptyRow: true\n        };\n      });\n      return [].concat(_toConsumableArray(props.data), _toConsumableArray(emptyRows));\n    }\n\n    return props.data;\n  }, [props.data, minRows]);\n\n  var _useTable = useTable.apply(void 0, [_objectSpread({\n    columns: columns,\n    data: data,\n    defaultColumn: DefaultColumn,\n    orderByFn: orderByFn,\n    getSubRows: getSubRows,\n    stateReducer: stateReducer,\n    disableFilters: !filterable,\n    disableSortBy: !sortable,\n    disableGroupBy: !groupable,\n    webComponentsReactProperties: {\n      tableRef: tableRef,\n      selectionMode: selectionMode,\n      selectionBehavior: selectionBehavior,\n      classes: classes,\n      onRowSelected: onRowSelected,\n      onRowExpandChange: onRowExpandChange,\n      isTreeTable: isTreeTable,\n      alternateRowColor: alternateRowColor,\n      scaleWidthMode: scaleWidthMode,\n      loading: loading,\n      withRowHighlight: withRowHighlight,\n      highlightField: highlightField\n    }\n  }, reactTableOptions), useFilters, useGroupBy, useColumnOrder, useSortBy, useExpanded, useRowSelect, useResizeColumns, useRowSelectionColumn, useSingleRowStateSelection, useRowHighlight, useDynamicColumnWidths, useStyling, useToggleRowExpand].concat(_toConsumableArray(tableHooks))),\n      getTableProps = _useTable.getTableProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow,\n      tableState = _useTable.state,\n      tableInternalColumns = _useTable.columns,\n      setColumnOrder = _useTable.setColumnOrder,\n      dispatch = _useTable.dispatch,\n      totalColumnsWidth = _useTable.totalColumnsWidth,\n      selectedFlatRows = _useTable.selectedFlatRows; // scroll bar detection\n\n\n  useEffect(function () {\n    var visibleRowCount = rows.length < visibleRows ? Math.max(rows.length, minRows) : visibleRows;\n    dispatch({\n      type: 'TABLE_SCROLLING_ENABLED',\n      payload: {\n        isScrollable: rows.length > visibleRowCount\n      }\n    });\n  }, [rows.length, minRows, visibleRows]);\n  var updateTableClientWidth = useCallback(function () {\n    if (tableRef.current) {\n      dispatch({\n        type: 'TABLE_RESIZE',\n        payload: {\n          tableClientWidth: tableRef.current.clientWidth\n        }\n      });\n    }\n  }, []);\n  useEffect(function () {\n    // @ts-ignore\n    var tableWidthObserver = new ResizeObserver(debounce(updateTableClientWidth, 500));\n    tableWidthObserver.observe(tableRef.current);\n    return function () {\n      tableWidthObserver.disconnect();\n    };\n  }, [updateTableClientWidth]);\n  useEffect(function () {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n  useEffect(function () {\n    dispatch({\n      type: 'SET_GROUP_BY',\n      payload: groupBy\n    });\n  }, [groupBy, dispatch]);\n  useEffect(function () {\n    dispatch({\n      type: 'SET_SELECTED_ROWS',\n      selectedIds: selectedRowIds\n    });\n  }, [selectedRowIds, dispatch]);\n  var calcRowHeight = parseInt(getComputedStyle((_tableRef$current = tableRef.current) !== null && _tableRef$current !== void 0 ? _tableRef$current : document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44');\n  var internalRowHeight = rowHeight !== null && rowHeight !== void 0 ? rowHeight : calcRowHeight;\n  var tableBodyHeight = useMemo(function () {\n    var rowNum = rows.length < visibleRows ? Math.max(rows.length, minRows) : visibleRows;\n    return internalRowHeight * rowNum;\n  }, [internalRowHeight, rows.length, visibleRows, minRows]);\n  var noDataStyles = useMemo(function () {\n    return {\n      height: \"\".concat(tableBodyHeight, \"px\"),\n      width: \"\".concat(totalColumnsWidth, \"px\")\n    };\n  }, [tableBodyHeight, totalColumnsWidth]);\n  var onGroupByChanged = useCallback(function (e) {\n    var _e$detail = e.detail,\n        column = _e$detail.column,\n        isGrouped = _e$detail.isGrouped;\n    var groupedColumns = [];\n\n    if (isGrouped) {\n      groupedColumns = [].concat(_toConsumableArray(tableState.groupBy), [column.id]);\n    } else {\n      groupedColumns = tableState.groupBy.filter(function (group) {\n        return group !== column.id;\n      });\n    }\n\n    dispatch({\n      type: 'SET_GROUP_BY',\n      payload: groupedColumns\n    });\n    onGroup(enrichEventWithDetails(e, {\n      column: column,\n      groupedColumns: groupedColumns\n    }));\n  }, [tableState.groupBy, onGroup, dispatch]);\n\n  var _useDragAndDrop = useDragAndDrop(props, setColumnOrder, tableState.columnOrder, tableState.columnResizing, tableInternalColumns),\n      _useDragAndDrop2 = _slicedToArray(_useDragAndDrop, 6),\n      dragOver = _useDragAndDrop2[0],\n      handleDragEnter = _useDragAndDrop2[1],\n      handleDragStart = _useDragAndDrop2[2],\n      handleDragOver = _useDragAndDrop2[3],\n      handleOnDrop = _useDragAndDrop2[4],\n      handleOnDragEnd = _useDragAndDrop2[5];\n\n  var passThroughProps = usePassThroughHtmlProps(props, ['onSort', 'onGroup', 'onRowSelected', 'onRowExpandChange', 'onColumnsReordered', 'onLoadMore']);\n  var inlineStyle = useMemo(function () {\n    var tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto'\n    };\n\n    if (!!rowHeight) {\n      tableStyles['--sapWcrAnalyticalTableRowHeight'] = \"\".concat(rowHeight, \"px\");\n    }\n\n    if (tableState.tableClientWidth > 0) {\n      return _objectSpread(_objectSpread({}, tableStyles), style);\n    }\n\n    return _objectSpread(_objectSpread(_objectSpread({}, tableStyles), style), {}, {\n      visibility: 'hidden'\n    });\n  }, [tableState.tableClientWidth, style, rowHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: className,\n    style: inlineStyle,\n    title: tooltip,\n    ref: analyticalTableRef\n  }, passThroughProps), title && /*#__PURE__*/React.createElement(TitleBar, null, title), extension && /*#__PURE__*/React.createElement(\"div\", null, extension), /*#__PURE__*/React.createElement(\"div\", _extends({}, getTableProps(), {\n    role: \"grid\",\n    \"aria-rowcount\": rows.length,\n    \"aria-colcount\": tableInternalColumns.length,\n    \"data-per-page\": visibleRows,\n    ref: tableRef\n  }), headerGroups.map(function (headerGroup) {\n    var headerProps = {};\n\n    if (headerGroup.getHeaderGroupProps) {\n      headerProps = headerGroup.getHeaderGroupProps();\n    }\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/jsx-key\n      React.createElement(\"header\", _extends({}, headerProps, {\n        role: \"rowgroup\"\n      }), headerGroup.headers.map(function (column) {\n        return (\n          /*#__PURE__*/\n          // eslint-disable-next-line react/jsx-key\n          React.createElement(ColumnHeader, _extends({}, column.getHeaderProps(), {\n            onSort: onSort,\n            onGroupBy: onGroupByChanged,\n            onDragStart: handleDragStart,\n            onDragOver: handleDragOver,\n            onDrop: handleOnDrop,\n            onDragEnter: handleDragEnter,\n            onDragEnd: handleOnDragEnd,\n            dragOver: column.id === dragOver,\n            isDraggable: !isTreeTable && column.canReorder\n          }), column.render('Header'))\n        );\n      }))\n    );\n  }), loading && busyIndicatorEnabled && ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length) > 0 && /*#__PURE__*/React.createElement(LoadingComponent, {\n    style: {\n      width: \"\".concat(totalColumnsWidth, \"px\")\n    }\n  }), loading && ((_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.length) === 0 && /*#__PURE__*/React.createElement(TablePlaceholder, {\n    columns: tableInternalColumns.filter(function (col) {\n      var _col$isVisible;\n\n      return ((_col$isVisible = col.isVisible) !== null && _col$isVisible !== void 0 ? _col$isVisible : true) && !tableState.hiddenColumns.includes(col.accessor);\n    }),\n    rows: props.minRows,\n    style: noDataStyles,\n    rowHeight: internalRowHeight,\n    tableWidth: totalColumnsWidth\n  }), !loading && ((_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.length) === 0 && /*#__PURE__*/React.createElement(NoDataComponent, {\n    noDataText: noDataText,\n    className: classes.noDataContainer,\n    style: noDataStyles\n  }), ((_props$data4 = props.data) === null || _props$data4 === void 0 ? void 0 : _props$data4.length) > 0 && /*#__PURE__*/React.createElement(VirtualTableBody, {\n    classes: classes,\n    prepareRow: prepareRow,\n    rows: rows,\n    minRows: minRows,\n    selectionMode: selectionMode,\n    reactWindowRef: reactWindowRef,\n    isTreeTable: isTreeTable,\n    internalRowHeight: internalRowHeight,\n    tableBodyHeight: tableBodyHeight,\n    visibleRows: visibleRows,\n    alternateRowColor: alternateRowColor,\n    overscanCount: overscanCount,\n    totalColumnsWidth: totalColumnsWidth,\n    infiniteScroll: infiniteScroll,\n    infiniteScrollThreshold: infiniteScrollThreshold,\n    onLoadMore: onLoadMore\n  })));\n});\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n  loading: false,\n  busyIndicatorEnabled: true,\n  sortable: true,\n  filterable: false,\n  groupable: false,\n  selectionMode: TableSelectionMode.NONE,\n  selectionBehavior: TableSelectionBehavior.ROW,\n  scaleWidthMode: TableScaleWidthMode.Default,\n  data: [],\n  columns: [],\n  title: null,\n  minRows: 5,\n  groupBy: [],\n  NoDataComponent: DefaultNoDataComponent,\n  LoadingComponent: DefaultLoadingComponent,\n  noDataText: 'No Data',\n  reactTableOptions: {},\n  tableHooks: [],\n  visibleRows: 15,\n  subRowsKey: 'subRows',\n  selectedRowIds: {},\n  onGroup: function onGroup() {},\n  onRowExpandChange: function onRowExpandChange() {},\n  onColumnsReordered: function onColumnsReordered() {},\n  isTreeTable: false,\n  alternateRowColor: false\n};\nexport { AnalyticalTable };","map":{"version":3,"sources":["../src/components/AnalyticalTable/AnayticalTable.jss.ts","../src/components/AnalyticalTable/ColumnHeader/ColumnHeaderModal.tsx","../src/components/AnalyticalTable/ColumnHeader/index.tsx","../src/components/AnalyticalTable/defaults/FilterComponent/index.tsx","../src/components/AnalyticalTable/defaults/Column/Cell.tsx","../src/components/AnalyticalTable/defaults/Column/Expandable.tsx","../src/components/AnalyticalTable/defaults/Column/Grouped.tsx","../src/components/AnalyticalTable/defaults/Column/RepeatedValue.tsx","../src/components/AnalyticalTable/defaults/Column/index.tsx","../src/components/AnalyticalTable/defaults/LoadingComponent/index.tsx","../src/components/AnalyticalTable/defaults/LoadingComponent/TablePlaceholder.tsx","../src/components/AnalyticalTable/defaults/NoDataComponent/index.tsx","../src/components/AnalyticalTable/hooks/useDragAndDrop.ts","../src/components/AnalyticalTable/hooks/useDynamicColumnWidths.ts","../src/components/AnalyticalTable/hooks/useRowHighlight.tsx","../src/components/AnalyticalTable/hooks/useRowSelectionColumn.tsx","../src/components/AnalyticalTable/hooks/useSingleRowStateSelection.ts","../src/components/AnalyticalTable/hooks/useStyling.ts","../src/components/AnalyticalTable/hooks/useTableScrollHandles.ts","../src/components/AnalyticalTable/hooks/useToggleRowExpand.ts","../src/components/AnalyticalTable/util/deepCompare.ts","../src/components/AnalyticalTable/tableReducer/stateReducer.ts","../src/components/AnalyticalTable/TitleBar/index.tsx","../src/components/AnalyticalTable/util/index.ts","../src/components/AnalyticalTable/virtualization/VirtualTableBody.tsx","../src/components/AnalyticalTable/index.tsx"],"names":["styles","table","position","width","maxWidth","overflowY","overflowX","height","minHeight","fontFamily","ThemingParameters","fontSize","fontWeight","tableHeaderRow","CssSizeVariables","display","th","backgroundColor","color","borderTop","borderBottom","borderRight","padding","textAlign","boxSizing","borderLeft","transform","tbody","alternateRowColor","sapList_AlternatingBackground","tr","top","left","sapList_Hover_Background","sapList_SelectionBackgroundColor","sapList_Hover_SelectionBackground","trActive","cursor","sapList_Active_TextColor","tableGroupHeader","border","tableCell","overflow","textOverflow","whiteSpace","alignItems","outlineOffset","outline","noDataContainer","justifyContent","staticStyle","ColumnHeaderModal","forwardRef","column","onSort","onGroupBy","props","showFilter","showGroup","showSort","Filter","i18nBundle","useI18nBundle","handleSort","useCallback","sortType","e","enrichEventWithDetails","sortDirection","willGroup","isGrouped","ref","isSortedAscending","isSortedDescending","PopoverHorizontalAlign","PlacementType","ListItemTypes","FlexBoxAlignItems","paddingRight","minWidth","header","background","text","iconContainer","right","getRTL","undefined","resizer","zIndex","useStyles","createComponentStyles","name","ColumnHeader","classes","id","children","className","style","onDragEnter","onDragOver","onDragStart","onDrop","onDragEnd","isDraggable","dragOver","role","isFiltered","sortingIcon","filterIcon","groupingIcon","textStyle","useMemo","margin","marginLeft","marginRight","hasPopover","innerStyle","modifiedStyles","popoverRef","useRef","onOpenPopover","hAlign","DefaultFilterComponent","handleChange","Cell","cell","value","row","cellContent","tableGroupExpandCollapseIcon","getPadding","level","Expandable","columns","tableColumns","columnIndex","col","paddingLeft","Grouped","TextAlign","RepeatedValue","DEFAULT_COLUMN_WIDTH","defaultFilterMethod","filter","String","DefaultColumn","canResize","canReorder","vAlign","VerticalAlign","defaultFilter","DefaultLoadingComponent","getArrayOfLength","Array","TableRow","y","columnOffset","el","TablePlaceholder","rows","rowHeight","tableWidth","innerStyles","sapList_Background","sapContent_DisabledOpacity","index","DefaultNoDataComponent","noDataText","getColumnId","useDragAndDrop","onColumnsReordered","setDragOver","useState","handleDragStart","resizeInfo","handleDragOver","handleDragEnter","handleOnDrop","droppedColId","draggedColId","internalColumnOrder","columnOrder","droppedColIdx","draggedColIdx","tempCols","setColumnOrder","columnsNewOrder","handleOnDragEnd","ROW_SAMPLE_SIZE","DEFAULT_HEADER_NUM_CHAR","MAX_WIDTH","approximateHeaderPxFromCharLength","charLength","Math","approximateContentPxFromCharLength","columnsDeps","state","webComponentsReactProperties","instance","hiddenColumns","totalWidth","scaleWidthMode","loading","visibleColumns","item","calculateDefaultTableWidth","columnsWithFixedWidth","fixedWidth","acc","defaultColumnsCount","hasData","TableScaleWidthMode","defaultWidth","rowSample","columnMeta","minHeaderWidth","fullWidth","contentCharAvg","headerLength","contentMaxCharLength","dataPoint","val","totalCharNum","reservedWidth","availableWidth","isColumnVisible","additionalSpaceFactor","targetWidth","useDynamicColumnWidths","hooks","baseStyles","StyleMap","ValueState","sapSuccessColor","sapWarningColor","sapErrorColor","sapInformationColor","Header","visibleColumnsDeps","highlightColumn","withRowHighlight","highlightField","accessor","disableFilters","disableSortBy","disableGroupBy","disableResizing","useRowHighlight","divStyle","customCheckBoxStyling","verticalAlign","getToggleAllRowsSelectedProps","flatRows","onRowSelected","selectionMode","toggleAllRowsSelected","onChange","allRowsSelected","selectedFlatRows","TableSelectionMode","selectionBehavior","handleCellClick","TableSelectionBehavior","columnDeps","selectionColumn","tableRef","selectionColumnWidth","parseInt","getComputedStyle","CssSizeVariablesNames","useRowSelectionColumn","prepareRow","selectionCellClick","getRowProps","onClick","selectSingleRow","tagNamesWhichShouldNotSelectARow","useInstance","dispatch","toggleRowSelected","isTreeTable","isEmptyRow","type","selectedIds","Object","payload","isSelected","payloadWithFlatRows","prevRow","useSingleRowStateSelection","getTableProps","getHeaderGroupProps","getHeaderProps","isRTL","lastColumnId","isLastColumn","ROW_SELECTION_ATTRIBUTE","rowCanBeSelected","newRowProps","getCellProps","tabIndex","useStyling","useTableScrollHandles","analyticalTableRef","useConsolidatedRef","reactWindowRef","useEffect","scrollTo","align","scrollToItem","getToggleRowExpandedProps","onRowExpandChange","useToggleRowExpand","obj1","obj2","deepCompare","p","stateReducer","action","newState","groupBy","selectedRowIds","tableClientWidth","isScrollable","TitleBar","isValidElement","orderByFn","wrapSortFn","desc","directions","rowB","rowA","sortFn","wrappedSortfunctions","functions","defaultOrderByFn","VirtualTableBody","minRows","internalRowHeight","tableBodyHeight","visibleRows","overscanCount","totalColumnsWidth","infiniteScroll","infiniteScrollThreshold","onLoadMore","firedInfiniteLoadEvents","itemCount","overscan","parentRef","rowVirtualizer","useVirtual","size","estimateSize","scrollToOffset","scrollToIndex","classNames","StyleClassHelper","GlobalStyleClasses","lastScrollTop","onScroll","scrollOffset","event","isScrollingDown","currentTopRow","detail","rowCount","length","currentlyFocusedCell","onTableFocus","firstCell","onKeyboardNavigation","newElement","nextRow","currentColumnIndex","previousRow","virtualRow","rowProps","cellProps","contentToRender","AnalyticalTable","tooltip","title","reactTableOptions","tableHooks","busyIndicatorEnabled","subRowsKey","onGroup","LoadingComponent","NoDataComponent","groupable","sortable","filterable","extension","useDeprecateRenderMethods","getSubRows","data","missingRows","emptyRows","emptyRow","headerGroups","tableState","tableInternalColumns","defaultColumn","visibleRowCount","updateTableClientWidth","clientWidth","tableWidthObserver","debounce","calcRowHeight","document","rowNum","noDataStyles","onGroupByChanged","groupedColumns","group","passThroughProps","usePassThroughHtmlProps","inlineStyle","tableStyles","visibility","headerProps","headerGroup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EADH,UAAA;AAELC,IAAAA,KAAK,EAFA,MAAA;AAGLC,IAAAA,QAAQ,EAHH,MAAA;AAILC,IAAAA,SAAS,EAJJ,QAAA;AAKLC,IAAAA,SAAS,EALJ,MAAA;AAMLC,IAAAA,MAAM,EAND,MAAA;AAOLC,IAAAA,SAAS,EAPJ,MAAA;AAQLC,IAAAA,UAAU,EAAEC,iBAAiB,CARxB,aAAA;AASLC,IAAAA,QAAQ,EAAED,iBAAiB,CATtB,WAAA;AAULE,IAAAA,UAAU,EAAE;AAVP,GADM;AAabC,EAAAA,cAAc,EAAE;AACdN,IAAAA,MAAM,EAAEO,gBAAgB,CADV,8BAAA;AAEdZ,IAAAA,QAAQ,EAFM,UAAA;AAGda,IAAAA,OAAO,EAAE;AAHK,GAbH;AAkBbC,EAAAA,EAAE,EAAE;AACFC,IAAAA,eAAe,EAAEP,iBAAiB,CADhC,wBAAA;AAEFH,IAAAA,MAAM,EAAEO,gBAAgB,CAFtB,8BAAA;AAGFI,IAAAA,KAAK,EAAER,iBAAiB,CAHtB,uBAAA;AAIFS,IAAAA,SAAS,EAAA,aAAA,MAAA,CAAeT,iBAAiB,CAJvC,mBAIO,CAJP;AAKFU,IAAAA,YAAY,EAAA,aAAA,MAAA,CAAeV,iBAAiB,CAL1C,mBAKU,CALV;AAMFW,IAAAA,WAAW,EAAA,aAAA,MAAA,CAAeX,iBAAiB,CANzC,mBAMS,CANT;AAOFY,IAAAA,OAAO,EAPL,UAAA;AAQFC,IAAAA,SAAS,EARP,OAAA;AASFC,IAAAA,SAAS,EATP,YAAA;AAUF,qBAAiB;AACfC,MAAAA,UAAU,EAAA,aAAA,MAAA,CAAef,iBAAiB,CAAhC,mBAAA;AADK,KAVf;AAaF,oBAAgB;AACd,0BAAoB;AAClBgB,QAAAA,SAAS,EAAE;AADO;AADN;AAbd,GAlBS;AAqCbC,EAAAA,KAAK,EAAE;AACLzB,IAAAA,QAAQ,EADH,UAAA;AAELe,IAAAA,eAAe,EAAEP,iBAAiB,CAF7B,kBAAA;AAGLJ,IAAAA,SAAS,EAHJ,QAAA;AAILD,IAAAA,SAAS,EAAE;AAJN,GArCM;AA2CbuB,EAAAA,iBAAiB,EAAE;AACjBX,IAAAA,eAAe,EAAEP,iBAAiB,CAACmB;AADlB,GA3CN;AA8CbC,EAAAA,EAAE,EAAE;AACF5B,IAAAA,QAAQ,EADN,UAAA;AAEF6B,IAAAA,GAAG,EAFD,CAAA;AAGFC,IAAAA,IAAI,EAHF,CAAA;AAIF7B,IAAAA,KAAK,EAJH,MAAA;AAKFe,IAAAA,KAAK,EAAER,iBAAiB,CALtB,iBAAA;AAMFU,IAAAA,YAAY,EAAA,aAAA,MAAA,CAAeV,iBAAiB,CAN1C,mBAMU,CANV;AAOFc,IAAAA,SAAS,EAPP,YAAA;AAQFT,IAAAA,OAAO,EARL,MAAA;AASFR,IAAAA,MAAM,EAAEO,gBAAgB,CATtB,8BAAA;AAUF,eAAW;AACTG,MAAAA,eAAe,EAAEP,iBAAiB,CAACuB;AAD1B,KAVT;AAaF,2BAAuB;AACrBb,MAAAA,YAAY,EAAA,aAAA,MAAA,CAAeV,iBAAiB,CADvB,4BACT,CADS;AAErBO,MAAAA,eAAe,EAAEP,iBAAiB,CAACwB;AAFd,KAbrB;AAiBF,iCAA6B;AAC3BjB,MAAAA,eAAe,EAAEP,iBAAiB,CAACyB;AADR;AAjB3B,GA9CS;AAmEbC,EAAAA,QAAQ,EAAE;AACR,eAAW;AACTC,MAAAA,MAAM,EAAE;AADC,KADH;AAIR,gBAAY;AACVpB,MAAAA,eAAe,EAAEP,iBAAiB,CADxB,yBAAA;AAEV,sBAAgB;AACdW,QAAAA,WAAW,EAAA,aAAA,MAAA,CAAeX,iBAAiB,CAD7B,yBACH,CADG;AAEdQ,QAAAA,KAAK,EAAA,GAAA,MAAA,CAAKR,iBAAiB,CAFb,wBAET,CAFS;AAGd,0BAAkBA,iBAAiB,CAAC4B;AAHtB;AAFN;AAJJ,GAnEG;AAgFbC,EAAAA,gBAAgB,EAAE;AAChB,YAAQ;AACNtB,MAAAA,eAAe,EAAA,GAAA,MAAA,CAAKP,iBAAiB,CAD/B,kCACS,CADT;AAEN8B,MAAAA,MAAM,EAAA,aAAA,MAAA,CAAe9B,iBAAiB,CAFhC,mCAEA,CAFA;AAGNQ,MAAAA,KAAK,EAAER,iBAAiB,CAHlB,iBAAA;AAIN,sBAAgB;AACdW,QAAAA,WAAW,EAAE;AADC;AAJV;AADQ,GAhFL;AA0FboB,EAAAA,SAAS,EAAE;AACTlC,IAAAA,MAAM,EAAEO,gBAAgB,CADf,8BAAA;AAETU,IAAAA,SAAS,EAFA,YAAA;AAGTH,IAAAA,WAAW,EAAA,aAAA,MAAA,CAAeX,iBAAiB,CAHlC,mBAGE,CAHF;AAITK,IAAAA,OAAO,EAJE,aAAA;AAKTO,IAAAA,OAAO,EALE,UAAA;AAMT,qBAAiB;AACfG,MAAAA,UAAU,EAAA,aAAA,MAAA,CAAef,iBAAiB,CAAhC,mBAAA;AADK,KANR;AASTgC,IAAAA,QAAQ,EATC,QAAA;AAUTC,IAAAA,YAAY,EAVH,UAAA;AAWTC,IAAAA,UAAU,EAXD,QAAA;AAYTC,IAAAA,UAAU,EAZD,QAAA;AAaT3C,IAAAA,QAAQ,EAbC,UAAA;AAcT,eAAW;AACT4C,MAAAA,aAAa,EADJ,MAAA;AAETC,MAAAA,OAAO,EAAA,cAAA,MAAA,CAAgBrC,iBAAiB,CAAjC,qBAAA;AAFE;AAdF,GA1FE;AA6GbsC,EAAAA,eAAe,EAAE;AACfjC,IAAAA,OAAO,EADQ,MAAA;AAEfkC,IAAAA,cAAc,EAFC,QAAA;AAGfJ,IAAAA,UAAU,EAHK,QAAA;AAIftC,IAAAA,MAAM,EAJS,MAAA;AAKfU,IAAAA,eAAe,EAAEP,iBAAiB,CALnB,kBAAA;AAMfP,IAAAA,KAAK,EANU,MAAA;AAOfqB,IAAAA,SAAS,EAPM,YAAA;AAQfN,IAAAA,KAAK,EAAER,iBAAiB,CART,iBAAA;AASfD,IAAAA,UAAU,EAAEC,iBAAiB,CATd,aAAA;AAUfC,IAAAA,QAAQ,EAAED,iBAAiB,CAVZ,WAAA;AAWfE,IAAAA,UAAU,EAXK,QAAA;AAYfQ,IAAAA,YAAY,EAAA,aAAA,MAAA,CAAeV,iBAAiB,CAAhC,mBAAA;AAZG;AA7GJ,CAAf;AC2BA,IAAMwC,WAAW,GAAG;AAAEtC,EAAAA,UAAU,EAAE;AAAd,CAApB;AAEO,IAAMuC,iBAAiB,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAA0E;AAAA,MAC5GC,MAD4G,GAC9EG,KAD8E,CAAA,MAAA;AAAA,MACpGF,MADoG,GAC9EE,KAD8E,CAAA,MAAA;AAAA,MAC5FD,SAD4F,GAC9EC,KAD8E,CAAA,SAAA;AAEpH,MAAMC,UAAU,GAAGJ,MAAM,CAAzB,SAAA;AACA,MAAMK,SAAS,GAAGL,MAAM,CAAxB,UAAA;AACA,MAAMM,QAAQ,GAAGN,MAAM,CAAvB,OAAA;AAJoH,MAM5GO,MAN4G,GAMjGP,MANiG,CAAA,MAAA;AAQpH,MAAMQ,UAAU,GAAGC,aAAa,CAAhC,0BAAgC,CAAhC;AAEA,MAAMC,UAAU,GAAGC,WAAW,CAC5B,UAAA,CAAA,EAAO;AACL,QAAMC,QAAQ,GAAGC,CAAC,CAADA,MAAAA,CAAAA,IAAAA,CAAAA,YAAAA,CAAjB,WAAiBA,CAAjB;;AAEA,YAAA,QAAA;AACE,WAAA,KAAA;AACEb,QAAAA,MAAM,CAANA,YAAAA,CAAAA,KAAAA;;AACA,YAAI,OAAA,MAAA,KAAJ,UAAA,EAAkC;AAChCC,UAAAA,MAAM,CACJa,sBAAsB,CAAA,CAAA,EAAI;AACxBd,YAAAA,MAAM,EADkB,MAAA;AAExBe,YAAAA,aAAa,EAAEH;AAFS,WAAJ,CADlB,CAANX;AAMD;;AACD;;AACF,WAAA,MAAA;AACED,QAAAA,MAAM,CAANA,YAAAA,CAAAA,IAAAA;;AACA,YAAI,OAAA,MAAA,KAAJ,UAAA,EAAkC;AAChCC,UAAAA,MAAM,CACJa,sBAAsB,CAAA,CAAA,EAAI;AACxBd,YAAAA,MAAM,EADkB,MAAA;AAExBe,YAAAA,aAAa,EAAEH;AAFS,WAAJ,CADlB,CAANX;AAMD;;AACD;;AACF,WAAA,OAAA;AACED,QAAAA,MAAM,CAANA,WAAAA;;AACA,YAAI,OAAA,MAAA,KAAJ,UAAA,EAAkC;AAChCC,UAAAA,MAAM,CACJa,sBAAsB,CAAA,CAAA,EAAI;AACxBd,YAAAA,MAAM,EADkB,MAAA;AAExBe,YAAAA,aAAa,EAAEH;AAFS,WAAJ,CADlB,CAANX;AAMD;;AACD;;AACF,WAAA,OAAA;AACE,YAAMe,SAAS,GAAG,CAAChB,MAAM,CAAzB,SAAA;AACAA,QAAAA,MAAM,CAANA,aAAAA,CAAAA,SAAAA;;AACA,YAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnCE,UAAAA,SAAS,CACPY,sBAAsB,CAAA,CAAA,EAAI;AACxBd,YAAAA,MAAM,EADkB,MAAA;AAExBiB,YAAAA,SAAS,EAAED;AAFa,WAAJ,CADf,CAATd;AAMD;;AACD;AA7CJ;;AA+CA,QAAIgB,GAAG,CAAP,OAAA,EAAiB;AACfA,MAAAA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA;AACD;AArDyB,GAAA,EAuD5B,CAAA,MAAA,EAAA,GAAA,EAAA,SAAA,EAvDF,MAuDE,CAvD4B,CAA9B;AA0DA,MAAMC,iBAAiB,GAAGnB,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,YAAAA,KAA7C,KAAA;AACA,MAAMoB,kBAAkB,GAAGpB,MAAM,CAANA,QAAAA,IAAmBA,MAAM,CAANA,YAAAA,KAA9C,IAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,OAAO,EADT,IAAA;AAEE,IAAA,eAAe,EAAEqB,sBAAsB,CAFzC,IAAA;AAGE,IAAA,aAAa,EAAEC,aAAa,CAH9B,MAAA;AAIE,IAAA,GAAG,EAJL,GAAA;AAKE,IAAA,KAAK,EAAEzB;AALT,GAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,WAAW,EAAEa;AAAnB,GAAA,EACGS,iBAAiB,IAAA,aAChB,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,IAAI,EAAEI,aAAa,CAArC,MAAA;AAA8C,IAAA,IAAI,EAAlD,SAAA;AAA6D,iBAAU;AAAvE,GAAA,EACGf,UAAU,CAAVA,OAAAA,CAHP,aAGOA,CADH,CAFJ,EAMGF,QAAQ,IAAI,CAAZA,iBAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,IAAI,EAAEiB,aAAa,CAArC,MAAA;AAA8C,IAAA,IAAI,EAAlD,gBAAA;AAAoE,iBAAU;AAA9E,GAAA,EACGf,UAAU,CAAVA,OAAAA,CARP,cAQOA,CADH,CAPJ,EAWGF,QAAQ,IAAI,CAAZA,kBAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,IAAI,EAAEiB,aAAa,CAArC,MAAA;AAA8C,IAAA,IAAI,EAAlD,iBAAA;AAAqE,iBAAU;AAA/E,GAAA,EACGf,UAAU,CAAVA,OAAAA,CAbP,eAaOA,CADH,CAZJ,EAgBGY,kBAAkB,IAAA,aACjB,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,IAAI,EAAEG,aAAa,CAArC,MAAA;AAA8C,IAAA,IAAI,EAAlD,SAAA;AAA6D,iBAAU;AAAvE,GAAA,EACGf,UAAU,CAAVA,OAAAA,CAlBP,aAkBOA,CADH,CAjBJ,EAqBGJ,UAAU,IAAI,CAACJ,MAAM,CAArBI,SAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AACE,IAAA,UAAU,EAAEoB,iBAAiB,CAD/B,MAAA;AAEE,IAAA,KAAK,EAAE;AACLvD,MAAAA,OAAO,EADF,UAAA;AAELf,MAAAA,MAAM,EAFD,qCAAA;AAGLa,MAAAA,YAAY,EAAA,aAAA,MAAA,CAAeV,iBAAiB,CAAhC,mBAAA;AAHP;AAFT,GAAA,EAAA,aAQE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAV,QAAA;AAAoB,IAAA,KAAK,EAAE;AAAEoE,MAAAA,YAAY,EAAd,QAAA;AAA0BC,MAAAA,QAAQ,EAAlC,MAAA;AAA4CvE,MAAAA,SAAS,EAAE;AAAvD;AAA3B,GAAA,CARF,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,MAAM,EAAd,MAAA;AAAwB,IAAA,UAAU,EAAE+D;AAApC,GAAA,CATF,CAtBJ,EAkCGb,SAAS,IAAA,aACR,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,IAAI,EAAEkB,aAAa,CAArC,MAAA;AAA8C,IAAA,IAAI,EAAlD,SAAA;AAA6D,iBAAW;AAAxE,GAAA,EACGf,UAAU,CAAVA,OAAAA,CAAmBR,MAAM,CAANA,SAAAA,GAAAA,OAAAA,GA5C9B,KA4CWQ,CADH,CAnCJ,CAPF,CADF;AAvEK,CAAoC,CAApC;AA0HPV,iBAAiB,CAAjBA,WAAAA,GAAAA,mBAAAA;AC9GA,IAAMnD,QAAM,GAAG;AACbgF,EAAAA,MAAM,EAAE;AACNzE,IAAAA,MAAM,EADA,MAAA;AAENQ,IAAAA,OAAO,EAFD,MAAA;AAGNkC,IAAAA,cAAc,EAHR,OAAA;AAINJ,IAAAA,UAAU,EAJJ,QAAA;AAKNtB,IAAAA,SAAS,EALH,MAAA;AAMNd,IAAAA,UAAU,EAAEC,iBAAiB,CANvB,aAAA;AAONC,IAAAA,QAAQ,EAAED,iBAAiB,CAPrB,WAAA;AAQNE,IAAAA,UAAU,EARJ,QAAA;AASNM,IAAAA,KAAK,EAAER,iBAAiB,CATlB,iBAAA;AAUNuE,IAAAA,UAAU,EAAEvE,iBAAiB,CAVvB,wBAAA;AAWNiC,IAAAA,YAAY,EAXN,UAAA;AAYNC,IAAAA,UAAU,EAZJ,QAAA;AAaNxC,IAAAA,QAAQ,EAbF,MAAA;AAcNF,IAAAA,QAAQ,EAdF,UAAA;AAeNC,IAAAA,KAAK,EAfC,MAAA;AAgBNG,IAAAA,SAAS,EAhBH,QAAA;AAiBND,IAAAA,SAAS,EAjBH,QAAA;AAkBNmB,IAAAA,SAAS,EAlBH,YAAA;AAmBN,6BAAyB;AACvB,iBAAW;AACTD,QAAAA,SAAS,EAAE;AADF;AADY;AAnBnB,GADK;AA0Bb2D,EAAAA,IAAI,EAAE;AACJ/E,IAAAA,KAAK,EADD,MAAA;AAEJoB,IAAAA,SAAS,EAAE;AAFP,GA1BO;AA8Bb4D,EAAAA,aAAa,EAAE;AACbpE,IAAAA,OAAO,EADM,cAAA;AAEbb,IAAAA,QAAQ,EAFK,UAAA;AAGbgB,IAAAA,KAAK,EAAER,iBAAiB,CAHX,oBAAA;AAIb0E,IAAAA,KAAK,EAAEC,MAAM,OAANA,KAAAA,GAAAA,QAAAA,GAJM,SAAA;AAKbrD,IAAAA,IAAI,EAAEqD,MAAM,OAANA,IAAAA,GAAAA,QAAAA,GAA+BC;AALxB,GA9BF;AAqCbC,EAAAA,OAAO,EAAE;AACPxE,IAAAA,OAAO,EADA,cAAA;AAEPZ,IAAAA,KAAK,EAFE,MAAA;AAGPI,IAAAA,MAAM,EAHC,MAAA;AAIPL,IAAAA,QAAQ,EAJD,UAAA;AAKPkF,IAAAA,KAAK,EALE,CAAA;AAMPrD,IAAAA,GAAG,EANI,CAAA;AAOPL,IAAAA,SAAS,EAPF,iBAAA;AAQP8D,IAAAA,MAAM,EAAE;AARD;AArCI,CAAf;AAiDA,IAAMC,SAAS,GAAGC,qBAAqB,CAAA,QAAA,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAvC;AAEA;;;;AAGO,IAAMC,YAAmC,GAAG,SAAtCA,YAAsC,CAAA,KAAA,EAA8B;AAC/E,MAAMC,OAAO,GAAGJ,SAAS,CAAzB,KAAyB,CAAzB;AAD+E,MAI7EK,EAJ6E,GAmB3EtC,KAnB2E,CAAA,EAAA;AAAA,MAK7EuC,QAL6E,GAmB3EvC,KAnB2E,CAAA,QAAA;AAAA,MAM7EH,MAN6E,GAmB3EG,KAnB2E,CAAA,MAAA;AAAA,MAO7EwC,SAP6E,GAmB3ExC,KAnB2E,CAAA,SAAA;AAAA,MAQ7EyC,KAR6E,GAmB3EzC,KAnB2E,CAAA,KAAA;AAAA,MAS7EF,MAT6E,GAmB3EE,KAnB2E,CAAA,MAAA;AAAA,MAU7ED,SAV6E,GAmB3EC,KAnB2E,CAAA,SAAA;AAAA,MAW7E0C,WAX6E,GAmB3E1C,KAnB2E,CAAA,WAAA;AAAA,MAY7E2C,UAZ6E,GAmB3E3C,KAnB2E,CAAA,UAAA;AAAA,MAa7E4C,WAb6E,GAmB3E5C,KAnB2E,CAAA,WAAA;AAAA,MAc7E6C,MAd6E,GAmB3E7C,KAnB2E,CAAA,MAAA;AAAA,MAe7E8C,SAf6E,GAmB3E9C,KAnB2E,CAAA,SAAA;AAAA,MAgB7E+C,WAhB6E,GAmB3E/C,KAnB2E,CAAA,WAAA;AAAA,MAiB7EgD,QAjB6E,GAmB3EhD,KAnB2E,CAAA,QAAA;AAAA,MAkB7EiD,IAlB6E,GAmB3EjD,KAnB2E,CAAA,IAAA;AAqB/E,MAAMkD,UAAU,GAAGrD,MAAM,CAANA,WAAAA,IAAsBA,MAAM,CAANA,WAAAA,CAAAA,MAAAA,GAAzC,CAAA;AACA,MAAMsD,WAAW,GAAG,MAAM,CAAN,QAAA,GAAA,aAClB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAEtD,MAAM,CAANA,YAAAA,GAAAA,iBAAAA,GAA0C;AAAtD,GAAA,CADkB,GAApB,IAAA;AAGA,MAAMuD,UAAU,GAAGF,UAAU,GAAA,aAAG,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAC;AAAX,GAAA,CAAH,GAA7B,IAAA;AACA,MAAMG,YAAY,GAAG,MAAM,CAAN,SAAA,GAAA,aAAmB,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,IAAI,EAAC;AAAX,GAAA,CAAnB,GAArB,IAAA;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAAC,YAAM;AAC9B,QAAIC,MAAM,GAAV,CAAA;AAEA,QAAI3D,MAAM,CAAV,QAAA,EAAqB2D,MAAM;AAC3B,QAAI3D,MAAM,CAAV,SAAA,EAAsB2D,MAAM;AAC5B,QAAA,UAAA,EAAgBA,MAAM;;AAEtB,QAAIA,MAAM,KAAV,CAAA,EAAkB;AAChB,aAAA,EAAA;AACD;;AAED,QAAIA,MAAM,GAAV,CAAA,EAAgBA,MAAM,IAANA,GAAAA;;AAEhB,QAAI3B,MAAJ,EAAA,EAAc;AACZ,aAAO;AACL4B,QAAAA,UAAU,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,KAAA;AADL,OAAP;AAGD;;AACD,WAAO;AACLC,MAAAA,WAAW,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,KAAA;AADN,KAAP;AAlBuB,GAAA,EAqBtB,CAAC7D,MAAM,CAAP,QAAA,EAAkBA,MAAM,CAAxB,SAAA,EArBH,UAqBG,CArBsB,CAAzB;AAuBA,MAAM8D,UAAU,GAAG9D,MAAM,CAANA,UAAAA,IAAqBA,MAAM,CAA3BA,OAAAA,IAAuCA,MAAM,CAAhE,SAAA;AACA,MAAM+D,UAAyB,GAAGL,OAAO,CAAC,YAAM;AAC9C,QAAMM,cAA6B,GAAG;AACpChF,MAAAA,MAAM,EAAE8E,UAAU,GAAA,SAAA,GAAe;AADG,KAAtC;;AAGA,QAAA,QAAA,EAAc;AACZE,MAAAA,cAAc,CAAdA,UAAAA,GAAAA,aAAAA,MAAAA,CAAyC3G,iBAAiB,CAA1D2G,gBAAAA,CAAAA;AACD;;AACD,WAAA,cAAA;AAPuC,GAAA,EAQtC,CAAA,QAAA,EARH,UAQG,CARsC,CAAzC;AAUA,MAAMC,UAAU,GAAGC,MAAM,CAAzB,IAAyB,CAAzB;AAEA,MAAMC,aAAa,GAAGxD,WAAW,CAC/B,UAAA,CAAA,EAAO;AACL,QAAIsD,UAAU,CAAVA,OAAAA,IAAJ,UAAA,EAAsC;AACpCA,MAAAA,UAAU,CAAVA,OAAAA,CAAAA,MAAAA,CAA0BpD,CAAC,CAA3BoD,MAAAA;AACD;AAJ4B,GAAA,EAM/B,CAAA,UAAA,EANF,UAME,CAN+B,CAAjC;AASA,MAAI,CAAJ,MAAA,EAAa,OAAA,IAAA;AAEb,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,EAAE,EADJ,EAAA;AAEE,IAAA,SAAS,EAFX,SAAA;AAGE,IAAA,KAAK,EAHP,KAAA;AAIE,IAAA,IAAI,EAJN,IAAA;AAKE,IAAA,SAAS,EALX,WAAA;AAME,IAAA,WAAW,EANb,WAAA;AAOE,IAAA,UAAU,EAPZ,UAAA;AAQE,IAAA,WAAW,EARb,WAAA;AASE,IAAA,MAAM,EATR,MAAA;AAUE,IAAA,SAAS,EAVX,SAAA;AAWE,sBAAgBxB;AAXlB,GAAA,EAAA,aAaE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAV,UAAA;AAAwB,IAAA,OAAO,EAA/B,aAAA;AAAgD,IAAA,SAAS,EAAED,OAAO,CAAlE,MAAA;AAA2E,oBAAcxC,MAAM,CAACoE;AAAhG,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,OAAO,EAAE,OAAA,QAAA,KAAA,QAAA,GAAA,QAAA,GADX,IAAA;AAEE,IAAA,QAAQ,EAFV,KAAA;AAGE,IAAA,KAAK,EAHP,SAAA;AAIE,IAAA,SAAS,EAAE5B,OAAO,CAACX;AAJrB,GAAA,EADF,QACE,CADF,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACV;AAAxB,GAAA,EAAA,UAAA,EAAA,WAAA,EAtBJ,YAsBI,CATF,CAbF,EA4BGgC,UAAU,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA;AAAmB,IAAA,MAAM,EAAzB,MAAA;AAAmC,IAAA,MAAM,EAAzC,MAAA;AAAmD,IAAA,SAAS,EAA5D,SAAA;AAAyE,IAAA,GAAG,EAAEG;AAA9E,GAAA,CA5BjB,EA6BGjE,MAAM,CAANA,SAAAA,IAAoBA,MAAM,CAA1BA,eAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAASA,MAAM,CAAf,eAASA,EAAT,EAAA;AAAmC,oBAAnC,IAAA;AAAgD,IAAA,SAAS,EAAA,GAAA,MAAA,CAAKwC,OAAO,CAAZ,OAAA;AAAzD,GAAA,CAAA,CA9BJ,CADF;AA3EK,CAAA;;AC5FP,IAAM6B,sBAA+B,GAAG,SAAlCA,sBAAkC,CAAA,IAAA,EAAgB;AAAA,MAAbrE,MAAa,GAAA,IAAA,CAAbA,MAAa;AACtD,MAAMsE,YAAY,GAAG3D,WAAW,CAC9B,UAAA,CAAA,EAAO;AACLX,IAAAA,MAAM,CAANA,SAAAA,CAAiBa,CAAC,CAADA,MAAAA,CAAAA,KAAAA,IAAjBb,SAAAA;AAF4B,GAAA,EAI9B,CAACA,MAAM,CAJT,SAIE,CAJ8B,CAAhC;AAMA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,IAAA,OAAO,EAAEsE;AAAhB,GAAA,EAA+BtE,MAAM,CAA5C,WAAO,CAAP;AAPF,CAAA;;ACHO,IAAMuE,IAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAA8C;AAAA,MAAA,SAAA,GAAA,IAAA,CAA3CC,IAA2C;AAAA,MAAA,eAAA,GAAA,SAAA,CAAnCC,KAAmC;AAAA,MAAnCA,KAAmC,GAAA,eAAA,KAAA,KAAA,CAAA,GAA3B,EAA2B,GAAA,eAAA;AAAA,MAAvBxD,SAAuB,GAAA,SAAA,CAAvBA,SAAuB;AAAA,MAAVyD,GAAU,GAAA,IAAA,CAAVA,GAAU;AAChE,MAAIC,WAAW,GAAA,GAAA,MAAA,CAAMF,KAAN,KAAA,IAAMA,IAAAA,KAAN,KAAA,KAAA,CAAMA,GAAN,KAAMA,GAArB,EAAe,CAAf;;AACA,MAAA,SAAA,EAAe;AACbE,IAAAA,WAAW,IAAA,KAAA,MAAA,CAASD,GAAG,CAAHA,OAAAA,CAAT,MAAA,EAAXC,GAAW,CAAXA;AACD;;AACD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,IAAA,QAAQ,EAAd,KAAA;AAAuB,IAAA,OAAO,EAAEA;AAAhC,GAAA,EADF,WACE,CADF;AALK,CAAA;;ACCP,IAAMC,4BAA4B,GAAG;AACnC/G,EAAAA,KAAK,EAD8B,6BAAA;AAEnCX,EAAAA,MAAM,EAF6B,SAAA;AAGnCJ,EAAAA,KAAK,EAH8B,SAAA;AAInCmB,EAAAA,OAAO,EAJ4B,UAAA;AAKnCP,EAAAA,OAAO,EAAE;AAL0B,CAArC;;AAQA,IAAMmH,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAW;AAC5B,UAAA,KAAA;AACE,SAAA,CAAA;AACE,aAAA,CAAA;;AACF,SAAA,CAAA;AACE,aAAOpH,gBAAgB,CAAvB,sCAAA;;AACF,SAAA,CAAA;AACE,aAAOA,gBAAgB,CAAvB,sCAAA;;AACF,SAAA,CAAA;AACE,aAAOA,gBAAgB,CAAvB,sCAAA;;AACF;AACE,aAAA,QAAA,MAAA,CAAeA,gBAAgB,CAA/B,sCAAA,EAAA,KAAA,EAAA,MAAA,CAA4EqH,KAAK,GAAjF,CAAA,EAAA,YAAA,CAAA;AAVJ;AADF,CAAA;;AAeO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAW;AAAA,MAC3BP,IAD2B,GACIrE,KADJ,CAAA,IAAA;AAAA,MACrBuE,GADqB,GACIvE,KADJ,CAAA,GAAA;AAAA,MAChBH,MADgB,GACIG,KADJ,CAAA,MAAA;AAAA,MACR6E,OADQ,GACI7E,KADJ,CAAA,OAAA;AAGnC,MAAM8E,YAAY,GAAG,OAAO,CAAP,MAAA,CACnB,UAAA,IAAA,EAAA;AAAA,QAAGxC,EAAH,GAAA,IAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAFA,qCAAAA,IAAgDA,EAAE,KAA9D,qCAAA;AADF,GAAqB,CAArB;AAIA,MAAMyC,WAAW,GAAG,YAAY,CAAZ,SAAA,CAAuB,UAAA,GAAA,EAAA;AAAA,WAASC,GAAG,CAAHA,EAAAA,KAAWnF,MAAM,CAA1B,EAAA;AAA3C,GAAoB,CAApB;AAEA,MAAA,WAAA;;AACA,MAAI0E,GAAG,CAAP,SAAA,EAAmB;AACjBU,IAAAA,WAAW,GAAGF,WAAW,KAAXA,CAAAA,GAAoBL,UAAU,CAACH,GAAG,CAAlCQ,KAA8B,CAA9BA,GAAdE,CAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,WAAW,GAAGF,WAAW,KAAXA,CAAAA,GAAAA,QAAAA,MAAAA,CAA4BL,UAAU,CAACH,GAAG,CAA1CQ,KAAsC,CAAtCA,EAAAA,UAAAA,CAAAA,GAAdE,CAAAA;AACD;;AACD,MAAMxC,KAAoB,GAAG;AAC3BwC,IAAAA,WAAW,EAAXA;AAD2B,GAA7B;AAIA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,WAAW,KAAX,CAAA,IAAqBV,GAAG,CAAxB,SAAA,GAAA,aACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAU,GAAG,CAAH,yBAAA,CAA8B;AAAE9B,IAAAA,KAAK,EAALA;AAAF,GAA9B,CAAV,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,IAAI,EAAA,GAAA,MAAA,CAAK8B,GAAG,CAAHA,UAAAA,GAAAA,uBAAAA,GADX,wBACM,CADN;AAEE,IAAA,KAAK,EAAEE;AAFT,GAAA,CADF,CADD,GAAA,aAQC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,KAAK,EAAEhC;AAAb,GAAA,CATJ,EAWG4B,IAAI,CAAJA,MAAAA,CAZL,MAYKA,CAXH,CADF;AAnBK,CAAA;;ACvBP,IAAMI,8BAA4B,GAAG;AACnC/G,EAAAA,KAAK,EAD8B,6BAAA;AAEnCX,EAAAA,MAAM,EAF6B,SAAA;AAGnCJ,EAAAA,KAAK,EAH8B,SAAA;AAInCmB,EAAAA,OAAO,EAJ4B,UAAA;AAKnCP,EAAAA,OAAO,EAAE;AAL0B,CAArC;;AAQO,IAAM2H,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAW;AAAA,MACxBb,IADwB,GACVrE,KADU,CAAA,IAAA;AAAA,MAClBuE,GADkB,GACVvE,KADU,CAAA,GAAA;AAGhC,MAAMyC,KAAoB,GAA1B,EAAA;;AACA,MAAI4B,IAAI,CAAJA,MAAAA,CAAAA,MAAAA,KAAuBA,IAAI,CAAJA,MAAAA,CAAAA,MAAAA,KAAuBc,SAAS,CAAhCd,IAAAA,IAAyCA,IAAI,CAAJA,MAAAA,CAAAA,MAAAA,KAAuBc,SAAS,CAApG,KAAId,CAAJ,EAA6G;AAC3G5B,IAAAA,KAAK,CAALA,WAAAA,GAAAA,MAAAA;AACD;;AACD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAU,GAAG,CAAH,yBAAA,CAA8B;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAA9B,CAAV,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,IAAA,IAAI,EAAA,GAAA,MAAA,CAAK8B,GAAG,CAAHA,UAAAA,GAAAA,uBAAAA,GADX,wBACM,CADN;AAEE,IAAA,KAAK,EAAEE;AAFT,GAAA,CADF,CADF,EAOGJ,IAAI,CAAJA,MAAAA,CARL,MAQKA,CAPH,CADF;AAPK,CAAA;;ACZA,IAAMe,aAAa,GAAG,SAAhBA,aAAgB,GAAA;AAAA,SAAA,IAAA;AAAtB,CAAA;;ACOA,IAAMC,oBAAoB,GAA1B,EAAA;;AAEP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,MAAA,EAAA,GAAA,EAAiB;AAC3C,SAAO,IAAA,MAAA,CAAWC,MAAM,CAAjB,KAAA,EAAA,IAAA,EAAA,IAAA,CAAoCC,MAAM,CAACjB,GAAG,CAACgB,MAAM,CAA5D,EAAqD,CAAJ,CAA1C,CAAP;AADF,CAAA;;AAIO,IAAME,aAAa,GAAG;AAC3BrF,EAAAA,MAAM,EADqB,sBAAA;AAE3BsF,EAAAA,SAAS,EAFkB,IAAA;AAG3BC,EAAAA,UAAU,EAHiB,IAAA;AAI3BpE,EAAAA,QAAQ,EAJmB,oBAAA;AAK3BqE,EAAAA,MAAM,EAAEC,aAAa,CALM,MAAA;AAM3BC,EAAAA,aAAa,EANc,mBAAA;AAO3BZ,EAAAA,OAAO,EAPoB,OAAA;AAQ3Bd,EAAAA,IAAI,EARuB,IAAA;AAS3BQ,EAAAA,UAAU,EATiB,UAAA;AAU3BQ,EAAAA,aAAa,EAAEA;AAVY,CAAtB;ACTP,IAAM5I,QAAqB,GAAG;AAC5BE,EAAAA,QAAQ,EADoB,UAAA;AAE5B6B,EAAAA,GAAG,EAAEjB,gBAAgB,CAFO,8BAAA;AAG5BkB,EAAAA,IAAI,EAHwB,CAAA;AAI5BoD,EAAAA,KAAK,EAJuB,CAAA;AAK5BI,EAAAA,MAAM,EAAE;AALoB,CAA9B;;AAQA,IAAM+D,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,IAAA,EAAe;AAAA,MAAZtD,KAAY,GAAA,IAAA,CAAZA,KAAY;AAC7C,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,KAAK,EAAb,GAAA;AAAoB,IAAA,KAAK,EAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAAA,KAAA;AAAzB,GAAA,CAAP;AADF,CAAA;;AAIAsD,uBAAuB,CAAvBA,WAAAA,GAAAA,yBAAAA;;ACZA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,GAAA,EAAA;AAAA,SAASC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,GAAK,CAALA,CAApB,IAAoBA,EAAXA,CAAT;AAAzB,CAAA;;AAGA,IAAMC,QAAsB,GAAG,SAAzBA,QAAyB,CAAA,IAAA,EAAmC;AAAA,MAAhCrB,OAAgC,GAAA,IAAA,CAAhCA,OAAgC;AAAA,MAAvBsB,CAAuB,GAAA,IAAA,CAAvBA,CAAuB;AAAA,MAApB5B,GAAoB,GAAA,IAAA,CAApBA,GAAoB;AAChE,MAAI6B,YAAY,GAAhB,CAAA;AACA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA,CAAA,EAAe;AAC1B,QAAMC,EAAE,GAAA,aACN,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,GAAG,EAAA,UAAA,MAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,CADL,GACK,CADL;AAEE,MAAA,CAAC,EAAED,YAAY,GAFjB,CAAA;AAGE,MAAA,CAAC,EAHH,CAAA;AAIE,MAAA,EAAE,EAJJ,GAAA;AAKE,MAAA,EAAE,EALJ,GAAA;AAME,MAAA,KAAK,EAAEvG,MAAM,CAANA,UAAAA,GANT,CAAA;AAOE,MAAA,MAAM,EAAC;AAPT,KAAA,CADF;AAWAuG,IAAAA,YAAY,IAAIvG,MAAM,CAAtBuG,UAAAA;AACA,WAAA,EAAA;AAfN,GAEK,CADH,CADF;AAFF,CAAA;;AAwBO,IAAME,gBAA2B,GAAG,SAA9BA,gBAA8B,CAAA,KAAA,EAAkB;AAAA,MACnDzB,OADmD,GACC7E,KADD,CAAA,OAAA;AAAA,MAAA,WAAA,GACCA,KADD,CAAA,IAAA;AAAA,MAC1CuG,IAD0C,GAAA,WAAA,KAAA,KAAA,CAAA,GAAA,CAAA,GAAA,WAAA;AAAA,MAChC9D,KADgC,GACCzC,KADD,CAAA,KAAA;AAAA,MACzBwG,SADyB,GACCxG,KADD,CAAA,SAAA;AAAA,MACdyG,UADc,GACCzG,KADD,CAAA,UAAA;AAG3D,MAAMjD,MAAM,GAAGwJ,IAAI,GAAnB,SAAA;AAEA,MAAMG,WAAW,GAAGnD,OAAO,CAAC,YAAM;AAChC,WAAA,aAAA,CAAA;AACE9F,MAAAA,eAAe,EAAEP,iBAAiB,CAACyJ;AADrC,KAAA,EAAA,KAAA,CAAA;AADyB,GAAA,EAKxB,CAAA,KAAA,EAAQzJ,iBAAiB,CAL5B,kBAKG,CALwB,CAA3B;AAOA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AACE,IAAA,KAAK,EADP,WAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,KAAK,EAHP,UAAA;AAIE,IAAA,KAAK,EAJP,CAAA;AAKE,IAAA,eAAe,EAAEA,iBAAiB,CALpC,qCAAA;AAME,IAAA,eAAe,EAAEA,iBAAiB,CANpC,0CAAA;AAOE,IAAA,iBAAiB,EAAEA,iBAAiB,CAAC0J;AAPvC,GAAA,EASG,gBAAgB,CAAhB,IAAgB,CAAhB,CAAA,GAAA,CAA2B,UAAA,CAAA,EAAA,KAAA,EAAA;AAAA,WAAA,aAC1B,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAU,MAAA,GAAG,EAAb,KAAA;AAAsB,MAAA,OAAO,EAA7B,OAAA;AAAwC,MAAA,CAAC,EAAEJ,SAAS,GAATA,KAAAA,GAAoBA,SAAS,GAAxE,CAAA;AAA8E,MAAA,GAAG,EAAEK;AAAnF,KAAA,CAD0B;AAVhC,GAUK,CATH,CADF;AAZK,CAAA;;AC7BA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,IAAA,EAAsC;AAAA,MAAnCC,UAAmC,GAAA,IAAA,CAAnCA,UAAmC;AAAA,MAAvBvE,SAAuB,GAAA,IAAA,CAAvBA,SAAuB;AAAA,MAAZC,KAAY,GAAA,IAAA,CAAZA,KAAY;AAC1E,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,SAAA;AAA2B,IAAA,KAAK,EAAEA;AAAlC,GAAA,EADF,UACE,CADF;AADK,CAAA;;ACCP,IAAMuE,WAAW,GAAG,SAAdA,WAAc,CAAA,MAAA,EAAY;AAC9B,SAAO,OAAOnH,MAAM,CAAb,QAAA,KAAA,QAAA,GAAsCA,MAAM,CAA5C,QAAA,GAAwDA,MAAM,CAArE,EAAA;AADF,CAAA;;AAIO,IAAMoH,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA,cAAA,EAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAoE;AAAA,MACxFC,kBADwF,GACjElH,KADiE,CAAA,kBAAA;;AAAA,MAAA,SAAA,GAGhEoH,QAAQ,CAHwD,EAGxD,CAHwD;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAGzFpE,QAHyF,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAG/EmE,WAH+E,GAAA,UAAA,CAAA,CAAA,CAAA;;AAKhG,MAAME,eAAe,GAAG7G,WAAW,CACjC,UAAA,CAAA,EAAO;AACL,QAAI8G,UAAU,CAAd,gBAAA,EAAiC;AAC/B5G,MAAAA,CAAC,CAADA,cAAAA;AACA;AACD;;AACDA,IAAAA,CAAC,CAADA,YAAAA,CAAAA,OAAAA,CAAAA,OAAAA,EAAgCA,CAAC,CAADA,aAAAA,CAAAA,OAAAA,CAAhCA,QAAAA;AAN+B,GAAA,EAQjC,CAAC4G,UAAU,CARb,gBAQE,CARiC,CAAnC;AAWA,MAAMC,cAAc,GAAG/G,WAAW,CAAC,UAAA,CAAA,EAAO;AACxCE,IAAAA,CAAC,CAADA,cAAAA;AADgC,GAAA,EAAlC,EAAkC,CAAlC;AAIA,MAAM8G,eAAe,GAAGhH,WAAW,CAAC,UAAA,CAAA,EAAO;AACzC2G,IAAAA,WAAW,CAACzG,CAAC,CAADA,aAAAA,CAAAA,OAAAA,CAAZyG,QAAW,CAAXA;AADiC,GAAA,EAAnC,EAAmC,CAAnC;AAIA,MAAMM,YAAY,GAAGjH,WAAW,CAC9B,UAAA,CAAA,EAAO;AACL2G,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AAEA,QAAMO,YAAY,GAAGhH,CAAC,CAADA,aAAAA,CAAAA,OAAAA,CAArB,QAAA;AACA,QAAMiH,YAAY,GAAGjH,CAAC,CAADA,YAAAA,CAAAA,OAAAA,CAArB,OAAqBA,CAArB;AACA,QAAIgH,YAAY,KAAhB,YAAA,EAAmC;AAEnC,QAAME,mBAAmB,GAAGC,WAAW,CAAXA,MAAAA,GAAAA,CAAAA,GAAAA,WAAAA,GAAuC,OAAO,CAAP,GAAA,CAAY,UAAA,GAAA,EAAA;AAAA,aAASb,WAAW,CAApB,GAAoB,CAApB;AAA/E,KAAmE,CAAnE;AACA,QAAMc,aAAa,GAAG,mBAAmB,CAAnB,SAAA,CAA8B,UAAA,GAAA,EAAA;AAAA,aAAS9C,GAAG,KAAZ,YAAA;AAApD,KAAsB,CAAtB;AACA,QAAM+C,aAAa,GAAG,mBAAmB,CAAnB,SAAA,CAA8B,UAAA,GAAA,EAAA;AAAA,aAAS/C,GAAG,KAAZ,YAAA;AAApD,KAAsB,CAAtB;;AAEA,QAAMgD,QAAQ,GAAA,kBAAA,CAAd,mBAAc,CAAd;;AACAA,IAAAA,QAAQ,CAARA,MAAAA,CAAAA,aAAAA,EAAAA,CAAAA,EAAkCA,QAAQ,CAARA,MAAAA,CAAAA,aAAAA,EAAAA,CAAAA,EAAlCA,CAAkCA,CAAlCA;AACAC,IAAAA,cAAc,CAAdA,QAAc,CAAdA;AAEA,QAAMC,eAAe,GAAG,QAAQ,CAAR,GAAA,CAAa,UAAA,SAAA,EAAA;AAAA,aAAe,OAAO,CAAP,IAAA,CAAa,UAAA,GAAA,EAAA;AAAA,eAASlB,WAAW,CAAXA,GAAW,CAAXA,KAAT,SAAA;AAA5B,OAAe,CAAf;AAArC,KAAwB,CAAxB;AACAE,IAAAA,kBAAkB,CAChBvG,sBAAsB,CAAA,CAAA,EAAI;AACxBuH,MAAAA,eAAe,EADS,eAAA;AAExBrI,MAAAA,MAAM,EAAEgF,OAAO,CAAA,aAAA;AAFS,KAAJ,CADN,CAAlBqC;AAjB4B,GAAA,EAwB9B,CAAA,WAAA,EAxBF,kBAwBE,CAxB8B,CAAhC;AA2BA,MAAMiB,eAAe,GAAG3H,WAAW,CAAC,YAAM;AACxC2G,IAAAA,WAAW,CAAXA,EAAW,CAAXA;AADiC,GAAA,EAEhC,CAFH,QAEG,CAFgC,CAAnC;AAIA,SAAO,CAAA,QAAA,EAAA,eAAA,EAAA,eAAA,EAAA,cAAA,EAAA,YAAA,EAAP,eAAO,CAAP;AAvDK,CAAA;;ACJP,IAAMiB,eAAe,GAArB,EAAA;AACA,IAAMC,uBAAuB,GAA7B,EAAA;AACA,IAAMC,SAAS,GAAf,GAAA,C,CAAA;;AAGA,IAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,CAAA,UAAA,EAAA;AAAA,SACxCC,UAAU,GAAVA,EAAAA,GAAkBC,IAAI,CAAJA,IAAAA,CAAUD,UAAU,GAAtCA,IAAkBC,CAAlBD,GAAiD,IADT,UAAA;AAA1C,CAAA;;AAEA,IAAME,kCAAkC,GAAG,SAArCA,kCAAqC,CAAA,UAAA,EAAA;AAAA,SAAgB,IAAhB,UAAA;AAA3C,CAAA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA,IAAA,EAAA;AAAA,MAAA,aAAA,GAAA,IAAA,CAAA,QAAA;AAAA,MAAqBC,KAArB,GAAA,aAAA,CAAA,KAAA;AAAA,MAA4BC,4BAA5B,GAAA,aAAA,CAAA,4BAAA;AAAA,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAElBD,KAAK,CAFa,gBAAA,EAGlBC,4BAA4B,CAHV,cAAA,EAIlBA,4BAA4B,CAJV,OAAA,CAAA,CAAA;AAApB,CAAA;;AAOA,IAAMhE,OAAO,GAAG,SAAA,OAAA,CAAA,QAAA,EAAA,KAAA,EAA2B;AAAA,MAAfiE,QAAe,GAAA,KAAA,CAAfA,QAAe;;AACzC,MAAI,CAACA,QAAQ,CAAT,KAAA,IAAmB,CAACA,QAAQ,CAAhC,IAAA,EAAuC;AACrC,WAAA,QAAA;AACD;;AAHwC,MAKjCvC,IALiC,GAKjBuC,QALiB,CAAA,IAAA;AAAA,MAK3BF,KAL2B,GAKjBE,QALiB,CAAA,KAAA;AAAA,MAOjCC,aAPiC,GAOeH,KAPf,CAAA,aAAA;AAAA,MAOAI,UAPA,GAOeJ,KAPf,CAAA,gBAAA;AAAA,MAAA,qBAAA,GAQLE,QAAQ,CARH,4BAAA;AAAA,MAQjCG,cARiC,GAAA,qBAAA,CAAA,cAAA;AAAA,MAQjBC,OARiB,GAAA,qBAAA,CAAA,OAAA;AAUzC,MAAIrE,QAAO,CAAPA,MAAAA,KAAAA,CAAAA,IAAwB,CAA5B,UAAA,EAAyC,OAAA,QAAA;;AAEzC,MAAMsE,cAAc,GAAG,QAAO,CAAP,MAAA,CAAA,OAAA,EAAA,MAAA,CAA+B,UAAA,IAAA,EAAU;AAAA,QAAA,eAAA;;AAC9D,WAAO,CAAA,CAAA,eAAA,GAACC,IAAI,CAAL,SAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,eAAA,GAAA,IAAA,KAA4B,CAACL,aAAa,CAAbA,QAAAA,CAAuBK,IAAI,CAA/D,QAAoCL,CAApC;AADF,GAAuB,CAAvB;;AAIA,MAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACvC,QAAMC,qBAAqB,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,KAAA,EAAA;AAAA,UAAG3M,KAAH,GAAA,KAAA,CAAA,KAAA;AAAA,aAAeA,KAAf,KAAA,IAAeA,IAAAA,KAAf,KAAA,KAAA,CAAeA,GAAf,KAAeA,GAAf,KAAA;AAAtB,KAAA,EAAA,GAAA,CAAyD,UAAA,KAAA,EAAA;AAAA,UAAGA,KAAH,GAAA,KAAA,CAAA,KAAA;AAAA,aAAA,KAAA;AAAvF,KAA8B,CAA9B;AACA,QAAM4M,UAAU,GAAG,qBAAqB,CAArB,MAAA,CAA6B,UAAA,GAAA,EAAA,GAAA,EAAA;AAAA,aAAcC,GAAG,GAAjB,GAAA;AAA7B,KAAA,EAAnB,CAAmB,CAAnB;AAEA,QAAMC,mBAAmB,GAAGN,cAAc,CAAdA,MAAAA,GAAwBG,qBAAqB,CAJlC,MAIvC,CAJuC,CAAA;;AAOvC,QAAIH,cAAc,CAAdA,MAAAA,GAAAA,CAAAA,IAA6BH,UAAU,GAA3C,CAAA,EAAiD;AAC/C;AACA,UAAIG,cAAc,CAAdA,MAAAA,KAA0BG,qBAAqB,CAAnD,MAAA,EAA4D;AAC1D,eAAOC,UAAU,GAAGJ,cAAc,CAAlC,MAAA;AAH6C,OAAA,CAAA;;;AAM/C,UAAIH,UAAU,IAAIO,UAAU,GAAGE,mBAAmB,GAAlD,oBAAA,EAA2E;AACzE,eAAO,CAACT,UAAU,GAAX,UAAA,IAAP,mBAAA;AACD;AACF;;AACD,WAAA,oBAAA;AAjBF,GAAA;;AAoBA,MAAMU,OAAO,GAAG,IAAI,CAAJ,IAAA,CAAU,UAAA,GAAA,EAAA;AAAA,QAAA,aAAA;;AAAA,WAAS,EAAA,CAAA,aAAA,GAACnF,GAAG,CAAJ,QAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,aAAAA,CAAV,QAAS,CAAT;AAA1B,GAAgB,CAAhB;;AAEA,MAAI0E,cAAc,KAAKU,mBAAmB,CAAtCV,OAAAA,IAAmD,CAAA,OAAA,IAAvD,OAAA,EAA6E;AAC3E,QAAMW,YAAY,GAAGP,0BAArB,EAAA;AACA,WAAO,QAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA;AAAA,UAAA,aAAA;;AAAA,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA;AAA0B1M,QAAAA,KAAK,EAAA,CAAA,aAAA,GAAEkD,MAAM,CAAR,KAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,aAAA,GAAkB+J;AAAjD,OAAA,CAAA;AAAnB,KAAO,CAAP;AACD;;AAED,MAAMC,SAAS,GAAGtD,IAAI,CAAJA,KAAAA,CAAAA,CAAAA,EAAlB,eAAkBA,CAAlB;AAEA,MAAMuD,UAAU,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,GAAA,EAAA,MAAA,EAAiB;AACxD,QAAIjK,MAAM,CAANA,EAAAA,KAAAA,qCAAAA,IAAuDA,MAAM,CAANA,EAAAA,KAA3D,qCAAA,EAAgH;AAC9G2J,MAAAA,GAAG,CAAC3J,MAAM,CAAV2J,QAAG,CAAHA,GAAuB;AACrBO,QAAAA,cAAc,EAAElK,MAAM,CADD,KAAA;AAErBmK,QAAAA,SAAS,EAAEnK,MAAM,CAFI,KAAA;AAGrBoK,QAAAA,cAAc,EAAE;AAHK,OAAvBT;AAKA,aAAA,GAAA;AACD;;AAED,QAAMU,YAAY,GAAG,OAAOrK,MAAM,CAAb,MAAA,KAAA,QAAA,GAAoCA,MAAM,CAANA,MAAAA,CAApC,MAAA,GAVmC,uBAUxD,CAVwD,CAAA;;AAaxD,QAAMsK,oBAAoB,GAAG1B,IAAI,CAAJA,GAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAI,CAAA,YAAA,EAAA,MAAA,CAAA,kBAAA,CAE5B,SAAS,CAAT,GAAA,CAAc,UAAA,GAAA,EAAS;AAAA,UAAA,WAAA;;AACxB,UAAM2B,SAAS,GAAA,CAAA,WAAA,GAAG7F,GAAG,CAAN,MAAA,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,WAAAA,CAAa1E,MAAM,CAArC,QAAkB0E,CAAlB;;AACA,UAAA,SAAA,EAAe;AACb,YAAI,OAAA,SAAA,KAAJ,QAAA,EAAmC,OAAO6F,SAAS,CAAhB,MAAA;AACnC,YAAI,OAAA,SAAA,KAAJ,QAAA,EAAmC,OAAO,CAACA,SAAS,GAAV,EAAA,EAAP,MAAA;AACpC;;AACD,aAAA,CAAA;AArBoD,KAenD,CAF4B,CAAA,CAAJ3B,CAA7B,CAbwD,CAAA;;AA0BxD,QAAMwB,cAAc,GAClB,SAAS,CAAT,MAAA,CAAiB,UAAA,GAAA,EAAA,IAAA,EAAe;AAAA,UAAA,YAAA;;AAC9B,UAAMG,SAAS,GAAA,CAAA,YAAA,GAAGhB,IAAI,CAAP,MAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,YAAAA,CAAcvJ,MAAM,CAAtC,QAAkBuJ,CAAlB;AACA,UAAIiB,GAAG,GAAP,CAAA;;AACA,UAAA,SAAA,EAAe;AACb,YAAI,OAAA,SAAA,KAAJ,QAAA,EAAmCA,GAAG,GAAGD,SAAS,CAAfC,MAAAA;AACnC,YAAI,OAAA,SAAA,KAAJ,QAAA,EAAmCA,GAAG,GAAG,CAACD,SAAS,GAAV,EAAA,EAANC,MAAAA;AACpC;;AACD,aAAOb,GAAG,GAAV,GAAA;AAPF,KAAA,EAAA,CAAA,IAQQK,SAAS,CATnB,MAAA;AAWA,QAAME,cAAc,GAAGxB,iCAAiC,CAAxD,YAAwD,CAAxD;AAEAiB,IAAAA,GAAG,CAAC3J,MAAM,CAAV2J,QAAG,CAAHA,GAAuB;AACrBO,MAAAA,cAAc,EADO,cAAA;AAErBC,MAAAA,SAAS,EAAEvB,IAAI,CAAJA,GAAAA,CAAAA,cAAAA,EAAyBC,kCAAkC,CAFjD,oBAEiD,CAA3DD,CAFU;AAGrBwB,MAAAA,cAAc,EAAdA;AAHqB,KAAvBT;AAKA,WAAA,GAAA;AA5CiB,GAAA,EAAnB,EAAmB,CAAnB;AA+CA,MAAMc,YAAY,GAAG,MAAM,CAAN,MAAA,CAAA,UAAA,EAAA,MAAA,CACnB,UAAA,GAAA,EAAA,IAAA,EAAA;AAAA,WAA4Bd,GAAG,GAAGJ,IAAI,CAAtC,cAAA;AADmB,GAAA,EAArB,CAAqB,CAArB;AAKA,MAAImB,aAAa,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,GAAA,EAAA,MAAA,EAAiB;AAAA,QAAA,qBAAA,GACnBT,UAAU,CAACjK,MAAM,CADE,QACT,CADS;AAAA,QACjDkK,cADiD,GAAA,qBAAA,CAAA,cAAA;AAAA,QACjCC,SADiC,GAAA,qBAAA,CAAA,SAAA;AAEzD,WACER,GAAG,GACDf,IAAI,CAAJA,GAAAA,CACE5I,MAAM,CAANA,QAAAA,IADF4I,CAAAA,EAEE5I,MAAM,CAANA,KAAAA,IAFF4I,CAAAA,EAGEsB,cAAc,IAHhBtB,CAAAA,EAIEQ,cAAc,KAAKU,mBAAmB,CAAtCV,IAAAA,GAAAA,SAAAA,GALJO,CACEf,CADFe,IADF,CAAA;AAFkB,GAAA,EAApB,CAAoB,CAApB;AAaA,MAAIgB,cAAc,GAAGxB,UAAU,GAA/B,aAAA;;AAEA,MAAIC,cAAc,KAAKU,mBAAmB,CAAtCV,KAAAA,IAAgDuB,cAAc,GAAlE,CAAA,EAAwE;AACtE,QAAIvB,cAAc,KAAKU,mBAAmB,CAA1C,IAAA,EAAiD;AAC/CY,MAAAA,aAAa,GAAG,cAAc,CAAd,MAAA,CAAsB,UAAA,GAAA,EAAA,MAAA,EAAiB;AAAA,YAC7CR,cAD6C,GAC1BD,UAAU,CAACjK,MAAM,CADS,QAChB,CAAViK,CAD0B,cAAA;AAErD,eAAON,GAAG,GAAGf,IAAI,CAAJA,GAAAA,CAAS5I,MAAM,CAANA,QAAAA,IAAT4I,CAAAA,EAA+B5I,MAAM,CAANA,KAAAA,IAA/B4I,CAAAA,EAAkDsB,cAAc,IAAtEP,CAAMf,CAANe,IAAP,CAAA;AAFc,OAAA,EAAhBe,CAAgB,CAAhBA;AAIAC,MAAAA,cAAc,GAAGxB,UAAU,GAA3BwB,aAAAA;AACD;;AAED,WAAO,QAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AAAA,UAAA,iBAAA;;AAC7B,UAAMC,eAAe,GAAG,CAAA,CAAA,iBAAA,GAAC5K,MAAM,CAAP,SAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAA,IAAA,KAA8B,CAACkJ,aAAa,CAAbA,QAAAA,CAAuBlJ,MAAM,CAApF,QAAuDkJ,CAAvD;;AACA,UAAA,eAAA,EAAqB;AAAA,YAAA,cAAA,EAAA,gBAAA;;AAAA,YAAA,sBAAA,GACwBe,UAAU,CAACjK,MAAM,CADzC,QACkC,CADlC;AAAA,YACXkK,cADW,GAAA,sBAAA,CAAA,cAAA;AAAA,YACKE,cADL,GAAA,sBAAA,CAAA,cAAA;AAEnB,YAAMS,qBAAqB,GAAGJ,YAAY,GAAZA,CAAAA,GAAmBL,cAAc,GAAjCK,YAAAA,GAAmD,IAAInB,cAAc,CAAnG,MAAA;AAEA,YAAMwB,WAAW,GAAGD,qBAAqB,GAArBA,cAAAA,GAApB,cAAA;AAEA,eAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA;AAEE/N,UAAAA,KAAK,EAAA,CAAA,cAAA,GAAEkD,MAAM,CAAR,KAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAFP,WAAA;AAGE0B,UAAAA,QAAQ,EAAA,CAAA,gBAAA,GAAE1B,MAAM,CAAR,QAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,gBAAA,GAAqBkK;AAH/B,SAAA,CAAA;AAKD;;AAED,aAAA,MAAA;AAfF,KAAO,CAAP;AAzHuC,GAAA,CAAA;;;AA6IzC,SAAO,QAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAY;AAAA,QAAA,kBAAA;;AAC7B,QAAMU,eAAe,GAAG,CAAA,CAAA,kBAAA,GAAC5K,MAAM,CAAP,SAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,kBAAA,GAAA,IAAA,KAA8B,CAACkJ,aAAa,CAAbA,QAAAA,CAAuBlJ,MAAM,CAApF,QAAuDkJ,CAAvD;;AACA,QAAA,eAAA,EAAqB;AAAA,UAAA,cAAA;;AAAA,UACXiB,SADW,GACGF,UAAU,CAACjK,MAAM,CADpB,QACa,CAAViK,CADH,SAAA;AAEnB,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAA,EAAA,EAAA,EAAA;AAEEnN,QAAAA,KAAK,EAAA,CAAA,cAAA,GAAEkD,MAAM,CAAR,KAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAFP,SAAA;AAGEjD,QAAAA,QAAQ,EAAE0L;AAHZ,OAAA,CAAA;AAKD;;AACD,WAAA,MAAA;AAVF,GAAO,CAAP;AA7IF,CAAA;;AA2JO,IAAMsC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAA,KAAA,EAAW;AAC/CC,EAAAA,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,WAAAA;AAFK,CAAA;;AC1KP,IAAMC,UAAU,GAAG;AACjBnO,EAAAA,KAAK,EADY,MAAA;AAEjBI,EAAAA,MAAM,EAAE;AAFS,CAAnB;AAKA,IAAMgO,QAAQ,GAAG,IAAjB,GAAiB,EAAjB;AACAA,QAAQ,CAARA,GAAAA,CAAaC,UAAU,CAAvBD,IAAAA,EAAAA,UAAAA;AACAA,QAAQ,CAARA,GAAAA,CAAaC,UAAU,CAAvBD,OAAAA,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,UAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAAkDtN,EAAAA,eAAe,EAAEP,iBAAiB,CAAC+N;AAArFF,CAAAA,CAAAA;AACAA,QAAQ,CAARA,GAAAA,CAAaC,UAAU,CAAvBD,OAAAA,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,UAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAAkDtN,EAAAA,eAAe,EAAEP,iBAAiB,CAACgO;AAArFH,CAAAA,CAAAA;AACAA,QAAQ,CAARA,GAAAA,CAAaC,UAAU,CAAvBD,KAAAA,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,UAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAAgDtN,EAAAA,eAAe,EAAEP,iBAAiB,CAACiO;AAAnFJ,CAAAA,CAAAA;AACAA,QAAQ,CAARA,GAAAA,CAAaC,UAAU,CAAvBD,WAAAA,EAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EAAAA,UAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAAsDtN,EAAAA,eAAe,EAAEP,iBAAiB,CAACkO;AAAzFL,CAAAA,CAAAA;AAEA;;;;AAGA,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAA;AAAA,SAAA,aAAM,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAE;AAAE1O,MAAAA,KAAK,EAAE;AAAT;AAAZ,GAAA,CAAN;AAAf,CAAA;;AAEA,IAAMyH,MAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAAyB;AAAA,MAAdE,KAAc,GAAA,IAAA,CAAtBD,IAAsB,CAAdC,KAAc;AACpC,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAEyG,QAAQ,CAARA,GAAAA,CAAAA,KAAAA;AAAZ,GAAA,CAAP;AADF,CAAA;AAIA;;;;;AAGA,IAAMpC,aAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA,KAAA,EAA0D;AAAA,MAArCE,4BAAqC,GAAA,KAAA,CAAjDC,QAAiD,CAArCD,4BAAqC;AAC5E,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAAiBA,4BAA4B,CAA7C,gBAAA,EAAgEA,4BAA4B,CAA5F,cAAA,CAAA,CAAA;AADF,CAAA;;AAGA,IAAMyC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA,KAAA,EAAA;AAAA,MAASxC,QAAT,GAAA,KAAA,CAAA,QAAA;AAAA,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAAkCA,QAAQ,CAARA,4BAAAA,CAAlC,gBAAA,CAAA,CAAA;AAA3B,CAAA;;AACA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAA,qBAAA,EAAA,KAAA,EAA2E;AAAA,MAArCN,4BAAqC,GAAA,KAAA,CAAjDC,QAAiD,CAArCD,4BAAqC;;AAChG,MAAI,CAACA,4BAA4B,CAAjC,gBAAA,EAAoD;AAClD,WAAO,qBAAqB,CAArB,MAAA,CAA6B,UAAA,KAAA,EAAA;AAAA,UAAGvG,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,aAAYA,EAAE,KAAd,qCAAA;AAApC,KAAO,CAAP;AACD;;AAED,MAAMiJ,eAAe,GAAG,qBAAqB,CAArB,IAAA,CAA2B,UAAA,KAAA,EAAA;AAAA,QAAGjJ,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAd,qCAAA;AAAnD,GAAwB,CAAxB;AACA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA,kBAAA,CAA4B,qBAAqB,CAArB,MAAA,CAA6B,UAAA,KAAA,EAAA;AAAA,QAAGA,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAd,qCAAA;AAAzD,GAA4B,CAA5B,CAAA,CAAA;AANF,CAAA;;AASA,IAAMuC,SAAO,GAAG,SAAVA,OAAU,CAAA,cAAA,EAAA,KAAA,EAAkC;AAAA,MAAfiE,QAAe,GAAA,KAAA,CAAfA,QAAe;AAAA,MAAA,qBAAA,GACHA,QAAQ,CADL,4BAAA;AAAA,MACxC0C,gBADwC,GAAA,qBAAA,CAAA,gBAAA;AAAA,MACtBC,cADsB,GAAA,qBAAA,CAAA,cAAA;;AAGhD,MAAI,CAAJ,gBAAA,EAAuB;AACrB,WAAA,cAAA;AACD;;AACD,SAAA,CACE;AACEnJ,IAAAA,EAAE,EADJ,qCAAA;AAEEoJ,IAAAA,QAAQ,EAFV,cAAA;AAGEC,IAAAA,cAAc,EAHhB,IAAA;AAIEC,IAAAA,aAAa,EAJf,IAAA;AAKEC,IAAAA,cAAc,EALhB,IAAA;AAMEC,IAAAA,eAAe,EANjB,IAAA;AAOEnG,IAAAA,UAAU,EAPZ,KAAA;AAQEhJ,IAAAA,KAAK,EARP,CAAA;AASE4E,IAAAA,QAAQ,EATV,CAAA;AAUE3E,IAAAA,QAAQ,EAVV,CAAA;AAWEyO,IAAAA,MAAM,EAXR,MAAA;AAYEjH,IAAAA,IAAI,EAAJA;AAZF,GADF,EAAA,MAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,CAAA;AANF,CAAA;;AAyBO,IAAM2H,eAAe,GAAG,SAAlBA,eAAkB,CAAA,KAAA,EAAW;AACxClB,EAAAA,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAAAA,SAAAA;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,aAAAA;AACAA,EAAAA,KAAK,CAALA,kBAAAA,CAAAA,IAAAA,CAAAA,kBAAAA;AACAA,EAAAA,KAAK,CAALA,cAAAA,CAAAA,IAAAA,CAAAA,cAAAA;AAJK,CAAA;;AAOPkB,eAAe,CAAfA,UAAAA,GAAAA,iBAAAA;AClEA,IAAMC,QAAQ,GAAG;AAAErP,EAAAA,KAAK,EAAP,MAAA;AAAiBI,EAAAA,MAAM,EAAvB,MAAA;AAAiC8B,EAAAA,MAAM,EAAE;AAAzC,CAAjB;AACA,IAAMoN,qBAAqB,GAAG;AAC5BpN,EAAAA,MAAM,EADsB,SAAA;AAE5BqN,EAAAA,aAAa,EAAE;AAFa,CAA9B;AAKA;;;;AAIA,IAAMb,QAAM,GAAG,SAATA,MAAS,CAAA,IAAA,EAKT;AAAA,MAJJc,6BAII,GAAA,IAAA,CAJJA,6BAII;AAAA,MAHJC,QAGI,GAAA,IAAA,CAHJA,QAGI;AAAA,MAAA,qBAAA,GAAA,IAAA,CAFJvD,4BAEI;AAAA,MAF4BwD,aAE5B,GAAA,qBAAA,CAF4BA,aAE5B;AAAA,MAF2CC,aAE3C,GAAA,qBAAA,CAF2CA,aAE3C;AAAA,MADJC,qBACI,GAAA,IAAA,CADJA,qBACI;AACJ,MAAMC,QAAQ,GAAGhM,WAAW,CAC1B,UAAA,CAAA,EAAO;AACL,QAAMiM,eAAe,GAAG/L,CAAC,CAADA,MAAAA,CAAxB,OAAA;AACA6L,IAAAA,qBAAqB,CAArBA,eAAqB,CAArBA;;AACA,QAAI,OAAA,aAAA,KAAJ,UAAA,EAAyC;AACvCF,MAAAA,aAAa,EAAA;AAEX1L,MAAAA,sBAAsB,CAAA,CAAA,EAAI;AAAE8L,QAAAA,eAAe,EAAjB,eAAA;AAAmBC,QAAAA,gBAAgB,EAAED,eAAe,GAAA,QAAA,GAAc;AAAlE,OAAJ,CAFX,CAAbJ;AAID;AATuB,GAAA,EAW1B,CAAA,qBAAA,EAXF,QAWE,CAX0B,CAA5B;;AAcA,MAAIC,aAAa,KAAKK,kBAAkB,CAAxC,aAAA,EAAwD;AACtD,WAAA,IAAA;AACD;;AACD,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAcR,6BAAd,EAAA,EAAA;AAA+C,IAAA,KAAK,EAApD,qBAAA;AAA6E,IAAA,QAAQ,EAAEK;AAAvF,GAAA,CAAA,CAAP;AAvBF,CAAA;;AA0BA,IAAMpI,MAAI,GAAG,SAAPA,IAAO,CAAA,KAAA,EAAiF;AAAA,MAA9EG,GAA8E,GAAA,KAAA,CAA9EA,GAA8E;AAAA,MAAA,qBAAA,GAAA,KAAA,CAAzEsE,4BAAyE;AAAA,MAAzC+D,iBAAyC,GAAA,qBAAA,CAAzCA,iBAAyC;AAAA,MAAtBN,aAAsB,GAAA,qBAAA,CAAtBA,aAAsB;AAC5F,MAAMO,eAAe,GAAGrM,WAAW,CACjC,UAAA,CAAA,EAAO;AACL,QAAIsM,sBAAsB,CAAtBA,YAAAA,KAAJ,iBAAA,EAA+D;AAC7DvI,MAAAA,GAAG,CAAHA,WAAAA,GAAAA,OAAAA,CAAAA,CAAAA,EAAAA,IAAAA;AACD;AAJ8B,GAAA,EAMjC,CAAA,aAAA,EANF,GAME,CANiC,CAAnC;;AAQA,MAAIA,GAAG,CAAHA,SAAAA,IAAiB+H,aAAa,KAAKK,kBAAkB,CAAzD,aAAA,EAAyE;AACvE,WAAA,IAAA;AACD;;AACD,MAAIL,aAAa,KAAKK,kBAAkB,CAAxC,aAAA,EAAwD;AACtD,WAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,KAAK,EAAV,QAAA;AAAsB,MAAA,OAAO,EAAEE;AAA/B,KAAA,CAAP;AACD;;AACD,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EACMtI,GAAG,CADT,yBACMA,EADN,EAAA;AAEE,IAAA,QAAQ,EAFV,eAAA;AAGE,IAAA,KAAK,EAHP,qBAAA;AAIE,iBAAU;AAJZ,GAAA,CAAA,CADF;AAfF,CAAA;AAyBA;;;;;AAIA,IAAMwI,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA,KAAA,EAA0D;AAAA,MAArClE,4BAAqC,GAAA,KAAA,CAAjDC,QAAiD,CAArCD,4BAAqC;AAC3E,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAAiBA,4BAA4B,CAA7C,aAAA,EAA6DA,4BAA4B,CAAzF,iBAAA,CAAA,CAAA;AADF,CAAA;;AAIA,IAAMyC,oBAAkB,GAAG,SAArBA,kBAAqB,CAAA,IAAA,EAAA,KAAA,EAAA;AAAA,MAASxC,QAAT,GAAA,KAAA,CAAA,QAAA;AAAA,SAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA,EAAA,CAEzBA,QAAQ,CAARA,4BAAAA,CAFyB,aAAA,EAGzBA,QAAQ,CAARA,4BAAAA,CAHyB,iBAAA,CAAA,CAAA;AAA3B,CAAA;;AAMA,IAAMK,gBAAc,GAAG,SAAjBA,cAAiB,CAAA,qBAAA,EAAA,KAAA,EAA2E;AAAA,MAArCN,4BAAqC,GAAA,KAAA,CAAjDC,QAAiD,CAArCD,4BAAqC;;AAChG,MACEA,4BAA4B,CAA5BA,aAAAA,KAA+C8D,kBAAkB,CAAjE9D,IAAAA,IACAA,4BAA4B,CAA5BA,iBAAAA,KAAmDiE,sBAAsB,CAF3E,QAAA,EAGE;AACA,WAAA,qBAAA;AACD;;AAED,MAAME,eAAe,GAAG,qBAAqB,CAArB,IAAA,CAA2B,UAAA,KAAA,EAAA;AAAA,QAAG1K,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAd,qCAAA;AAAnD,GAAwB,CAAxB;AACA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA,kBAAA,CAA4B,qBAAqB,CAArB,MAAA,CAA6B,UAAA,KAAA,EAAA;AAAA,QAAGA,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAd,qCAAA;AAAzD,GAA4B,CAA5B,CAAA,CAAA;AATF,CAAA;;AAWA,IAAMuC,SAAO,GAAG,SAAVA,OAAU,CAAA,cAAA,EAAA,KAAA,EAAkC;AAAA,MAAfiE,QAAe,GAAA,KAAA,CAAfA,QAAe;AAAA,MACxCD,4BADwC,GACPC,QADO,CAAA,4BAAA;AAAA,MAExCwD,aAFwC,GAEOzD,4BAFP,CAAA,aAAA;AAAA,MAEzB+D,iBAFyB,GAEO/D,4BAFP,CAAA,iBAAA;AAAA,MAENoE,QAFM,GAEOpE,4BAFP,CAAA,QAAA;;AAIhD,MAAIyD,aAAa,KAAKK,kBAAkB,CAApCL,IAAAA,IAA6CM,iBAAiB,KAAKE,sBAAsB,CAA7F,QAAA,EAAwG;AACtG,WAAA,cAAA;AACD;;AAED,MAAMI,oBAAoB,GAAGD,QAAQ,CAARA,OAAAA,GACzBE,QAAQ,CACNC,gBAAgB,CAACH,QAAQ,CAAzBG,OAAgB,CAAhBA,CAAAA,gBAAAA,CAAAA,KAAAA,MAAAA,CACOC,qBAAqB,CAFtB,yCACND,CAAAA,CADM,EADiBH,EACjB,CADiBA,GAA7B,EAAA;AAQA,SAAA,CACE;AACE3K,IAAAA,EAAE,EADJ,qCAAA;AAEEoJ,IAAAA,QAAQ,EAFV,qCAAA;AAGEC,IAAAA,cAAc,EAHhB,IAAA;AAIEC,IAAAA,aAAa,EAJf,IAAA;AAKEC,IAAAA,cAAc,EALhB,IAAA;AAMEC,IAAAA,eAAe,EANjB,IAAA;AAOEnG,IAAAA,UAAU,EAPZ,KAAA;AAQEhJ,IAAAA,KAAK,EARP,oBAAA;AASE4E,IAAAA,QAAQ,EATV,oBAAA;AAUE3E,IAAAA,QAAQ,EAVV,oBAAA;AAWEyO,IAAAA,MAAM,EAXR,QAAA;AAYEjH,IAAAA,IAAI,EAAJA;AAZF,GADF,EAAA,MAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,CAAA;AAhBF,CAAA;;AAmCO,IAAMkJ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,KAAA,EAAW;AAC9CzC,EAAAA,KAAK,CAALA,OAAAA,CAAAA,IAAAA,CAAAA,SAAAA;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,UAAAA;AACAA,EAAAA,KAAK,CAALA,kBAAAA,CAAAA,IAAAA,CAAAA,oBAAAA;AACAA,EAAAA,KAAK,CAALA,cAAAA,CAAAA,IAAAA,CAAAA,gBAAAA;AAJK,CAAA;;AAMPyC,qBAAqB,CAArBA,UAAAA,GAAAA,uBAAAA;;ACjIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,GAAA,EAAA,IAAA,EAAuB;AAAA,MAAfzE,QAAe,GAAA,IAAA,CAAfA,QAAe;;AACxCvE,EAAAA,GAAG,CAAHA,eAAAA,GAAsB,UAAA,KAAA,EAAuC;AAAA,QAA/BiJ,kBAA+B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAV,KAAU;AAC3D1E,IAAAA,QAAQ,CAARA,eAAAA,CAAAA,GAAAA,EAAAA,KAAAA,EAAAA,kBAAAA;AADFvE,GAAAA;AADF,CAAA;;AAMA,IAAMkJ,WAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAA,KAAA,EAAuB;AAAA,MAAVlJ,GAAU,GAAA,KAAA,CAAVA,GAAU;AACzC,SAAO,CAAA,QAAA,EAEL;AACEmJ,IAAAA,OAAO,EAAEnJ,GAAG,CAACoJ;AADf,GAFK,CAAP;AADF,CAAA;;AASA,IAAMC,gCAAgC,GAAG,IAAA,GAAA,CAAQ,CAAA,WAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,qBAAA,EAAA,YAAA,EAAjD,kBAAiD,CAAR,CAAzC;;AAeA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAc;AAAA,MACxBhF,4BADwB,GACwDC,QADxD,CAAA,4BAAA;AAAA,MACMgF,QADN,GACwDhF,QADxD,CAAA,QAAA;AAAA,MACgBiF,iBADhB,GACwDjF,QADxD,CAAA,iBAAA;AAAA,MACmC4D,gBADnC,GACwD5D,QADxD,CAAA,gBAAA;AAAA,MAExBkF,WAFwB,GAEyCnF,4BAFzC,CAAA,WAAA;AAAA,MAEXyD,aAFW,GAEyCzD,4BAFzC,CAAA,aAAA;AAAA,MAEIwD,aAFJ,GAEyCxD,4BAFzC,CAAA,aAAA;AAAA,MAEmB+D,iBAFnB,GAEyC/D,4BAFzC,CAAA,iBAAA;AAIhC,MAAM8E,eAAe,GAAGnN,WAAW,CACjC,UAAA,GAAA,EAAA,CAAA,EAAwC;AAAA,QAAA,SAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,aAAA;;AAAA,QAA/BgN,kBAA+B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAV,KAAU;;AACtC,QACE,CAAA,CAAA,SAAA,GAAA,CAAC,CAAD,MAAA,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,iBAAA,GAAA,SAAA,CAAA,OAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAA,IAAA,MAAA,2BAAA,IACA,EAAE9M,CAAC,CAADA,4BAAAA,KAAAA,IAAAA,IAA2C,CAAA,CAAA,cAAA,GAAA,CAAC,CAAD,WAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAA,4BAAA,MAD7C,IACA,CADA,IAEAkN,gCAAgC,CAAhCA,GAAAA,CAAqClN,CAAC,CAADA,MAAAA,CAHvC,OAGEkN,CAHF,EAIE;AACA;AACD;;AAED,QAAMK,UAAU,GAAA,CAAA,aAAA,GAAG1J,GAAG,CAAN,QAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAAnB,QAAA;;AACA,QAAI,CAACoI,kBAAkB,CAAnB,aAAA,EAAmCA,kBAAkB,CAArD,YAAA,EAAA,QAAA,CAAA,aAAA,KAA+F,CAAnG,UAAA,EAAgH;AAC9G,UAAIpI,GAAG,CAAHA,SAAAA,IAAkBuI,sBAAsB,CAAtBA,YAAAA,KAAAA,iBAAAA,IAA6D,CAAnF,kBAAA,EAAyG;AACvG;AACD;;AACD,UAAA,WAAA,EAAiB;AACf,YAAIR,aAAa,KAAKK,kBAAkB,CAAxC,YAAA,EAAuD;AACrDmB,UAAAA,QAAQ,CAAC;AACPI,YAAAA,IAAI,EADG,mBAAA;AAEPC,YAAAA,WAAW,EAAEC,MAAM,CAANA,MAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EAAM,CAAA,EAAA,EAAA,MAAA,CAAA,kBAAA,CAAe,gBAAgB,CAAhB,GAAA,CAAqB,UAAA,IAAA,EAAA;AAAA,qBAAA,eAAA,CAAA,EAAA,EAAchF,IAAI,CAAlB,EAAA,EAAA,IAAA,CAAA;AAApC,aAAe,CAAf,CAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAChB7E,GAAG,CADa,EAAA,EACP,CAACA,GAAG,CADG,UAAA,CAAA,CAAA,CAAN6J;AAFN,WAAD,CAARN;AADF,SAAA,MAOO;AACLA,UAAAA,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAN,mBAAA;AAA6BC,YAAAA,WAAW,EAAA,eAAA,CAAA,EAAA,EAAK5J,GAAG,CAAR,EAAA,EAAc,CAACA,GAAG,CAAlB,UAAA;AAAxC,WAAD,CAARuJ;AACD;AAVH,OAAA,MAWO;AACLvJ,QAAAA,GAAG,CAAHA,iBAAAA;AACD;;AACD,UAAI,OAAA,aAAA,KAAJ,UAAA,EAAyC;AACvC,YAAM8J,OAAO,GAAG;AACd9J,UAAAA,GAAG,EADW,GAAA;AAEd+J,UAAAA,UAAU,EAAE,CAAC/J,GAAG,CAAC+J;AAFH,SAAhB;;AAIA,YAAMC,mBAAmB,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA;AAEvB7B,UAAAA,gBAAgB,EAAE,CAACnI,GAAG,CAAJ,UAAA,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAEd,gBAAgB,CAAhB,MAAA,CAAwB,UAAA,OAAA,EAAA;AAAA,mBAAaiK,OAAO,CAAPA,EAAAA,KAAejK,GAAG,CAA/B,EAAA;AAAxB,WAAA;AAJmB,SAAA,CAAzB;;AAMA8H,QAAAA,aAAa,CACX1L,sBAAsB,CAAA,CAAA,EAAIgM,kBAAkB,CAAlBA,YAAAA,KAAAA,aAAAA,GAAAA,mBAAAA,GAD5BN,OACwB,CADX,CAAbA;AAGD;;AACD,UAAIC,aAAa,KAAKK,kBAAkB,CAApCL,aAAAA,IAAsD,CAA1D,WAAA,EAAwE;AACtEI,QAAAA,gBAAgB,CAAhBA,OAAAA,CAAyB,UAAA,KAAA,EAAY;AAAA,cAATpK,EAAS,GAAA,KAAA,CAATA,EAAS;AACnCyL,UAAAA,iBAAiB,CAAA,EAAA,EAAjBA,KAAiB,CAAjBA;AADFrB,SAAAA;AAGD;AACF;AAjD8B,GAAA,EAmDjC,CAAA,aAAA,EAAA,WAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAnDF,iBAmDE,CAnDiC,CAAnC;AAsDA0B,EAAAA,MAAM,CAANA,MAAAA,CAAAA,QAAAA,EAAwB;AAAET,IAAAA,eAAe,EAAfA;AAAF,GAAxBS;AA1DF,CAAA;;AA6DO,IAAMK,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAA,KAAA,EAAW;AACnD5D,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,WAAAA;AACAA,EAAAA,KAAK,CAALA,UAAAA,CAAAA,IAAAA,CAAAA,UAAAA;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,WAAAA;AAHK,CAAA;;AAKP4D,0BAA0B,CAA1BA,UAAAA,GAAAA,4BAAAA;;AC7FA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,UAAA,EAAA,IAAA,EAA8B;AAAA,MAAf5F,QAAe,GAAA,IAAA,CAAfA,QAAe;AAAA,MAC1CzG,OAD0C,GAC9ByG,QAAQ,CADsB,4BAC9BA,CAD8B,OAAA;AAElD,SAAO,CAAA,UAAA,EAEL;AACEtG,IAAAA,SAAS,EAAEH,OAAO,CAAC5F;AADrB,GAFK,CAAP;AAFF,CAAA;;AAUA,IAAMkS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,gBAAA,EAAA,KAAA,EAAoC;AAAA,MAAf7F,QAAe,GAAA,KAAA,CAAfA,QAAe;AAAA,MACtDzG,OADsD,GAC1CyG,QAAQ,CADkC,4BAC1CA,CAD0C,OAAA;AAE9D,SAAO,CAAA,gBAAA,EAEL;AACEtG,IAAAA,SAAS,EAAEH,OAAO,CAAChF;AADrB,GAFK,CAAP;AAFF,CAAA;;AAUA,IAAMuR,cAAc,GAAG,SAAjBA,cAAiB,CAAA,WAAA,EAAA,KAAA,EAAuC;AAAA,MAAvB9F,QAAuB,GAAA,KAAA,CAAvBA,QAAuB;AAAA,MAAbjJ,MAAa,GAAA,KAAA,CAAbA,MAAa;AAAA,MACpDwC,OADoD,GACxCyG,QAAQ,CADgC,4BACxCA,CADwC,OAAA;AAE5D,MAAM+F,KAAK,GAAGhN,MAAd,EAAA;AACA,MAAMiN,YAAY,GAAGhG,QAAQ,CAARA,cAAAA,CAAwBA,QAAQ,CAARA,cAAAA,CAAAA,MAAAA,GAAxBA,CAAAA,EAArB,EAAA;AACA,MAAMiG,YAAY,GAAGlP,MAAM,CAANA,EAAAA,KAArB,YAAA;AACA,MAAM4C,KAAoB,GAAG;AAC3B9F,IAAAA,KAAK,EAAEkD,MAAM,CAACmJ;AADa,GAA7B;;AAIA,MAAIF,QAAQ,CAARA,KAAAA,CAAAA,YAAAA,IAAJ,YAAA,EAAiD;AAC/CrG,IAAAA,KAAK,CAACoM,KAAK,GAAA,aAAA,GAAXpM,cAAK,CAALA,GAAgDvF,iBAAiB,CAAjEuF,sBAAAA;AACD;;AAED,MAAI5C,MAAM,CAANA,EAAAA,KAAAA,qCAAAA,IAAuDA,MAAM,CAANA,EAAAA,KAA3D,qCAAA,EAAgH;AAC9G4C,IAAAA,KAAK,CAALA,OAAAA,GAAAA,CAAAA;AACD;;AAED,SAAO,CAAA,WAAA,EAEL;AACED,IAAAA,SAAS,EAAEH,OAAO,CADpB,EAAA;AAEExC,IAAAA,MAAM,EAFR,MAAA;AAGE4C,IAAAA,KAAK,EAHP,KAAA;AAIEH,IAAAA,EAAE,EAAEzC,MAAM,CAACyC;AAJb,GAFK,CAAP;AAjBF,CAAA;;AA4BA,IAAM0M,uBAAuB,GAA7B,kBAAA;;AAEA,IAAMvB,aAAW,GAAG,SAAdA,WAAc,CAAA,QAAA,EAAA,KAAA,EAAiC;AAAA,MAAA,aAAA;;AAAA,MAApB3E,QAAoB,GAAA,KAAA,CAApBA,QAAoB;AAAA,MAAVvE,GAAU,GAAA,KAAA,CAAVA,GAAU;AAAA,MAC3CsE,4BAD2C,GACVC,QADU,CAAA,4BAAA;AAAA,MAE3CzG,OAF2C,GAEsBwG,4BAFtB,CAAA,OAAA;AAAA,MAElC+D,iBAFkC,GAEsB/D,4BAFtB,CAAA,iBAAA;AAAA,MAEfyD,aAFe,GAEsBzD,4BAFtB,CAAA,aAAA;AAAA,MAEAzK,iBAFA,GAEsByK,4BAFtB,CAAA,iBAAA;AAGnD,MAAMoF,UAAU,GAAA,CAAA,aAAA,GAAG1J,GAAG,CAAN,QAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAAnB,QAAA;AACA,MAAI/B,SAAS,GAAGH,OAAO,CAAvB,EAAA;AACA,MAAM4M,gBAAgB,GACpB,CAACtC,kBAAkB,CAAnB,aAAA,EAAmCA,kBAAkB,CAArD,YAAA,EAAA,QAAA,CAAA,aAAA,KAA+F,CADjG,UAAA;;AAGA,MAAIpI,GAAG,CAAP,SAAA,EAAmB;AACjB/B,IAAAA,SAAS,IAAA,IAAA,MAAA,CAAQH,OAAO,CAAxBG,gBAAS,CAATA;AACD;;AAED,MAAIpE,iBAAiB,IAAImG,GAAG,CAAHA,KAAAA,GAAAA,CAAAA,KAAzB,CAAA,EAA8C;AAC5C/B,IAAAA,SAAS,IAAA,IAAA,MAAA,CAAQH,OAAO,CAAxBG,iBAAS,CAATA;AACD;;AAED,MAAM0M,WAAW,GAAG;AAClB1M,IAAAA,SAAS,EADS,SAAA;AAElBS,IAAAA,IAAI,EAFc,KAAA;AAGlB,qBAAiBsB,GAAG,CAACsC;AAHH,GAApB;;AAMA,MAAA,gBAAA,EAAsB;AACpB,QAAIiG,sBAAsB,CAAtBA,YAAAA,KAAJ,iBAAA,EAA+D;AAC7DoC,MAAAA,WAAW,CAAXA,SAAAA,IAAAA,IAAAA,MAAAA,CAA6B7M,OAAO,CAApC6M,QAAAA,CAAAA;AACD;;AACD,QAAI3K,GAAG,CAAP,UAAA,EAAoB;AAClB2K,MAAAA,WAAW,CAAXA,uBAAW,CAAXA,GAAAA,EAAAA;AACD;AACF;;AAED,SAAO,CAAA,QAAA,EAAP,WAAO,CAAP;AA/BF,CAAA;;AAkCA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAA,SAAA,EAAA,KAAA,EAA+C;AAAA,MAAzBtP,MAAyB,GAAA,KAAA,CAAjCwE,IAAiC,CAAzBxE,MAAyB;AAAA,MAAfiJ,QAAe,GAAA,KAAA,CAAfA,QAAe;AAClE,MAAM/D,WAAW,GAAG,QAAQ,CAAR,cAAA,CAAA,SAAA,CAAkC,UAAA,KAAA,EAAA;AAAA,QAAGzC,EAAH,GAAA,KAAA,CAAA,EAAA;AAAA,WAAYA,EAAE,KAAKzC,MAAM,CAAzB,EAAA;AAAtD,GAAoB,CAApB;AACA,MAAMkP,YAAY,GAAGjG,QAAQ,CAARA,cAAAA,CAAAA,MAAAA,KAAmC/D,WAAW,GAAnE,CAAA;AAFkE,MAG1D1C,OAH0D,GAG9CyG,QAAQ,CAHsC,4BAG9CA,CAH8C,OAAA;AAIlE,MAAMrG,KAAoB,GAA1B,EAAA;;AAEA,UAAQ5C,MAAM,CAAd,MAAA;AACE,SAAKsF,SAAS,CAAd,KAAA;AACE1C,MAAAA,KAAK,CAALA,cAAAA,GAAAA,YAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,GAAAA,OAAAA;AACA;;AACF,SAAK0C,SAAS,CAAd,MAAA;AACE1C,MAAAA,KAAK,CAALA,cAAAA,GAAAA,QAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,GAAAA,QAAAA;AACA;;AACF,SAAK0C,SAAS,CAAd,GAAA;AACE1C,MAAAA,KAAK,CAALA,cAAAA,GAAAA,UAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,GAAAA,KAAAA;AACA;;AACF,SAAK0C,SAAS,CAAd,IAAA;AACE1C,MAAAA,KAAK,CAALA,cAAAA,GAAAA,MAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,GAAAA,MAAAA;AACA;;AACF,SAAK0C,SAAS,CAAd,KAAA;AACE1C,MAAAA,KAAK,CAALA,cAAAA,GAAAA,OAAAA;AACAA,MAAAA,KAAK,CAALA,SAAAA,GAAAA,OAAAA;AACA;AApBJ;;AAsBA,UAAQ5C,MAAM,CAAd,MAAA;AACE,SAAKgG,aAAa,CAAlB,MAAA;AACEpD,MAAAA,KAAK,CAALA,UAAAA,GAAAA,UAAAA;AACA;;AACF,SAAKoD,aAAa,CAAlB,MAAA;AACEpD,MAAAA,KAAK,CAALA,UAAAA,GAAAA,QAAAA;AACA;;AACF,SAAKoD,aAAa,CAAlB,GAAA;AACEpD,MAAAA,KAAK,CAALA,UAAAA,GAAAA,YAAAA;AACA;AATJ;;AAYA,MAAID,SAAS,GAAGH,OAAO,CAAvB,SAAA;;AACA,MAAIxC,MAAM,CAAV,SAAA,EAAsB;AACpB2C,IAAAA,SAAS,IAAA,IAAA,MAAA,CAAQ3C,MAAM,CAAvB2C,SAAS,CAATA;AACD;;AAED,MAAI3C,MAAM,CAANA,EAAAA,KAAAA,qCAAAA,IAAuDA,MAAM,CAANA,EAAAA,KAA3D,qCAAA,EAAgH;AAC9G4C,IAAAA,KAAK,CAALA,OAAAA,GAAAA,CAAAA;AACD;;AAED,MAAIsM,YAAY,IAAIjG,QAAQ,CAARA,KAAAA,CAApB,YAAA,EAAiD;AAC/CrG,IAAAA,KAAK,CAALA,KAAAA,GAAAA,QAAAA,MAAAA,CAAsB5C,MAAM,CAA5B4C,UAAAA,EAAAA,OAAAA,EAAAA,MAAAA,CAA+CvF,iBAAiB,CAAhEuF,sBAAAA,EAAAA,GAAAA,CAAAA;AADF,GAAA,MAEO;AACLA,IAAAA,KAAK,CAALA,KAAAA,GAAAA,GAAAA,MAAAA,CAAiB5C,MAAM,CAAvB4C,UAAAA,EAAAA,IAAAA,CAAAA;AACD;;AAED,SAAO,CAAA,SAAA,EAEL;AACED,IAAAA,SAAS,EADX,SAAA;AAEEC,IAAAA,KAAK,EAFP,KAAA;AAGE2M,IAAAA,QAAQ,EAAE,CAHZ,CAAA;AAIE,qBAAiBrK,WAAW,GAJ9B,CAAA,CAAA;;AAAA,GAFK,CAAP;AAvDF,CAAA;;AAkEO,IAAMsK,UAAU,GAAG,SAAbA,UAAa,CAAA,KAAA,EAAW;AACnCxE,EAAAA,KAAK,CAALA,aAAAA,CAAAA,IAAAA,CAAAA,aAAAA;AACAA,EAAAA,KAAK,CAALA,mBAAAA,CAAAA,IAAAA,CAAAA,mBAAAA;AACAA,EAAAA,KAAK,CAALA,cAAAA,CAAAA,IAAAA,CAAAA,cAAAA;AACAA,EAAAA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,CAAAA,aAAAA;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,IAAAA,CAAAA,YAAAA;AALK,CAAA;;AAOPwE,UAAU,CAAVA,UAAAA,GAAAA,YAAAA;;ACjKO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,GAAA,EAAS;AAC5C,MAAMC,kBAAoD,GAAGC,kBAAkB,CAA/E,GAA+E,CAA/E;AACA,MAAMC,cAAc,GAAG1L,MAAM,CAA7B,EAA6B,CAA7B;AAEA2L,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIH,kBAAkB,CAAtB,OAAA,EAAgC;AAC9BnB,MAAAA,MAAM,CAANA,MAAAA,CAAcmB,kBAAkB,CAAhCnB,OAAAA,EAA0C;AACxCuB,QAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,MAAA,EAAA,KAAA,EAAmB;AAAA,cAAA,qBAAA;;AAC3B,cAAI,QAAA,CAAA,qBAAA,GAAOF,cAAc,CAArB,OAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,qBAAAA,CAAP,cAAA,MAAJ,UAAA,EAAkE;AAChEA,YAAAA,cAAc,CAAdA,OAAAA,CAAAA,cAAAA,CAAAA,MAAAA,EAA8C;AAAEG,cAAAA,KAAK,EAALA;AAAF,aAA9CH;AACD;AAJqC,SAAA;AAMxCI,QAAAA,YAAY,EAAE,SAAA,YAAA,CAAA,KAAA,EAAA,KAAA,EAAkB;AAAA,cAAA,sBAAA;;AAC9B,cAAI,QAAA,CAAA,sBAAA,GAAOJ,cAAc,CAArB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,sBAAAA,CAAP,aAAA,MAAJ,UAAA,EAAiE;AAC/DA,YAAAA,cAAc,CAAdA,OAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAA4C;AAAEG,cAAAA,KAAK,EAALA;AAAF,aAA5CH;AACD;AACF;AAVuC,OAA1CrB;AAYD;AAdM,GAAA,EAeN,CAACmB,kBAAkB,CAAnB,OAAA,EAA6BE,cAAc,CAAdA,OAAAA,CAA7B,aAAA,EAAmEA,cAAc,CAAdA,OAAAA,CAftEC,cAeG,CAfM,CAATA;AAiBA,SAAO,CAAA,kBAAA,EAAP,cAAO,CAAP;AArBK,CAAA;;ACDP,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAA,QAAA,EAAA,IAAA,EAAiC;AAAA,MAApBvL,GAAoB,GAAA,IAAA,CAApBA,GAAoB;AAAA,MAAfuE,QAAe,GAAA,IAAA,CAAfA,QAAe;AAAA,MAAA,qBAAA,GACtBA,QAAQ,CADc,4BAAA;AAAA,MACzDiH,iBADyD,GAAA,qBAAA,CAAA,iBAAA;AAAA,MACtC/B,WADsC,GAAA,qBAAA,CAAA,WAAA;AAEjE,MAAMN,OAAO,GAAGlN,WAAW,CACzB,UAAA,CAAA,EAAO;AACLE,IAAAA,CAAC,CAADA,eAAAA;AACAA,IAAAA,CAAC,CAADA,OAAAA;AACA6D,IAAAA,GAAG,CAAHA,iBAAAA;AACA,QAAI1E,MAAM,GAAV,IAAA;;AACA,QAAI,CAAJ,WAAA,EAAkB;AAChBA,MAAAA,MAAM,GAAG,GAAG,CAAH,KAAA,CAAA,IAAA,CAAe,UAAA,IAAA,EAAA;AAAA,eAAUwE,IAAI,CAAJA,MAAAA,CAAAA,EAAAA,KAAmBE,GAAG,CAAhC,SAAA;AAAf,OAAA,EAAT1E,MAAAA;AACD;;AAEDkQ,IAAAA,iBAAiB,CAACpP,sBAAsB,CAAA,CAAA,EAAI;AAAE4D,MAAAA,GAAG,EAAL,GAAA;AAAO1E,MAAAA,MAAM,EAANA;AAAP,KAAJ,CAAvB,CAAjBkQ;AAVuB,GAAA,EAYzB,CAAA,GAAA,EAAA,WAAA,EAZF,iBAYE,CAZyB,CAA3B;AAcA,SAAO,CAAA,QAAA,EAEL;AACErC,IAAAA,OAAO,EAAPA;AADF,GAFK,CAAP;AAhBF,CAAA;;AAwBO,IAAMsC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA,KAAA,EAAW;AAC3CnF,EAAAA,KAAK,CAALA,yBAAAA,CAAAA,IAAAA,CAAAA,yBAAAA;AADK,CAAA;;AAGPmF,kBAAkB,CAAlBA,UAAAA,GAAAA,oBAAAA;;AC9BO,SAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAiC;AACtC;AACA,MAAK,CAAA,IAAA,IAAD,IAAC,IAAmBC,IAAI,IAAI,CAAhC,IAAA,EAAwC;AACtC,WAAA,KAAA;AACD;;AACD,OAAK,IAAL,CAAA,IAAA,IAAA,EAAoB;AAClB;AACA,QAAIA,IAAI,CAAJA,cAAAA,CAAAA,CAAAA,MAA2BC,IAAI,CAAJA,cAAAA,CAA/B,CAA+BA,CAA/B,EAAuD,OAAA,KAAA;;AAEvD,YAAQ,OAAOD,IAAI,CAAnB,CAAmB,CAAnB;AACE;AACA,WAAA,QAAA;AACE,YAAI,CAACE,WAAW,CAACF,IAAI,CAAL,CAAK,CAAL,EAAUC,IAAI,CAA9B,CAA8B,CAAd,CAAhB,EAAoC,OAAA,KAAA;AACpC;AACF;;AACA,WAAA,UAAA;AACE,YAAI,OAAOA,IAAI,CAAX,CAAW,CAAX,IAAA,WAAA,IAAkCE,CAAC,IAADA,SAAAA,IAAkBH,IAAI,CAAJA,CAAI,CAAJA,CAAAA,QAAAA,MAAsBC,IAAI,CAAJA,CAAI,CAAJA,CAA9E,QAA8EA,EAA9E,EAAmG,OAAA,KAAA;AACnG;AACF;;AACA;AACE,YAAID,IAAI,CAAJA,CAAI,CAAJA,IAAWC,IAAI,CAAnB,CAAmB,CAAnB,EAAwB,OAAA,KAAA;AAX5B;AAToC,GAAA,CAAA;;;AAyBtC,OAAK,IAAL,EAAA,IAAA,IAAA,EAAoB;AAClB,QAAI,OAAOA,IAAI,CAAX,EAAW,CAAX,KAAA,WAAA,IAAkC,OAAOD,IAAI,CAAX,EAAW,CAAX,KAAtC,WAAA,EAAsE;AACpE,aAAA,KAAA;AAFgB,KAAA,CAAA;;AAKnB;;AACD,SAAA,IAAA;AACD;;AC9BM,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAAA,QAAA,EAAA,MAAA,EAAsB;AAAA,MACxChC,OADwC,GAC5BiC,MAD4B,CAAA,OAAA;;AAEhD,UAAQA,MAAM,CAAd,IAAA;AACE,SAAA,cAAA;AACE,UAAIH,WAAW,CAACI,QAAQ,CAAT,OAAA,EAAf,OAAe,CAAf,EAA4C;AAC1C,eAAA,QAAA;AACD;;AACD,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA;AAAsBC,QAAAA,OAAO,EAAEnC;AAA/B,OAAA,CAAA;;AACF,SAAA,mBAAA;AACE,UAAI8B,WAAW,CAACI,QAAQ,CAAT,cAAA,EAA0BD,MAAM,CAA/C,WAAe,CAAf,EAA8D;AAC5D,eAAA,QAAA;AACD;;AACD,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA;AAAsBG,QAAAA,cAAc,EAAEH,MAAM,CAACnC;AAA7C,OAAA,CAAA;;AACF,SAAA,cAAA;AACE,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA;AAAsBuC,QAAAA,gBAAgB,EAAErC,OAAO,CAACqC;AAAhD,OAAA,CAAA;;AACF,SAAA,yBAAA;AACE,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA;AAAsBC,QAAAA,YAAY,EAAEtC,OAAO,CAACsC;AAA5C,OAAA,CAAA;;AACF;AACE,aAAA,QAAA;AAhBJ;AAFK,CAAA;;ACCP,IAAMnU,QAAM,GAAG;AACbQ,EAAAA,SAAS,EADI,QAAA;AAEbO,EAAAA,OAAO,EAFM,MAAA;AAGb8B,EAAAA,UAAU,EAAE;AAHC,CAAf;;AAaA,IAAMuR,QAA2B,GAAG,SAA9BA,QAA8B,CAAA,KAAA,EAAW;AAAA,MACrCrO,QADqC,GACxBvC,KADwB,CAAA,QAAA;AAE7C,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,KAAK,EAAExD;AAAZ,GAAA,EACG,OAAA,QAAA,KAAA,QAAA,IAAA,aAAgC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EADnC,QACmC,CADnC,EAEGqU,cAAc,CAAdA,QAAc,CAAdA,IAHL,QACE,CADF;AAFF,CAAA;;ACdO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAiC;AACxD,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,MAAA,EAAA,KAAA,EAAmB;AACpC,QAAMC,IAAI,GAAGC,UAAU,CAAVA,KAAU,CAAVA,KAAAA,KAAAA,IAA+BA,UAAU,CAAVA,KAAU,CAAVA,KAA5C,MAAA;AAEA,WAAO,UAAA,IAAA,EAAA,IAAA,EAAgB;AAAA,UAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,eAAA,EAAA,eAAA,EAAA,eAAA;;AACrB,UAAI,CAAA,CAAA,cAAA,GAAA,IAAI,CAAJ,QAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAA,QAAA,KAA2B,EAAA,CAAA,cAAA,GAACC,IAAI,CAAL,QAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,cAAAA,CAAhC,QAA+B,CAA/B,EAAyD;AACvD,eAAOF,IAAI,GAAG,CAAH,CAAA,GAAX,CAAA;AACD;;AACD,UAAI,EAAA,CAAA,eAAA,GAACG,IAAI,CAAL,QAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAACA,eAAAA,CAAD,QAAA,MAAA,CAAA,eAAA,GAA4BD,IAAI,CAAhC,QAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA4BA,eAAAA,CAAhC,QAAI,CAAJ,EAAyD;AACvD,eAAOF,IAAI,GAAA,CAAA,GAAO,CAAlB,CAAA;AACD;;AACD,UAAI,CAAA,CAAA,eAAA,GAAA,IAAI,CAAJ,QAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAA,QAAA,MAAA,CAAA,eAAA,GAA2BE,IAAI,CAA/B,QAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAA2BA,eAAAA,CAA/B,QAAI,CAAJ,EAAwD;AACtD,eAAA,CAAA;AACD;;AACD,aAAOE,MAAM,CAAA,IAAA,EAAb,IAAa,CAAb;AAVF,KAAA;AAHF,GAAA;;AAiBA,MAAMC,oBAAoB,GAAGC,SAAS,CAATA,GAAAA,CAA7B,UAA6BA,CAA7B;AAEA,SAAOC,gBAAgB,CAAA,IAAA,EAAA,oBAAA,EAAvB,UAAuB,CAAvB;AApBK,CAAA;;AC0BA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA,KAAA,EAAkC;AAAA,MAE9DnP,OAF8D,GAiB5DrC,KAjB4D,CAAA,OAAA;AAAA,MAG9DuN,UAH8D,GAiB5DvN,KAjB4D,CAAA,UAAA;AAAA,MAI9DuG,IAJ8D,GAiB5DvG,KAjB4D,CAAA,IAAA;AAAA,MAK9DyR,OAL8D,GAiB5DzR,KAjB4D,CAAA,OAAA;AAAA,MAM9DsM,aAN8D,GAiB5DtM,KAjB4D,CAAA,aAAA;AAAA,MAO9DyP,cAP8D,GAiB5DzP,KAjB4D,CAAA,cAAA;AAAA,MAQ9DgO,WAR8D,GAiB5DhO,KAjB4D,CAAA,WAAA;AAAA,MAS9D0R,iBAT8D,GAiB5D1R,KAjB4D,CAAA,iBAAA;AAAA,MAU9D2R,eAV8D,GAiB5D3R,KAjB4D,CAAA,eAAA;AAAA,MAW9D4R,WAX8D,GAiB5D5R,KAjB4D,CAAA,WAAA;AAAA,MAY9D6R,aAZ8D,GAiB5D7R,KAjB4D,CAAA,aAAA;AAAA,MAa9D8R,iBAb8D,GAiB5D9R,KAjB4D,CAAA,iBAAA;AAAA,MAc9D+R,cAd8D,GAiB5D/R,KAjB4D,CAAA,cAAA;AAAA,MAe9DgS,uBAf8D,GAiB5DhS,KAjB4D,CAAA,uBAAA;AAAA,MAgB9DiS,UAhB8D,GAiB5DjS,KAjB4D,CAAA,UAAA;AAmBhE,MAAMkS,uBAAuB,GAAGnO,MAAM,CAAC,IAAvC,GAAuC,EAAD,CAAtC;AAEA,MAAMoO,SAAS,GAAG1J,IAAI,CAAJA,GAAAA,CAAAA,OAAAA,EAAkBlC,IAAI,CAAxC,MAAkBkC,CAAlB;AACA,MAAM2J,QAAQ,GAAGP,aAAa,GAAA,aAAA,GAAmBpJ,IAAI,CAAJA,KAAAA,CAAWmJ,WAAW,GAAvE,CAAiDnJ,CAAjD;AAEA,MAAM4J,SAAS,GAAGtO,MAAlB,EAAA;AAEA,MAAMuO,cAAc,GAAGC,UAAU,CAAC;AAChCC,IAAAA,IAAI,EAD4B,SAAA;AAEhCH,IAAAA,SAAS,EAFuB,SAAA;AAGhCI,IAAAA,YAAY,EAAE,KAAK,CAAL,WAAA,CAAkB,YAAA;AAAA,aAAA,iBAAA;AAAlB,KAAA,EAA2C,CAHzB,iBAGyB,CAA3C,CAHkB;AAIhCL,IAAAA,QAAQ,EAARA;AAJgC,GAAD,CAAjC;AAOA3C,EAAAA,cAAc,CAAdA,OAAAA,GAAyB;AACvBiD,IAAAA,cAAc,EAAEJ,cAAc,CADP,cAAA;AAEvBK,IAAAA,aAAa,EAAEL,cAAc,CAACK;AAFP,GAAzBlD;AAKA,MAAMmD,UAAU,GAAGC,gBAAgB,CAAhBA,EAAAA,CAAoBxQ,OAAO,CAA3BwQ,KAAAA,EAAmCC,kBAAkB,CAAxE,YAAmBD,CAAnB;AAEA,MAAME,aAAa,GAAGhP,MAAM,CAA5B,CAA4B,CAA5B;AAEA,MAAMiP,QAAQ,GAAGxS,WAAW,CAC1B,UAAA,KAAA,EAAW;AACT,QAAMyS,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAArB,SAAA;AACA,QAAMC,eAAe,GAAGJ,aAAa,CAAbA,OAAAA,GAAxB,YAAA;;AACA,QAAII,eAAe,IAAnB,cAAA,EAAuC;AACrCJ,MAAAA,aAAa,CAAbA,OAAAA,GAAAA,YAAAA;AACA,UAAMK,aAAa,GAAG3K,IAAI,CAAJA,KAAAA,CAAWwK,YAAY,GAA7C,iBAAsBxK,CAAtB;;AACA,UAAIlC,IAAI,CAAJA,MAAAA,GAAAA,aAAAA,GAAJ,uBAAA,EAA2D;AACzD,YAAI,CAAC2L,uBAAuB,CAAvBA,OAAAA,CAAAA,GAAAA,CAAoC3L,IAAI,CAA7C,MAAK2L,CAAL,EAAuD;AACrDD,UAAAA,UAAU,CAAC;AACToB,YAAAA,MAAM,EAAE;AACNC,cAAAA,QAAQ,EAAE/M,IAAI,CAACgN;AADT;AADC,WAAD,CAAVtB;AAKD;;AACDC,QAAAA,uBAAuB,CAAvBA,OAAAA,CAAAA,GAAAA,CAAoC3L,IAAI,CAAxC2L,MAAAA;AACD;AACF;AAjBuB,GAAA,EAmB1B,CAAA,cAAA,EAAA,uBAAA,EAAA,UAAA,EAIE3L,IAAI,CAJN,MAAA,EAAA,iBAAA,EAAA,uBAAA,EAnBF,aAmBE,CAnB0B,CAA5B;AA8BA,MAAMiN,oBAAoB,GAAGzP,MAAM,CAAnC,IAAmC,CAAnC;AACA,MAAM0P,YAAY,GAAGjT,WAAW,CAC9B,UAAA,CAAA,EAAO;AACL,QAAMkT,SAAyB,GAAGhT,CAAC,CAADA,MAAAA,CAAAA,aAAAA,CAAlC,0DAAkCA,CAAlC;;AAGA,QAAA,SAAA,EAAe;AACbgT,MAAAA,SAAS,CAATA,QAAAA,GAAAA,CAAAA;AACAA,MAAAA,SAAS,CAATA,KAAAA;AACAF,MAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,SAAAA;AACD;AAT2B,GAAA,EAW9B,CAXF,oBAWE,CAX8B,CAAhC;AAcA,MAAMG,oBAAoB,GAAGnT,WAAW,CACtC,UAAA,CAAA,EAAO;AACL,QAAIgT,oBAAoB,CAAxB,OAAA,EAAkC;AAChC,cAAQ9S,CAAC,CAAT,GAAA;AACE,aAAA,YAAA;AAAmB;AACjB,gBAAMkT,UAAU,GAAGJ,oBAAoB,CAApBA,OAAAA,CAAnB,kBAAA;;AACA,gBAAA,UAAA,EAAgB;AACdA,cAAAA,oBAAoB,CAApBA,OAAAA,CAAAA,QAAAA,GAAwC,CAAxCA,CAAAA;AACAI,cAAAA,UAAU,CAAVA,QAAAA,GAAAA,CAAAA;AACAA,cAAAA,UAAU,CAAVA,KAAAA;AACAJ,cAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,UAAAA;AACD;;AACD;AACD;;AACD,aAAA,WAAA;AAAkB;AAChB,gBAAMI,WAAU,GAAGJ,oBAAoB,CAApBA,OAAAA,CAAnB,sBAAA;;AACA,gBAAA,WAAA,EAAgB;AACdA,cAAAA,oBAAoB,CAApBA,OAAAA,CAAAA,QAAAA,GAAwC,CAAxCA,CAAAA;AACAI,cAAAA,WAAU,CAAVA,QAAAA,GAAAA,CAAAA;;AACAA,cAAAA,WAAU,CAAVA,KAAAA;;AACAJ,cAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,WAAAA;AACD;;AACD;AACD;;AACD,aAAA,WAAA;AAAkB;AAChB,gBAAMK,OAAO,GAAGL,oBAAoB,CAApBA,OAAAA,CAAAA,aAAAA,CAAhB,kBAAA;;AACA,gBAAA,OAAA,EAAa;AACXA,cAAAA,oBAAoB,CAApBA,OAAAA,CAAAA,QAAAA,GAAwC,CAAxCA,CAAAA;AACA,kBAAMM,kBAAkB,GAAGN,oBAAoB,CAApBA,OAAAA,CAAAA,YAAAA,CAA3B,eAA2BA,CAA3B;;AACA,kBAAMI,YAA0B,GAAGC,OAAO,CAAPA,aAAAA,CAAAA,uBAAAA,MAAAA,CAAAA,kBAAAA,EAAnC,KAAmCA,CAAAA,CAAnC;;AACAD,cAAAA,YAAU,CAAVA,QAAAA,GAAAA,CAAAA;;AACAA,cAAAA,YAAU,CAAVA,KAAAA;;AACAJ,cAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,YAAAA;AACD;;AACD;AACD;;AACD,aAAA,SAAA;AAAgB;AACd,gBAAMO,WAAW,GAAGP,oBAAoB,CAApBA,OAAAA,CAAAA,aAAAA,CAApB,sBAAA;;AACA,gBAAA,WAAA,EAAiB;AACfA,cAAAA,oBAAoB,CAApBA,OAAAA,CAAAA,QAAAA,GAAwC,CAAxCA,CAAAA;;AACA,kBAAMM,mBAAkB,GAAGN,oBAAoB,CAApBA,OAAAA,CAAAA,YAAAA,CAA3B,eAA2BA,CAA3B;;AACA,kBAAMI,YAA0B,GAAGG,WAAW,CAAXA,aAAAA,CAAAA,uBAAAA,MAAAA,CAAAA,mBAAAA,EAAnC,KAAmCA,CAAAA,CAAnC;;AAGAH,cAAAA,YAAU,CAAVA,QAAAA,GAAAA,CAAAA;;AACAA,cAAAA,YAAU,CAAVA,KAAAA;;AACAJ,cAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,YAAAA;AACD;;AACD;AACD;AA9CH;AAgDD;AAnDmC,GAAA,EAqDtC,CArDF,oBAqDE,CArDsC,CAAxC;AAwDA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAEZ,UAAU,CADvB,OACaA,EADb;AAEE,IAAA,GAAG,EAFL,SAAA;AAGE,IAAA,QAAQ,EAHV,QAAA;AAIE,IAAA,KAAK,EAAE;AACL7V,MAAAA,MAAM,EAAA,GAAA,MAAA,CAAA,eAAA,EADD,IACC,CADD;AAELJ,MAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,iBAAA,EAAA,IAAA;AAFA;AAJT,GAAA,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,QAAQ,EADV,CAAA;AAEE,IAAA,OAAO,EAFT,YAAA;AAGE,IAAA,SAAS,EAHX,oBAAA;AAIE,IAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAA,GAAA,MAAA,CAAKuV,cAAc,CAAnB,SAAA,EADD,IACC,CADD;AAEL3V,MAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,iBAAA,EAFA,IAEA,CAFA;AAGLD,MAAAA,QAAQ,EAAE;AAHL;AAJT,GAAA,EAUG,cAAc,CAAd,YAAA,CAAA,GAAA,CAAgC,UAAA,UAAA,EAAgB;AAC/C,QAAM6H,GAAG,GAAGgC,IAAI,CAACyN,UAAU,CAA3B,KAAgB,CAAhB;;AACA,QAAI,CAAJ,GAAA,EAAU;AACR,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,GAAG,EAAA,aAAA,MAAA,CAAeA,UAAU,CAD9B,KACK,CADL;AAEE,QAAA,SAAS,EAAE3R,OAAO,CAFpB,EAAA;AAGE,QAAA,KAAK,EAAE;AACLtF,UAAAA,MAAM,EAAA,GAAA,MAAA,CAAKiX,UAAU,CAAf,IAAA,EADD,IACC,CADD;AAEL9V,UAAAA,SAAS,EAAA,cAAA,MAAA,CAAgB8V,UAAU,CAA1B,KAAA,EAAA,KAAA;AAFJ;AAHT,OAAA,CADF;AAUD;;AACDzG,IAAAA,UAAU,CAAVA,GAAU,CAAVA;AACA,QAAM0G,QAAQ,GAAG1P,GAAG,CAApB,WAAiBA,EAAjB;AAEA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAEE,MAAA,KAAK,EAAE;AACLxH,QAAAA,MAAM,EAAA,GAAA,MAAA,CAAKiX,UAAU,CAAf,IAAA,EADD,IACC,CADD;AAEL9V,QAAAA,SAAS,EAAA,cAAA,MAAA,CAAgB8V,UAAU,CAA1B,KAAA,EAAA,KAAA;AAFJ;AAFT,KAAA,CAAA,EAOG,GAAG,CAAH,KAAA,CAAA,GAAA,CAAc,UAAA,IAAA,EAAU;AAAA,UAAA,aAAA;;AACvB,UAAME,SAAS,GAAG7P,IAAI,CAAtB,YAAkBA,EAAlB;;AACA,UAAA,CAAA,aAAA,GAAIE,GAAG,CAAP,QAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAIA,aAAAA,CAAJ,QAAA,EAA4B;AAC1B,eAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAP,SAAO,CAAP;AACD;;AAED,UAAA,eAAA;;AACA,UACEF,IAAI,CAAJA,MAAAA,CAAAA,EAAAA,IAAAA,qCAAAA,IACAA,IAAI,CAAJA,MAAAA,CAAAA,EAAAA,KAFF,qCAAA,EAGE;AACA8P,QAAAA,eAAe,GAAfA,MAAAA;AAJF,OAAA,MAKO,IAAA,WAAA,EAAiB;AACtBA,QAAAA,eAAe,GAAfA,YAAAA;AADK,OAAA,MAEA,IAAI9P,IAAI,CAAR,SAAA,EAAoB;AACzB8P,QAAAA,eAAe,GAAfA,SAAAA;AADK,OAAA,MAEA,IAAI9P,IAAI,CAAR,YAAA,EAAuB;AAC5B8P,QAAAA,eAAe,GAAfA,YAAAA;AADK,OAAA,MAEA,IAAI9P,IAAI,CAAR,aAAA,EAAwB;AAC7B8P,QAAAA,eAAe,GAAfA,eAAAA;AADK,OAAA,MAEA;AACLA,QAAAA,eAAe,GAAfA,MAAAA;AArBqB,OAAA,CAAA;;;AAyBvB,aAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,SAAA,EAAqB9P,IAAI,CAAJA,MAAAA,CAA5B,eAA4BA,CAArB,CAAP;AAjCN,KAQK,CAPH,CADF;AArCR,GAoBO,CAVH,CATF,CADF;AA/IK,CAAA;;AC0FP,IAAMpC,WAAS,GAAGC,qBAAqB,CAAA,MAAA,EAAS;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAT,CAAvC;AAEA;;;;;;;;;;IASMiS,eAA+B,GAAGxU,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAiD;AAAA,MAAA,iBAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,YAAA;;AAAA,MAEhGiF,OAFgG,GAsC9F7E,KAtC8F,CAAA,OAAA;AAAA,MAGhGwC,SAHgG,GAsC9FxC,KAtC8F,CAAA,SAAA;AAAA,MAIhGyC,KAJgG,GAsC9FzC,KAtC8F,CAAA,KAAA;AAAA,MAKhGqU,OALgG,GAsC9FrU,KAtC8F,CAAA,OAAA;AAAA,MAMhGsU,KANgG,GAsC9FtU,KAtC8F,CAAA,KAAA;AAAA,MAOhGkJ,OAPgG,GAsC9FlJ,KAtC8F,CAAA,OAAA;AAAA,MAQhGwQ,OARgG,GAsC9FxQ,KAtC8F,CAAA,OAAA;AAAA,MAShGsM,aATgG,GAsC9FtM,KAtC8F,CAAA,aAAA;AAAA,MAUhG4M,iBAVgG,GAsC9F5M,KAtC8F,CAAA,iBAAA;AAAA,MAWhGqM,aAXgG,GAsC9FrM,KAtC8F,CAAA,aAAA;AAAA,MAYhGF,MAZgG,GAsC9FE,KAtC8F,CAAA,MAAA;AAAA,MAahGuU,iBAbgG,GAsC9FvU,KAtC8F,CAAA,iBAAA;AAAA,MAchGwU,UAdgG,GAsC9FxU,KAtC8F,CAAA,UAAA;AAAA,MAehGyU,oBAfgG,GAsC9FzU,KAtC8F,CAAA,oBAAA;AAAA,MAgBhG0U,UAhBgG,GAsC9F1U,KAtC8F,CAAA,UAAA;AAAA,MAiBhG2U,OAjBgG,GAsC9F3U,KAtC8F,CAAA,OAAA;AAAA,MAkBhGwG,SAlBgG,GAsC9FxG,KAtC8F,CAAA,SAAA;AAAA,MAmBhGyQ,cAnBgG,GAsC9FzQ,KAtC8F,CAAA,cAAA;AAAA,MAoBhG4U,gBApBgG,GAsC9F5U,KAtC8F,CAAA,gBAAA;AAAA,MAqBhG+P,iBArBgG,GAsC9F/P,KAtC8F,CAAA,iBAAA;AAAA,MAsBhG+G,UAtBgG,GAsC9F/G,KAtC8F,CAAA,UAAA;AAAA,MAuBhG6U,eAvBgG,GAsC9F7U,KAtC8F,CAAA,eAAA;AAAA,MAwBhG4R,WAxBgG,GAsC9F5R,KAtC8F,CAAA,WAAA;AAAA,MAyBhGyR,OAzBgG,GAsC9FzR,KAtC8F,CAAA,OAAA;AAAA,MA0BhGgO,WA1BgG,GAsC9FhO,KAtC8F,CAAA,WAAA;AAAA,MA2BhG5B,iBA3BgG,GAsC9F4B,KAtC8F,CAAA,iBAAA;AAAA,MA4BhG6R,aA5BgG,GAsC9F7R,KAtC8F,CAAA,aAAA;AAAA,MA6BhGiJ,cA7BgG,GAsC9FjJ,KAtC8F,CAAA,cAAA;AAAA,MA8BhGwL,gBA9BgG,GAsC9FxL,KAtC8F,CAAA,gBAAA;AAAA,MAAA,qBAAA,GAsC9FA,KAtC8F,CAAA,cAAA;AAAA,MA+BhGyL,cA/BgG,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,QAAA,GAAA,qBAAA;AAAA,MAgChGqJ,SAhCgG,GAsC9F9U,KAtC8F,CAAA,SAAA;AAAA,MAiChG+U,QAjCgG,GAsC9F/U,KAtC8F,CAAA,QAAA;AAAA,MAkChGgV,UAlCgG,GAsC9FhV,KAtC8F,CAAA,UAAA;AAAA,MAmChG+R,cAnCgG,GAsC9F/R,KAtC8F,CAAA,cAAA;AAAA,MAAA,qBAAA,GAsC9FA,KAtC8F,CAAA,uBAAA;AAAA,MAoChGgS,uBApCgG,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,qBAAA;AAAA,MAqChGC,UArCgG,GAsC9FjS,KAtC8F,CAAA,UAAA;AAwClG,MAAMqC,OAAO,GAAGJ,WAAhB,EAAA;;AAxCkG,MAAA,qBAAA,GA0CrDqN,qBAAqB,CA1CgC,GA0ChC,CA1CgC;AAAA,MAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,MA0C3FC,kBA1C2F,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,MA0CvEE,cA1CuE,GAAA,sBAAA,CAAA,CAAA,CAAA;;AA2ClG,MAAMxC,QAAmC,GAAGlJ,MAA5C,EAAA;AACA,MAAMkR,SAAS,GAAGC,yBAAyB,CAAA,KAAA,EAAA,iBAAA,EAA3C,WAA2C,CAA3C;AAEA,MAAMC,UAAU,GAAG3U,WAAW,CAAC,UAAA,GAAA,EAAA;AAAA,WAAS+D,GAAG,CAAHA,UAAG,CAAHA,IAAT,EAAA;AAAD,GAAA,EAAiC,CAA/D,UAA+D,CAAjC,CAA9B;AAEA,MAAM6Q,IAAI,GAAG7R,OAAO,CAAC,YAAM;AACzB,QAAIkO,OAAO,GAAGzR,KAAK,CAALA,IAAAA,CAAd,MAAA,EAAiC;AAC/B,UAAMqV,WAAmB,GAAG5D,OAAO,GAAGzR,KAAK,CAALA,IAAAA,CAAtC,MAAA;AACA,UAAMsV,SAAS,GAAG,KAAK,CAAL,IAAA,CAAW;AAAE/B,QAAAA,MAAM,EAAE8B;AAAV,OAAX,EAAoC,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,eAAA,CAAA;AAApC,OAAA,EAAA,GAAA,CAAqD,YAAA;AAAA,eAAO;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SAAP;AAAvE,OAAkB,CAAlB;AAEA,aAAA,GAAA,MAAA,CAAA,kBAAA,CAAWvV,KAAK,CAAhB,IAAA,CAAA,EAAA,kBAAA,CAAA,SAAA,CAAA,CAAA;AACD;;AACD,WAAOA,KAAK,CAAZ,IAAA;AAPkB,GAAA,EAQjB,CAACA,KAAK,CAAN,IAAA,EARH,OAQG,CARiB,CAApB;;AAhDkG,MAAA,SAAA,GAqE9F,QAAQ,CAAR,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,aAAA,CAAA;AAEA6E,IAAAA,OAAO,EAFP,OAAA;AAGAuQ,IAAAA,IAAI,EAHJ,IAAA;AAIAO,IAAAA,aAAa,EAJb,aAAA;AAKA7E,IAAAA,SAAS,EALT,SAAA;AAMAqE,IAAAA,UAAU,EANV,UAAA;AAOA9E,IAAAA,YAAY,EAPZ,YAAA;AAQA1E,IAAAA,cAAc,EAAE,CARhB,UAAA;AASAC,IAAAA,aAAa,EAAE,CATf,QAAA;AAUAC,IAAAA,cAAc,EAAE,CAVhB,SAAA;AAWAhD,IAAAA,4BAA4B,EAAE;AAC5BoE,MAAAA,QAAQ,EADoB,QAAA;AAE5BX,MAAAA,aAAa,EAFe,aAAA;AAG5BM,MAAAA,iBAAiB,EAHW,iBAAA;AAI5BvK,MAAAA,OAAO,EAJqB,OAAA;AAK5BgK,MAAAA,aAAa,EALe,aAAA;AAM5B0D,MAAAA,iBAAiB,EANW,iBAAA;AAO5B/B,MAAAA,WAAW,EAPiB,WAAA;AAQ5B5P,MAAAA,iBAAiB,EARW,iBAAA;AAS5B6K,MAAAA,cAAc,EATc,cAAA;AAU5BC,MAAAA,OAAO,EAVqB,OAAA;AAW5BsC,MAAAA,gBAAgB,EAXY,gBAAA;AAY5BC,MAAAA,cAAc,EAAdA;AAZ4B;AAX9B,GAAA,EAAA,iBAAA,CAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,gBAAA,EAAA,qBAAA,EAAA,0BAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,MAAA,CAAA,kBAAA,CArE8F,UAqE9F,CAAA,CAAA,CArE8F;AAAA,MA2DhGiD,aA3DgG,GAAA,SAAA,CAAA,aAAA;AAAA,MA4DhG8G,YA5DgG,GAAA,SAAA,CAAA,YAAA;AAAA,MA6DhGjP,IA7DgG,GAAA,SAAA,CAAA,IAAA;AAAA,MA8DhGgH,UA9DgG,GAAA,SAAA,CAAA,UAAA;AAAA,MA+DzFkI,UA/DyF,GAAA,SAAA,CAAA,KAAA;AAAA,MAgEvFC,oBAhEuF,GAAA,SAAA,CAAA,OAAA;AAAA,MAiEhGzN,cAjEgG,GAAA,SAAA,CAAA,cAAA;AAAA,MAkEhG6F,QAlEgG,GAAA,SAAA,CAAA,QAAA;AAAA,MAmEhGgE,iBAnEgG,GAAA,SAAA,CAAA,iBAAA;AAAA,MAoEhGpF,gBApEgG,GAAA,SAAA,CAAA,gBAAA,CAAA,CAAA;;;AAgHlGgD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkG,eAAe,GAAGrP,IAAI,CAAJA,MAAAA,GAAAA,WAAAA,GAA4BkC,IAAI,CAAJA,GAAAA,CAASlC,IAAI,CAAbkC,MAAAA,EAA5BlC,OAA4BkC,CAA5BlC,GAAxB,WAAA;AACAuH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAN,yBAAA;AAAmCG,MAAAA,OAAO,EAAE;AAAEsC,QAAAA,YAAY,EAAEpK,IAAI,CAAJA,MAAAA,GAAcqP;AAA9B;AAA5C,KAAD,CAAR9H;AAFO,GAAA,EAGN,CAACvH,IAAI,CAAL,MAAA,EAAA,OAAA,EAHHmJ,WAGG,CAHM,CAATA;AAKA,MAAMmG,sBAAsB,GAAGrV,WAAW,CAAC,YAAM;AAC/C,QAAIyM,QAAQ,CAAZ,OAAA,EAAsB;AACpBa,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAN,cAAA;AAAwBG,QAAAA,OAAO,EAAE;AAAEqC,UAAAA,gBAAgB,EAAEzD,QAAQ,CAARA,OAAAA,CAAiB6I;AAArC;AAAjC,OAAD,CAARhI;AACD;AAHuC,GAAA,EAA1C,EAA0C,CAA1C;AAMA4B,EAAAA,SAAS,CAAC,YAAM;AACd;AACA,QAAMqG,kBAAkB,GAAG,IAAA,cAAA,CAAmBC,QAAQ,CAAA,sBAAA,EAAtD,GAAsD,CAA3B,CAA3B;AACAD,IAAAA,kBAAkB,CAAlBA,OAAAA,CAA2B9I,QAAQ,CAAnC8I,OAAAA;AACA,WAAO,YAAM;AACXA,MAAAA,kBAAkB,CAAlBA,UAAAA;AADF,KAAA;AAJO,GAAA,EAON,CAPHrG,sBAOG,CAPM,CAATA;AASAA,EAAAA,SAAS,CAAC,YAAM;AACdmG,IAAAA,sBAAsB;AADf,GAAA,EAEN,CAFHnG,sBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAM;AACd5B,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAN,cAAA;AAAwBG,MAAAA,OAAO,EAAEmC;AAAjC,KAAD,CAAR1C;AADO,GAAA,EAEN,CAAA,OAAA,EAFH4B,QAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAM;AACd5B,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAN,mBAAA;AAA6BC,MAAAA,WAAW,EAAEsC;AAA1C,KAAD,CAAR3C;AADO,GAAA,EAEN,CAAA,cAAA,EAFH4B,QAEG,CAFM,CAATA;AAIA,MAAMuG,aAAa,GAAG9I,QAAQ,CAC5BC,gBAAgB,CAAA,CAAA,iBAAA,GAACH,QAAQ,CAAT,OAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAqBiJ,QAAQ,CAA7C9I,IAAgB,CAAhBA,CAAAA,gBAAAA,CAAAA,kCAAAA,KADF,IAA8B,CAA9B;AAIA,MAAMsE,iBAAiB,GAAGlL,SAAH,KAAA,IAAGA,IAAAA,SAAH,KAAA,KAAA,CAAGA,GAAH,SAAGA,GAA1B,aAAA;AAEA,MAAMmL,eAAe,GAAGpO,OAAO,CAAC,YAAM;AACpC,QAAM4S,MAAM,GAAG5P,IAAI,CAAJA,MAAAA,GAAAA,WAAAA,GAA4BkC,IAAI,CAAJA,GAAAA,CAASlC,IAAI,CAAbkC,MAAAA,EAA5BlC,OAA4BkC,CAA5BlC,GAAf,WAAA;AACA,WAAOmL,iBAAiB,GAAxB,MAAA;AAF6B,GAAA,EAG5B,CAAA,iBAAA,EAAoBnL,IAAI,CAAxB,MAAA,EAAA,WAAA,EAHH,OAGG,CAH4B,CAA/B;AAKA,MAAM6P,YAAY,GAAG7S,OAAO,CAAC,YAAM;AACjC,WAAO;AACLxG,MAAAA,MAAM,EAAA,GAAA,MAAA,CAAA,eAAA,EADD,IACC,CADD;AAELJ,MAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,iBAAA,EAAA,IAAA;AAFA,KAAP;AAD0B,GAAA,EAKzB,CAAA,eAAA,EALH,iBAKG,CALyB,CAA5B;AAOA,MAAM0Z,gBAAgB,GAAG7V,WAAW,CAClC,UAAA,CAAA,EAAO;AAAA,QAAA,SAAA,GACyBE,CAAC,CAD1B,MAAA;AAAA,QACGb,MADH,GAAA,SAAA,CAAA,MAAA;AAAA,QACWiB,SADX,GAAA,SAAA,CAAA,SAAA;AAEL,QAAIwV,cAAc,GAAlB,EAAA;;AACA,QAAA,SAAA,EAAe;AACbA,MAAAA,cAAc,GAAA,GAAA,MAAA,CAAA,kBAAA,CAAOb,UAAU,CAAjB,OAAA,CAAA,EAAA,CAA2B5V,MAAM,CAA/CyW,EAAc,CAAA,CAAdA;AADF,KAAA,MAEO;AACLA,MAAAA,cAAc,GAAG,UAAU,CAAV,OAAA,CAAA,MAAA,CAA0B,UAAA,KAAA,EAAA;AAAA,eAAWC,KAAK,KAAK1W,MAAM,CAA3B,EAAA;AAA3CyW,OAAiB,CAAjBA;AACD;;AACDxI,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAN,cAAA;AAAwBG,MAAAA,OAAO,EAAEiI;AAAjC,KAAD,CAARxI;AACA6G,IAAAA,OAAO,CACLhU,sBAAsB,CAAA,CAAA,EAAI;AACxBd,MAAAA,MAAM,EADkB,MAAA;AAExByW,MAAAA,cAAc,EAAdA;AAFwB,KAAJ,CADjB,CAAP3B;AAVgC,GAAA,EAiBlC,CAACc,UAAU,CAAX,OAAA,EAAA,OAAA,EAjBF,QAiBE,CAjBkC,CAApC;;AAlKkG,MAAA,eAAA,GAsLExO,cAAc,CAAA,KAAA,EAAA,cAAA,EAGhHwO,UAAU,CAHsG,WAAA,EAIhHA,UAAU,CAJsG,cAAA,EAtLhB,oBAsLgB,CAtLhB;AAAA,MAAA,gBAAA,GAAA,cAAA,CAAA,eAAA,EAAA,CAAA,CAAA;AAAA,MAsL3FzS,QAtL2F,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAsLjFwE,eAtLiF,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAsLhEH,eAtLgE,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAsL/CE,cAtL+C,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAsL/BE,YAtL+B,GAAA,gBAAA,CAAA,CAAA,CAAA;AAAA,MAsLjBU,eAtLiB,GAAA,gBAAA,CAAA,CAAA,CAAA;;AA8LlG,MAAMqO,gBAAgB,GAAGC,uBAAuB,CAAA,KAAA,EAAQ,CAAA,QAAA,EAAA,SAAA,EAAA,eAAA,EAAA,mBAAA,EAAA,oBAAA,EAAxD,YAAwD,CAAR,CAAhD;AASA,MAAMC,WAAW,GAAGnT,OAAO,CAAC,YAAM;AAChC,QAAMoT,WAAW,GAAG;AAClB/Z,MAAAA,QAAQ,EADU,MAAA;AAElBE,MAAAA,SAAS,EAAE;AAFO,KAApB;;AAIA,QAAI,CAAC,CAAL,SAAA,EAAiB;AACf6Z,MAAAA,WAAW,CAAXA,kCAAW,CAAXA,GAAAA,GAAAA,MAAAA,CAAAA,SAAAA,EAAAA,IAAAA,CAAAA;AACD;;AAED,QAAIlB,UAAU,CAAVA,gBAAAA,GAAJ,CAAA,EAAqC;AACnC,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,WAAA,CAAA,EAAA,KAAA,CAAA;AAID;;AACD,WAAA,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,WAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AAGEmB,MAAAA,UAAU,EAAE;AAHd,KAAA,CAAA;AAfyB,GAAA,EAoBxB,CAACnB,UAAU,CAAX,gBAAA,EAAA,KAAA,EApBH,SAoBG,CApBwB,CAA3B;AAsBA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,IAAA,SAAS,EAAd,SAAA;AAA2B,IAAA,KAAK,EAAhC,WAAA;AAA+C,IAAA,KAAK,EAApD,OAAA;AAA+D,IAAA,GAAG,EAAElG;AAApE,GAAA,EAAA,gBAAA,CAAA,EACG+E,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EADZ,KACY,CADZ,EAEGW,SAAS,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAFhB,SAEgB,CAFhB,EAAA,aAGE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EACMvG,aADN,EAAA,EAAA;AAEE,IAAA,IAAI,EAFN,MAAA;AAGE,qBAAenI,IAAI,CAHrB,MAAA;AAIE,qBAAemP,oBAAoB,CAJrC,MAAA;AAKE,qBALF,WAAA;AAME,IAAA,GAAG,EAAEzI;AANP,GAAA,CAAA,EAQG,YAAY,CAAZ,GAAA,CAAiB,UAAA,WAAA,EAAiB;AACjC,QAAI4J,WAAW,GAAf,EAAA;;AACA,QAAIC,WAAW,CAAf,mBAAA,EAAqC;AACnCD,MAAAA,WAAW,GAAGC,WAAW,CAAzBD,mBAAcC,EAAdD;AACD;;AACD;AAAA;AACE;AACA,MAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,WAAA,EAAA;AAAyB,QAAA,IAAI,EAAC;AAA9B,OAAA,CAAA,EACG,WAAW,CAAX,OAAA,CAAA,GAAA,CAAwB,UAAA,MAAA,EAAA;AAAA;AAAA;AACvB;AACA,UAAA,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA,EAAA,EACMhX,MAAM,CADZ,cACMA,EADN,EAAA;AAEE,YAAA,MAAM,EAFR,MAAA;AAGE,YAAA,SAAS,EAHX,gBAAA;AAIE,YAAA,WAAW,EAJb,eAAA;AAKE,YAAA,UAAU,EALZ,cAAA;AAME,YAAA,MAAM,EANR,YAAA;AAOE,YAAA,WAAW,EAPb,eAAA;AAQE,YAAA,SAAS,EARX,eAAA;AASE,YAAA,QAAQ,EAAEA,MAAM,CAANA,EAAAA,KATZ,QAAA;AAUE,YAAA,WAAW,EAAE,CAAA,WAAA,IAAgBA,MAAM,CAAC8F;AAVtC,WAAA,CAAA,EAYG9F,MAAM,CAANA,MAAAA,CAZH,QAYGA,CAZH;AAFuB;AAD3B,OACG,CADH;AAFF;AAbJ,GAQG,CARH,EAoCGqJ,OAAO,IAAPA,oBAAAA,IAAmC,CAAA,CAAA,WAAA,GAAA,KAAK,CAAL,IAAA,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAA,MAAA,IAAnCA,CAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,IAAA,KAAK,EAAE;AAAEvM,MAAAA,KAAK,EAAA,GAAA,MAAA,CAAA,iBAAA,EAAA,IAAA;AAAP;AAAzB,GAAA,CArCJ,EAuCGuM,OAAO,IAAI,CAAA,CAAA,YAAA,GAAA,KAAK,CAAL,IAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,MAAA,MAAXA,CAAAA,IAAAA,aACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AACE,IAAA,OAAO,EAAE,oBAAoB,CAApB,MAAA,CACP,UAAA,GAAA,EAAA;AAAA,UAAA,cAAA;;AAAA,aAAS,CAAA,CAAA,cAAA,GAAClE,GAAG,CAAJ,SAAA,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,cAAA,GAAA,IAAA,KAA2B,CAACyQ,UAAU,CAAVA,aAAAA,CAAAA,QAAAA,CAAkCzQ,GAAG,CAA1E,QAAqCyQ,CAArC;AAFJ,KACW,CADX;AAIE,IAAA,IAAI,EAAEzV,KAAK,CAJb,OAAA;AAKE,IAAA,KAAK,EALP,YAAA;AAME,IAAA,SAAS,EANX,iBAAA;AAOE,IAAA,UAAU,EAAE8R;AAPd,GAAA,CAxCJ,EAkDG,CAAA,OAAA,IAAY,CAAA,CAAA,YAAA,GAAA,KAAK,CAAL,IAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,MAAA,MAAZ,CAAA,IAAA,aACC,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAiB,IAAA,UAAU,EAA3B,UAAA;AAAyC,IAAA,SAAS,EAAEzP,OAAO,CAA3D,eAAA;AAA6E,IAAA,KAAK,EAAE+T;AAApF,GAAA,CAnDJ,EAqDG,CAAA,CAAA,YAAA,GAAA,KAAK,CAAL,IAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,YAAA,CAAA,MAAA,IAAA,CAAA,IAAA,aACC,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AACE,IAAA,OAAO,EADT,OAAA;AAEE,IAAA,UAAU,EAFZ,UAAA;AAGE,IAAA,IAAI,EAHN,IAAA;AAIE,IAAA,OAAO,EAJT,OAAA;AAKE,IAAA,aAAa,EALf,aAAA;AAME,IAAA,cAAc,EANhB,cAAA;AAOE,IAAA,WAAW,EAPb,WAAA;AAQE,IAAA,iBAAiB,EARnB,iBAAA;AASE,IAAA,eAAe,EATjB,eAAA;AAUE,IAAA,WAAW,EAVb,WAAA;AAWE,IAAA,iBAAiB,EAXnB,iBAAA;AAYE,IAAA,aAAa,EAZf,aAAA;AAaE,IAAA,iBAAiB,EAbnB,iBAAA;AAcE,IAAA,cAAc,EAdhB,cAAA;AAeE,IAAA,uBAAuB,EAfzB,uBAAA;AAgBE,IAAA,UAAU,EAAEnE;AAhBd,GAAA,CAtDJ,CAHF,CADF;AA7NgD,CAAA,C;AA+SlDmC,eAAe,CAAfA,WAAAA,GAAAA,iBAAAA;AACAA,eAAe,CAAfA,YAAAA,GAA+B;AAC7BlL,EAAAA,OAAO,EADsB,KAAA;AAE7BuL,EAAAA,oBAAoB,EAFS,IAAA;AAG7BM,EAAAA,QAAQ,EAHqB,IAAA;AAI7BC,EAAAA,UAAU,EAJmB,KAAA;AAK7BF,EAAAA,SAAS,EALoB,KAAA;AAM7BxI,EAAAA,aAAa,EAAEK,kBAAkB,CANJ,IAAA;AAO7BC,EAAAA,iBAAiB,EAAEE,sBAAsB,CAPZ,GAAA;AAQ7B7D,EAAAA,cAAc,EAAEU,mBAAmB,CARN,OAAA;AAS7ByL,EAAAA,IAAI,EATyB,EAAA;AAU7BvQ,EAAAA,OAAO,EAVsB,EAAA;AAW7ByP,EAAAA,KAAK,EAXwB,IAAA;AAY7B7C,EAAAA,OAAO,EAZsB,CAAA;AAa7BjB,EAAAA,OAAO,EAbsB,EAAA;AAc7BqE,EAAAA,eAAe,EAdc,sBAAA;AAe7BD,EAAAA,gBAAgB,EAfa,uBAAA;AAgB7B7N,EAAAA,UAAU,EAhBmB,SAAA;AAiB7BwN,EAAAA,iBAAiB,EAjBY,EAAA;AAkB7BC,EAAAA,UAAU,EAlBmB,EAAA;AAmB7B5C,EAAAA,WAAW,EAnBkB,EAAA;AAoB7B8C,EAAAA,UAAU,EApBmB,SAAA;AAqB7BjE,EAAAA,cAAc,EArBe,EAAA;AAsB7BkE,EAAAA,OAAO,EAAE,SAAA,OAAA,GAAM,CAtBc,CAAA;AAuB7B5E,EAAAA,iBAAiB,EAAE,SAAA,iBAAA,GAAM,CAvBI,CAAA;AAwB7B7I,EAAAA,kBAAkB,EAAE,SAAA,kBAAA,GAAM,CAxBG,CAAA;AAyB7B8G,EAAAA,WAAW,EAzBkB,KAAA;AA0B7B5P,EAAAA,iBAAiB,EAAE;AA1BU,CAA/BgW","sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst styles = {\n  table: {\n    position: 'relative',\n    width: '100%',\n    maxWidth: '100%',\n    overflowY: 'hidden',\n    overflowX: 'auto',\n    height: '100%',\n    minHeight: '3rem',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal'\n  },\n  tableHeaderRow: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    position: 'relative',\n    display: 'inline-flex'\n  },\n  th: {\n    backgroundColor: ThemingParameters.sapList_HeaderBackground,\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    color: ThemingParameters.sapList_HeaderTextColor,\n    borderTop: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    padding: `0 0.5rem`,\n    textAlign: 'start',\n    boxSizing: 'border-box',\n    '&:first-child': {\n      borderLeft: `1px solid ${ThemingParameters.sapList_BorderColor}`\n    },\n    '&:last-child': {\n      '& [data-resizer]': {\n        transform: 'translateX(0px)'\n      }\n    }\n  },\n  tbody: {\n    position: 'relative',\n    backgroundColor: ThemingParameters.sapList_Background,\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  },\n  alternateRowColor: {\n    backgroundColor: ThemingParameters.sapList_AlternatingBackground\n  },\n  tr: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    color: ThemingParameters.sapList_TextColor,\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    boxSizing: 'border-box',\n    display: 'flex',\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    '&:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_Background\n    },\n    '&[data-is-selected]': {\n      borderBottom: `1px solid ${ThemingParameters.sapList_SelectionBorderColor}`,\n      backgroundColor: ThemingParameters.sapList_SelectionBackgroundColor\n    },\n    '&[data-is-selected]:hover': {\n      backgroundColor: ThemingParameters.sapList_Hover_SelectionBackground\n    }\n  },\n  trActive: {\n    '&:hover': {\n      cursor: 'pointer'\n    },\n    '&:active': {\n      backgroundColor: ThemingParameters.sapList_Active_Background,\n      '& $tableCell': {\n        borderRight: `1px solid ${ThemingParameters.sapList_Active_Background}`,\n        color: `${ThemingParameters.sapList_Active_TextColor}`,\n        '--sapTextColor': ThemingParameters.sapList_Active_TextColor\n      }\n    }\n  },\n  tableGroupHeader: {\n    '&$tr': {\n      backgroundColor: `${ThemingParameters.sapList_TableGroupHeaderBackground}`,\n      border: `1px solid ${ThemingParameters.sapList_TableGroupHeaderBorderColor}`,\n      color: ThemingParameters.sapList_TextColor,\n      '& $tableCell': {\n        borderRight: 'none'\n      }\n    }\n  },\n  tableCell: {\n    height: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n    boxSizing: 'border-box',\n    borderRight: `1px solid ${ThemingParameters.sapList_BorderColor}`,\n    display: 'inline-flex',\n    padding: '0 0.5rem',\n    '&:first-child': {\n      borderLeft: `1px solid ${ThemingParameters.sapList_BorderColor}`\n    },\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    alignItems: 'center',\n    position: 'relative',\n    '&:focus': {\n      outlineOffset: '-2px',\n      outline: `1px dotted ${ThemingParameters.sapContent_FocusColor}`\n    }\n  },\n  noDataContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100%',\n    backgroundColor: ThemingParameters.sapList_Background,\n    width: '100%',\n    boxSizing: 'border-box',\n    color: ThemingParameters.sapList_TextColor,\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n  }\n};\n\nexport default styles;\n","import '@ui5/webcomponents-icons/dist/icons/decline';\nimport { useI18nBundle } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport {\n  CLEAR_SORTING,\n  GROUP,\n  SORT_ASCENDING,\n  SORT_DESCENDING,\n  UNGROUP\n} from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { FlexBox } from '@ui5/webcomponents-react/lib/FlexBox';\nimport { FlexBoxAlignItems } from '@ui5/webcomponents-react/lib/FlexBoxAlignItems';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { List } from '@ui5/webcomponents-react/lib/List';\nimport { ListItemTypes } from '@ui5/webcomponents-react/lib/ListItemTypes';\nimport { PlacementType } from '@ui5/webcomponents-react/lib/PlacementType';\nimport { Popover } from '@ui5/webcomponents-react/lib/Popover';\nimport { PopoverHorizontalAlign } from '@ui5/webcomponents-react/lib/PopoverHorizontalAlign';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport React, { CSSProperties, forwardRef, RefObject, useCallback } from 'react';\nimport { Ui5PopoverDomRef } from '../../../interfaces/Ui5PopoverDomRef';\nimport { ColumnType } from '../types/ColumnType';\n\nexport interface ColumnHeaderModalProperties {\n  column: ColumnType;\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroupBy?: (e: CustomEvent<{ column: unknown; isGrouped: boolean }>) => void;\n}\n\nconst staticStyle = { fontWeight: 'normal' };\n\nexport const ColumnHeaderModal = forwardRef((props: ColumnHeaderModalProperties, ref: RefObject<Ui5PopoverDomRef>) => {\n  const { column, onSort, onGroupBy } = props;\n  const showFilter = column.canFilter;\n  const showGroup = column.canGroupBy;\n  const showSort = column.canSort;\n\n  const { Filter } = column;\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const handleSort = useCallback(\n    (e) => {\n      const sortType = e.detail.item.getAttribute('data-sort');\n\n      switch (sortType) {\n        case 'asc':\n          column.toggleSortBy(false);\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'desc':\n          column.toggleSortBy(true);\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'clear':\n          column.clearSortBy();\n          if (typeof onSort === 'function') {\n            onSort(\n              enrichEventWithDetails(e, {\n                column,\n                sortDirection: sortType\n              })\n            );\n          }\n          break;\n        case 'group':\n          const willGroup = !column.isGrouped;\n          column.toggleGroupBy(willGroup);\n          if (typeof onGroupBy === 'function') {\n            onGroupBy(\n              enrichEventWithDetails(e, {\n                column,\n                isGrouped: willGroup\n              })\n            );\n          }\n          break;\n      }\n      if (ref.current) {\n        ref.current.close();\n      }\n    },\n    [column, ref, onGroupBy, onSort]\n  );\n\n  const isSortedAscending = column.isSorted && column.isSortedDesc === false;\n  const isSortedDescending = column.isSorted && column.isSortedDesc === true;\n\n  return (\n    <Popover\n      noArrow\n      horizontalAlign={PopoverHorizontalAlign.Left}\n      placementType={PlacementType.Bottom}\n      ref={ref}\n      style={staticStyle as CSSProperties}\n    >\n      <List onItemClick={handleSort}>\n        {isSortedAscending && (\n          <StandardListItem type={ListItemTypes.Active} icon=\"decline\" data-sort=\"clear\">\n            {i18nBundle.getText(CLEAR_SORTING)}\n          </StandardListItem>\n        )}\n        {showSort && !isSortedAscending && (\n          <StandardListItem type={ListItemTypes.Active} icon=\"sort-ascending\" data-sort=\"asc\">\n            {i18nBundle.getText(SORT_ASCENDING)}\n          </StandardListItem>\n        )}\n        {showSort && !isSortedDescending && (\n          <StandardListItem type={ListItemTypes.Active} icon=\"sort-descending\" data-sort=\"desc\">\n            {i18nBundle.getText(SORT_DESCENDING)}\n          </StandardListItem>\n        )}\n        {isSortedDescending && (\n          <StandardListItem type={ListItemTypes.Active} icon=\"decline\" data-sort=\"clear\">\n            {i18nBundle.getText(CLEAR_SORTING)}\n          </StandardListItem>\n        )}\n        {showFilter && !column.isGrouped && (\n          <FlexBox\n            alignItems={FlexBoxAlignItems.Center}\n            style={{\n              padding: '0px 1rem',\n              height: 'var(--_ui5_custom_list_item_height)',\n              borderBottom: `1px solid ${ThemingParameters.sapList_BorderColor}`\n            }}\n          >\n            <Icon name=\"filter\" style={{ paddingRight: '0.5rem', minWidth: '1rem', minHeight: '1rem' }} />\n            <Filter column={column} popoverRef={ref} />\n          </FlexBox>\n        )}\n        {showGroup && (\n          <StandardListItem type={ListItemTypes.Active} icon=\"group-2\" data-sort={'group'}>\n            {i18nBundle.getText(column.isGrouped ? UNGROUP : GROUP)}\n          </StandardListItem>\n        )}\n      </List>\n    </Popover>\n  );\n});\nColumnHeaderModal.displayName = 'ColumnHeaderModal';\n","import { getRTL } from '@ui5/webcomponents-base/dist/config/RTL';\nimport '@ui5/webcomponents-icons/dist/icons/filter';\nimport '@ui5/webcomponents-icons/dist/icons/group-2';\nimport '@ui5/webcomponents-icons/dist/icons/sort-ascending';\nimport '@ui5/webcomponents-icons/dist/icons/sort-descending';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport React, {\n  CSSProperties,\n  DragEventHandler,\n  FC,\n  ReactNode,\n  ReactNodeArray,\n  useCallback,\n  useMemo,\n  useRef\n} from 'react';\nimport { Ui5PopoverDomRef } from '../../../interfaces/Ui5PopoverDomRef';\nimport { ColumnType } from '../types/ColumnType';\nimport { ColumnHeaderModal } from './ColumnHeaderModal';\n\nexport interface ColumnHeaderProps {\n  id: string;\n  defaultSortDesc: boolean;\n  children: ReactNode | ReactNodeArray;\n  grouping: string;\n  className: string;\n  column: ColumnType;\n  style: CSSProperties;\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroupBy?: (e: CustomEvent<{ column: unknown; isGrouped: boolean }>) => void;\n  onDragStart: DragEventHandler<HTMLDivElement>;\n  onDragOver: DragEventHandler<HTMLDivElement>;\n  onDrop: DragEventHandler<HTMLDivElement>;\n  onDragEnter: DragEventHandler<HTMLDivElement>;\n  onDragEnd: DragEventHandler<HTMLDivElement>;\n  dragOver: boolean;\n  isResizing: boolean;\n  isDraggable: boolean;\n  role: string;\n}\n\nconst styles = {\n  header: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'begin',\n    alignItems: 'center',\n    textAlign: 'left',\n    fontFamily: ThemingParameters.sapFontFamily,\n    fontSize: ThemingParameters.sapFontSize,\n    fontWeight: 'normal',\n    color: ThemingParameters.sapList_TextColor,\n    background: ThemingParameters.sapList_HeaderBackground,\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    maxWidth: '100%',\n    position: 'relative',\n    width: '100%',\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    boxSizing: 'border-box',\n    '&[data-h-align=\"End\"]': {\n      '& $text': {\n        textAlign: 'end'\n      }\n    }\n  },\n  text: {\n    width: '100%',\n    textAlign: 'start'\n  },\n  iconContainer: {\n    display: 'inline-block',\n    position: 'absolute',\n    color: ThemingParameters.sapContent_IconColor,\n    right: getRTL() === false ? '0.5rem' : undefined,\n    left: getRTL() === true ? '0.5rem' : undefined\n  },\n  resizer: {\n    display: 'inline-block',\n    width: '16px',\n    height: '100%',\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    transform: 'translateX(50%)',\n    zIndex: 1\n  }\n};\n\nconst useStyles = createComponentStyles(styles, { name: 'TableColumnHeader' });\n\n/**\n * <code>import { ColumnHeader } from '@ui5/webcomponents-react/lib/ColumnHeader';</code>\n */\nexport const ColumnHeader: FC<ColumnHeaderProps> = (props: ColumnHeaderProps) => {\n  const classes = useStyles(props);\n\n  const {\n    id,\n    children,\n    column,\n    className,\n    style,\n    onSort,\n    onGroupBy,\n    onDragEnter,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onDragEnd,\n    isDraggable,\n    dragOver,\n    role\n  } = props;\n\n  const isFiltered = column.filterValue && column.filterValue.length > 0;\n  const sortingIcon = column.isSorted ? (\n    <Icon name={column.isSortedDesc ? 'sort-descending' : 'sort-ascending'} />\n  ) : null;\n  const filterIcon = isFiltered ? <Icon name=\"filter\" /> : null;\n  const groupingIcon = column.isGrouped ? <Icon name=\"group-2\" /> : null;\n\n  const textStyle = useMemo(() => {\n    let margin = 0;\n\n    if (column.isSorted) margin++;\n    if (column.isGrouped) margin++;\n    if (isFiltered) margin++;\n\n    if (margin === 0) {\n      return {};\n    }\n\n    if (margin > 0) margin += 0.5;\n\n    if (getRTL()) {\n      return {\n        marginLeft: `${margin}rem`\n      };\n    }\n    return {\n      marginRight: `${margin}rem`\n    };\n  }, [column.isSorted, column.isGrouped, isFiltered]);\n\n  const hasPopover = column.canGroupBy || column.canSort || column.canFilter;\n  const innerStyle: CSSProperties = useMemo(() => {\n    const modifiedStyles: CSSProperties = {\n      cursor: hasPopover ? 'pointer' : 'auto'\n    };\n    if (dragOver) {\n      modifiedStyles.borderLeft = `3px solid ${ThemingParameters.sapSelectedColor}`;\n    }\n    return modifiedStyles;\n  }, [dragOver, hasPopover]);\n\n  const popoverRef = useRef<Ui5PopoverDomRef>(null);\n\n  const onOpenPopover = useCallback(\n    (e) => {\n      if (popoverRef.current && hasPopover) {\n        popoverRef.current.openBy(e.target);\n      }\n    },\n    [popoverRef, hasPopover]\n  );\n\n  if (!column) return null;\n\n  return (\n    <div\n      id={id}\n      className={className}\n      style={style}\n      role={role}\n      draggable={isDraggable}\n      onDragEnter={onDragEnter}\n      onDragOver={onDragOver}\n      onDragStart={onDragStart}\n      onDrop={onDrop}\n      onDragEnd={onDragEnd}\n      data-column-id={id}\n    >\n      <div style={innerStyle} onClick={onOpenPopover} className={classes.header} data-h-align={column.hAlign}>\n        <Text\n          tooltip={typeof children === 'string' ? children : null}\n          wrapping={false}\n          style={textStyle}\n          className={classes.text}\n        >\n          {children}\n        </Text>\n        <div className={classes.iconContainer}>\n          {filterIcon}\n          {sortingIcon}\n          {groupingIcon}\n        </div>\n      </div>\n      {hasPopover && <ColumnHeaderModal column={column} onSort={onSort} onGroupBy={onGroupBy} ref={popoverRef} />}\n      {column.canResize && column.getResizerProps && (\n        <div {...column.getResizerProps()} data-resizer className={`${classes.resizer}`} />\n      )}\n    </div>\n  );\n};\n","import { Input } from '@ui5/webcomponents-react/lib/Input';\nimport React, { FC, useCallback } from 'react';\n\nexport /**\n * <code>import { DefaultFilterComponent } from '@ui5/webcomponents-react/lib/DefaultFilterComponent';</code>\n */\nconst DefaultFilterComponent: FC<any> = ({ column }) => {\n  const handleChange = useCallback(\n    (e) => {\n      column.setFilter(e.target.value || undefined);\n    },\n    [column.setFilter]\n  );\n  return <Input onInput={handleChange}>{column.filterValue}</Input>;\n};\n","import { Text } from '@ui5/webcomponents-react/lib/Text';\nimport React from 'react';\n\nexport const Cell = ({ cell: { value = '', isGrouped }, row }) => {\n  let cellContent = `${value ?? ''}`;\n  if (isGrouped) {\n    cellContent += ` (${row.subRows.length})`;\n  }\n  return (\n    <Text wrapping={false} tooltip={cellContent}>\n      {cellContent}\n    </Text>\n  );\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport React, { CSSProperties } from 'react';\n\nconst tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nconst getPadding = (level) => {\n  switch (level) {\n    case 0:\n      return 0;\n    case 1:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel1;\n    case 2:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel2;\n    case 3:\n      return CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3;\n    default:\n      return `calc(${CssSizeVariables.sapWcrAnalyticalTableTreePaddingLevel3} + ${level - 3}rem * 0.5)`;\n  }\n};\n\nexport const Expandable = (props) => {\n  const { cell, row, column, columns } = props;\n\n  const tableColumns = columns.filter(\n    ({ id }) => id !== '__ui5wcr__internal_selection_column' && id !== '__ui5wcr__internal_highlight_column'\n  );\n\n  const columnIndex = tableColumns.findIndex((col) => col.id === column.id);\n\n  let paddingLeft;\n  if (row.canExpand) {\n    paddingLeft = columnIndex === 0 ? getPadding(row.depth) : 0;\n  } else {\n    paddingLeft = columnIndex === 0 ? `calc(${getPadding(row.depth)} + 2rem)` : 0;\n  }\n  const style: CSSProperties = {\n    paddingLeft\n  };\n\n  return (\n    <>\n      {columnIndex === 0 && row.canExpand ? (\n        <span {...row.getToggleRowExpandedProps({ style })}>\n          <Icon\n            name={`${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`}\n            style={tableGroupExpandCollapseIcon}\n          />\n        </span>\n      ) : (\n        <span style={style} />\n      )}\n      {cell.render('Cell')}\n    </>\n  );\n};\n","import { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { TextAlign } from '@ui5/webcomponents-react/lib/TextAlign';\nimport React, { CSSProperties } from 'react';\n\nconst tableGroupExpandCollapseIcon = {\n  color: 'var(--sapContent_IconColor)',\n  height: '0.75rem',\n  width: '0.75rem',\n  padding: '0.625rem',\n  display: 'block'\n};\n\nexport const Grouped = (props) => {\n  const { cell, row } = props;\n\n  const style: CSSProperties = {};\n  if (cell.column.hAlign && (cell.column.hAlign !== TextAlign.Left || cell.column.hAlign !== TextAlign.Begin)) {\n    style.marginRight = 'auto';\n  }\n  return (\n    <>\n      <span {...row.getToggleRowExpandedProps({ style })}>\n        <Icon\n          name={`${row.isExpanded ? 'navigation-down-arrow' : 'navigation-right-arrow'}`}\n          style={tableGroupExpandCollapseIcon}\n        />\n      </span>\n      {cell.render('Cell')}\n    </>\n  );\n};\n","export const RepeatedValue = () => null;\n","import { VerticalAlign } from '@ui5/webcomponents-react/lib/VerticalAlign';\nimport { DefaultFilterComponent } from '../FilterComponent';\nimport { Cell } from './Cell';\nimport { Expandable } from './Expandable';\nimport { Grouped } from './Grouped';\nimport { RepeatedValue } from './RepeatedValue';\n\nexport const DEFAULT_COLUMN_WIDTH = 60;\n\nconst defaultFilterMethod = (filter, row) => {\n  return new RegExp(filter.value, 'gi').test(String(row[filter.id]));\n};\n\nexport const DefaultColumn = {\n  Filter: DefaultFilterComponent,\n  canResize: true,\n  canReorder: true,\n  minWidth: DEFAULT_COLUMN_WIDTH,\n  vAlign: VerticalAlign.Middle,\n  defaultFilter: defaultFilterMethod,\n  Grouped: Grouped,\n  Cell: Cell,\n  Expandable: Expandable,\n  RepeatedValue: RepeatedValue\n};\n","import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { Loader } from '@ui5/webcomponents-react/lib/Loader';\nimport React, { CSSProperties } from 'react';\n\nconst styles: CSSProperties = {\n  position: 'absolute',\n  top: CssSizeVariables.sapWcrAnalyticalTableRowHeight,\n  left: 0,\n  right: 0,\n  zIndex: 1\n};\n\nconst DefaultLoadingComponent = ({ style }) => {\n  return <Loader delay={500} style={{ ...styles, ...style }} />;\n};\n\nDefaultLoadingComponent.displayName = 'DefaultLoadingComponent';\n\nexport { DefaultLoadingComponent };\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport React, { CSSProperties, FC, useMemo } from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst getArrayOfLength = (len) => Array.from(Array(len).keys());\n\ntype RowProps = { columns: any[]; y: number; row: number };\nconst TableRow: FC<RowProps> = ({ columns, y, row }: RowProps) => {\n  let columnOffset = 0;\n  return (\n    <>\n      {columns.map((column, i) => {\n        const el = (\n          <rect\n            key={`column-${i}-row-${row}`}\n            x={columnOffset + 2}\n            y={y}\n            rx=\"2\"\n            ry=\"8\"\n            width={column.totalWidth - 4}\n            height=\"16\"\n          />\n        );\n        columnOffset += column.totalWidth;\n        return el;\n      })}\n    </>\n  );\n};\n\ntype Props = { columns: any[]; rows: number; style: CSSProperties; rowHeight: number; tableWidth: number };\nexport const TablePlaceholder: FC<Props> = (props: Props) => {\n  const { columns, rows = 5, style, rowHeight, tableWidth } = props;\n\n  const height = rows * rowHeight;\n\n  const innerStyles = useMemo(() => {\n    return {\n      backgroundColor: ThemingParameters.sapList_Background,\n      ...style\n    };\n  }, [style, ThemingParameters.sapList_Background]);\n\n  return (\n    <ContentLoader\n      style={innerStyles}\n      height={height}\n      width={tableWidth}\n      speed={2}\n      backgroundColor={ThemingParameters.sapContent_ImagePlaceholderBackground}\n      foregroundColor={ThemingParameters.sapContent_ImagePlaceholderForegroundColor}\n      backgroundOpacity={ThemingParameters.sapContent_DisabledOpacity as any}\n    >\n      {getArrayOfLength(rows).map((_, index) => (\n        <TableRow key={index} columns={columns} y={rowHeight * index + rowHeight / 2} row={index} />\n      ))}\n    </ContentLoader>\n  );\n};\n","import React from 'react';\n\nexport const DefaultNoDataComponent = ({ noDataText, className, style }) => {\n  return (\n    <div className={className} style={style}>\n      {noDataText}\n    </div>\n  );\n};\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { useCallback, useState } from 'react';\n\nconst getColumnId = (column) => {\n  return typeof column.accessor === 'string' ? column.accessor : column.id;\n};\n\nexport const useDragAndDrop = (props, setColumnOrder, columnOrder, resizeInfo, columns: any[]) => {\n  const { onColumnsReordered } = props;\n\n  const [dragOver, setDragOver] = useState('');\n\n  const handleDragStart = useCallback(\n    (e) => {\n      if (resizeInfo.isResizingColumn) {\n        e.preventDefault();\n        return;\n      }\n      e.dataTransfer.setData('colId', e.currentTarget.dataset.columnId);\n    },\n    [resizeInfo.isResizingColumn]\n  );\n\n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  const handleDragEnter = useCallback((e) => {\n    setDragOver(e.currentTarget.dataset.columnId);\n  }, []);\n\n  const handleOnDrop = useCallback(\n    (e) => {\n      setDragOver('');\n\n      const droppedColId = e.currentTarget.dataset.columnId;\n      const draggedColId = e.dataTransfer.getData('colId');\n      if (droppedColId === draggedColId) return;\n\n      const internalColumnOrder = columnOrder.length > 0 ? columnOrder : columns.map((col) => getColumnId(col));\n      const droppedColIdx = internalColumnOrder.findIndex((col) => col === droppedColId);\n      const draggedColIdx = internalColumnOrder.findIndex((col) => col === draggedColId);\n\n      const tempCols = [...internalColumnOrder];\n      tempCols.splice(droppedColIdx, 0, tempCols.splice(draggedColIdx, 1)[0]);\n      setColumnOrder(tempCols);\n\n      const columnsNewOrder = tempCols.map((tempColId) => columns.find((col) => getColumnId(col) === tempColId));\n      onColumnsReordered(\n        enrichEventWithDetails(e, {\n          columnsNewOrder,\n          column: columns[draggedColIdx]\n        })\n      );\n    },\n    [columnOrder, onColumnsReordered]\n  );\n\n  const handleOnDragEnd = useCallback(() => {\n    setDragOver('');\n  }, [dragOver]);\n\n  return [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd];\n};\n","import { TableScaleWidthMode } from '@ui5/webcomponents-react/lib/TableScaleWidthMode';\nimport { DEFAULT_COLUMN_WIDTH } from '../defaults/Column';\n\nconst ROW_SAMPLE_SIZE = 20;\nconst DEFAULT_HEADER_NUM_CHAR = 10;\nconst MAX_WIDTH = 700;\n\n// a function, which approximates header px sizes given a character length\nconst approximateHeaderPxFromCharLength = (charLength) =>\n  charLength < 15 ? Math.sqrt(charLength * 1500) : 8 * charLength;\nconst approximateContentPxFromCharLength = (charLength) => 8 * charLength;\n\nconst columnsDeps = (deps, { instance: { state, webComponentsReactProperties } }) => [\n  ...deps,\n  state.tableClientWidth,\n  webComponentsReactProperties.scaleWidthMode,\n  webComponentsReactProperties.loading\n];\n\nconst columns = (columns, { instance }) => {\n  if (!instance.state || !instance.rows) {\n    return columns;\n  }\n\n  const { rows, state } = instance;\n\n  const { hiddenColumns, tableClientWidth: totalWidth } = state;\n  const { scaleWidthMode, loading } = instance.webComponentsReactProperties;\n\n  if (columns.length === 0 || !totalWidth) return columns;\n\n  const visibleColumns = columns.filter(Boolean).filter((item) => {\n    return (item.isVisible ?? true) && !hiddenColumns.includes(item.accessor);\n  });\n\n  const calculateDefaultTableWidth = () => {\n    const columnsWithFixedWidth = visibleColumns.filter(({ width }) => width ?? false).map(({ width }) => width);\n    const fixedWidth = columnsWithFixedWidth.reduce((acc, val) => acc + val, 0);\n\n    const defaultColumnsCount = visibleColumns.length - columnsWithFixedWidth.length;\n\n    // check if columns are visible and table has width\n    if (visibleColumns.length > 0 && totalWidth > 0) {\n      // set fixedWidth as defaultWidth if visible columns have fixed value\n      if (visibleColumns.length === columnsWithFixedWidth.length) {\n        return fixedWidth / visibleColumns.length;\n      }\n      // spread default columns\n      if (totalWidth >= fixedWidth + defaultColumnsCount * DEFAULT_COLUMN_WIDTH) {\n        return (totalWidth - fixedWidth) / defaultColumnsCount;\n      }\n    }\n    return DEFAULT_COLUMN_WIDTH;\n  };\n\n  const hasData = rows.some((row) => !row.original?.emptyRow);\n\n  if (scaleWidthMode === TableScaleWidthMode.Default || (!hasData && loading)) {\n    const defaultWidth = calculateDefaultTableWidth();\n    return columns.map((column) => ({ ...column, width: column.width ?? defaultWidth }));\n  }\n\n  const rowSample = rows.slice(0, ROW_SAMPLE_SIZE);\n\n  const columnMeta = visibleColumns.reduce((acc, column) => {\n    if (column.id === '__ui5wcr__internal_selection_column' || column.id === '__ui5wcr__internal_highlight_column') {\n      acc[column.accessor] = {\n        minHeaderWidth: column.width,\n        fullWidth: column.width,\n        contentCharAvg: 0\n      };\n      return acc;\n    }\n\n    const headerLength = typeof column.Header === 'string' ? column.Header.length : DEFAULT_HEADER_NUM_CHAR;\n\n    // max character length\n    const contentMaxCharLength = Math.max(\n      headerLength,\n      ...rowSample.map((row) => {\n        const dataPoint = row.values?.[column.accessor];\n        if (dataPoint) {\n          if (typeof dataPoint === 'string') return dataPoint.length;\n          if (typeof dataPoint === 'number') return (dataPoint + '').length;\n        }\n        return 0;\n      })\n    );\n\n    // avg character length\n    const contentCharAvg =\n      rowSample.reduce((acc, item) => {\n        const dataPoint = item.values?.[column.accessor];\n        let val = 0;\n        if (dataPoint) {\n          if (typeof dataPoint === 'string') val = dataPoint.length;\n          if (typeof dataPoint === 'number') val = (dataPoint + '').length;\n        }\n        return acc + val;\n      }, 0) / rowSample.length;\n\n    const minHeaderWidth = approximateHeaderPxFromCharLength(headerLength);\n\n    acc[column.accessor] = {\n      minHeaderWidth,\n      fullWidth: Math.max(minHeaderWidth, approximateContentPxFromCharLength(contentMaxCharLength)),\n      contentCharAvg\n    };\n    return acc;\n  }, {});\n\n  const totalCharNum = Object.values(columnMeta).reduce(\n    (acc: number, item: any) => acc + item.contentCharAvg,\n    0\n  ) as number;\n\n  let reservedWidth = visibleColumns.reduce((acc, column) => {\n    const { minHeaderWidth, fullWidth } = columnMeta[column.accessor];\n    return (\n      acc +\n        Math.max(\n          column.minWidth || 0,\n          column.width || 0,\n          minHeaderWidth || 0,\n          scaleWidthMode === TableScaleWidthMode.Grow ? fullWidth : 0\n        ) || 0\n    );\n  }, 0);\n\n  let availableWidth = totalWidth - reservedWidth;\n\n  if (scaleWidthMode === TableScaleWidthMode.Smart || availableWidth > 0) {\n    if (scaleWidthMode === TableScaleWidthMode.Grow) {\n      reservedWidth = visibleColumns.reduce((acc, column) => {\n        const { minHeaderWidth } = columnMeta[column.accessor];\n        return acc + Math.max(column.minWidth || 0, column.width || 0, minHeaderWidth || 0) || 0;\n      }, 0);\n      availableWidth = totalWidth - reservedWidth;\n    }\n\n    return columns.map((column) => {\n      const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.accessor);\n      if (isColumnVisible) {\n        const { minHeaderWidth, contentCharAvg } = columnMeta[column.accessor];\n        const additionalSpaceFactor = totalCharNum > 0 ? contentCharAvg / totalCharNum : 1 / visibleColumns.length;\n\n        const targetWidth = additionalSpaceFactor * availableWidth + minHeaderWidth;\n\n        return {\n          ...column,\n          width: column.width ?? targetWidth,\n          minWidth: column.minWidth ?? minHeaderWidth\n        };\n      }\n\n      return column;\n    });\n  }\n\n  // TableScaleWidthMode Grow\n  return columns.map((column) => {\n    const isColumnVisible = (column.isVisible ?? true) && !hiddenColumns.includes(column.accessor);\n    if (isColumnVisible) {\n      const { fullWidth } = columnMeta[column.accessor];\n      return {\n        ...column,\n        width: column.width ?? fullWidth,\n        maxWidth: MAX_WIDTH\n      };\n    }\n    return column;\n  });\n};\n\nexport const useDynamicColumnWidths = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n};\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport React from 'react';\n\nconst baseStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nconst StyleMap = new Map();\nStyleMap.set(ValueState.None, baseStyles);\nStyleMap.set(ValueState.Success, { ...baseStyles, backgroundColor: ThemingParameters.sapSuccessColor });\nStyleMap.set(ValueState.Warning, { ...baseStyles, backgroundColor: ThemingParameters.sapWarningColor });\nStyleMap.set(ValueState.Error, { ...baseStyles, backgroundColor: ThemingParameters.sapErrorColor });\nStyleMap.set(ValueState.Information, { ...baseStyles, backgroundColor: ThemingParameters.sapInformationColor });\n\n/*\n * COMPONENTS\n */\nconst Header = () => <div style={{ width: '6px' }} />;\n\nconst Cell = ({ cell: { value } }) => {\n  return <div style={StyleMap.get(value)} />;\n};\n\n/*\n * TABLE HOOKS\n */\nconst columnsDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n  return [...deps, webComponentsReactProperties.withRowHighlight, webComponentsReactProperties.highlightField];\n};\nconst visibleColumnsDeps = (deps, { instance }) => [...deps, instance.webComponentsReactProperties.withRowHighlight];\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n  if (!webComponentsReactProperties.withRowHighlight) {\n    return currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_highlight_column');\n  }\n\n  const highlightColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_highlight_column');\n  return [highlightColumn, ...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_highlight_column')];\n};\n\nconst columns = (currentColumns, { instance }) => {\n  const { withRowHighlight, highlightField } = instance.webComponentsReactProperties;\n\n  if (!withRowHighlight) {\n    return currentColumns;\n  }\n  return [\n    {\n      id: '__ui5wcr__internal_highlight_column',\n      accessor: highlightField,\n      disableFilters: true,\n      disableSortBy: true,\n      disableGroupBy: true,\n      disableResizing: true,\n      canReorder: false,\n      width: 6,\n      minWidth: 6,\n      maxWidth: 6,\n      Header,\n      Cell\n    },\n    ...currentColumns\n  ];\n};\n\nexport const useRowHighlight = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnsDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\n\nuseRowHighlight.pluginName = 'useRowHighlight';\n","import { CssSizeVariablesNames } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { CheckBox } from '@ui5/webcomponents-react/lib/CheckBox';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/lib/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport React, { useCallback } from 'react';\n\nconst divStyle = { width: '100%', height: '100%', cursor: 'pointer' };\nconst customCheckBoxStyling = {\n  cursor: 'pointer',\n  verticalAlign: 'middle'\n};\n\n/*\n * COMPONENTS\n */\n\nconst Header = ({\n  getToggleAllRowsSelectedProps,\n  flatRows,\n  webComponentsReactProperties: { onRowSelected, selectionMode },\n  toggleAllRowsSelected\n}) => {\n  const onChange = useCallback(\n    (e) => {\n      const allRowsSelected = e.target.checked;\n      toggleAllRowsSelected(allRowsSelected);\n      if (typeof onRowSelected === 'function') {\n        onRowSelected(\n          // cannot use instance.selectedFlatRows here as it only returns all rows on the first level\n          enrichEventWithDetails(e, { allRowsSelected, selectedFlatRows: allRowsSelected ? flatRows : [] })\n        );\n      }\n    },\n    [toggleAllRowsSelected, flatRows]\n  );\n\n  if (selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return null;\n  }\n  return <CheckBox {...getToggleAllRowsSelectedProps()} style={customCheckBoxStyling} onChange={onChange} />;\n};\n\nconst Cell = ({ row, webComponentsReactProperties: { selectionBehavior, selectionMode } }) => {\n  const handleCellClick = useCallback(\n    (e) => {\n      if (TableSelectionBehavior.ROW_SELECTOR === selectionBehavior) {\n        row.getRowProps().onClick(e, true);\n      }\n    },\n    [selectionMode, row]\n  );\n  if (row.isGrouped && selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return null;\n  }\n  if (selectionMode === TableSelectionMode.SINGLE_SELECT) {\n    return <div style={divStyle} onClick={handleCellClick} />;\n  }\n  return (\n    <CheckBox\n      {...row.getToggleRowSelectedProps()}\n      onChange={handleCellClick}\n      style={customCheckBoxStyling}\n      data-name=\"internal_selection_column\"\n    />\n  );\n};\n\n/*\n * TABLE HOOKS\n */\n\nconst columnDeps = (deps, { instance: { webComponentsReactProperties } }) => {\n  return [...deps, webComponentsReactProperties.selectionMode, webComponentsReactProperties.selectionBehavior];\n};\n\nconst visibleColumnsDeps = (deps, { instance }) => [\n  ...deps,\n  instance.webComponentsReactProperties.selectionMode,\n  instance.webComponentsReactProperties.selectionBehavior\n];\n\nconst visibleColumns = (currentVisibleColumns, { instance: { webComponentsReactProperties } }) => {\n  if (\n    webComponentsReactProperties.selectionMode === TableSelectionMode.NONE ||\n    webComponentsReactProperties.selectionBehavior === TableSelectionBehavior.ROW_ONLY\n  ) {\n    return currentVisibleColumns;\n  }\n\n  const selectionColumn = currentVisibleColumns.find(({ id }) => id === '__ui5wcr__internal_selection_column');\n  return [selectionColumn, ...currentVisibleColumns.filter(({ id }) => id !== '__ui5wcr__internal_selection_column')];\n};\nconst columns = (currentColumns, { instance }) => {\n  const { webComponentsReactProperties } = instance;\n  const { selectionMode, selectionBehavior, tableRef } = webComponentsReactProperties;\n\n  if (selectionMode === TableSelectionMode.NONE || selectionBehavior === TableSelectionBehavior.ROW_ONLY) {\n    return currentColumns;\n  }\n\n  const selectionColumnWidth = tableRef.current\n    ? parseInt(\n        getComputedStyle(tableRef.current).getPropertyValue(\n          `--${CssSizeVariablesNames.sapWcrAnalyticalTableSelectionColumnWidth}`\n        ),\n        10\n      )\n    : 47;\n  return [\n    {\n      id: '__ui5wcr__internal_selection_column',\n      accessor: '__ui5wcr__internal_selection_column',\n      disableFilters: true,\n      disableSortBy: true,\n      disableGroupBy: true,\n      disableResizing: true,\n      canReorder: false,\n      width: selectionColumnWidth,\n      minWidth: selectionColumnWidth,\n      maxWidth: selectionColumnWidth,\n      Header,\n      Cell\n    },\n    ...currentColumns\n  ];\n};\n\nexport const useRowSelectionColumn = (hooks) => {\n  hooks.columns.push(columns);\n  hooks.columnsDeps.push(columnDeps);\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n  hooks.visibleColumns.push(visibleColumns);\n};\nuseRowSelectionColumn.pluginName = 'useRowSelectionColumn';\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/lib/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport { useCallback } from 'react';\n\nconst prepareRow = (row, { instance }) => {\n  row.selectSingleRow = (event, selectionCellClick = false) => {\n    instance.selectSingleRow(row, event, selectionCellClick);\n  };\n};\n\nconst getRowProps = (rowProps, { row }) => {\n  return [\n    rowProps,\n    {\n      onClick: row.selectSingleRow\n    }\n  ];\n};\n\nconst tagNamesWhichShouldNotSelectARow = new Set([\n  'UI5-INPUT',\n  'UI5-LINK',\n  'UI5-BUTTON',\n  'UI5-CHECKBOX',\n  'UI5-COMBOBOX',\n  'UI5-DATEPICKER',\n  'UI5-MULTI-COMBOBOX',\n  'UI5-SELECT',\n  'UI5-RADIOBUTTON',\n  'UI5-SEGMENTEDBUTTON',\n  'UI5-SWITCH',\n  'UI5-TOGGLEBUTTON'\n]);\n\nconst useInstance = (instance) => {\n  const { webComponentsReactProperties, dispatch, toggleRowSelected, selectedFlatRows } = instance;\n  const { isTreeTable, selectionMode, onRowSelected, selectionBehavior } = webComponentsReactProperties;\n\n  const selectSingleRow = useCallback(\n    (row, e, selectionCellClick = false) => {\n      if (\n        e.target?.dataset?.name !== 'internal_selection_column' &&\n        !(e.markerAllowTableRowSelection === true || e.nativeEvent?.markerAllowTableRowSelection === true) &&\n        tagNamesWhichShouldNotSelectARow.has(e.target.tagName)\n      ) {\n        return;\n      }\n\n      const isEmptyRow = row.original?.emptyRow;\n      if ([TableSelectionMode.SINGLE_SELECT, TableSelectionMode.MULTI_SELECT].includes(selectionMode) && !isEmptyRow) {\n        if (row.isGrouped || (TableSelectionBehavior.ROW_SELECTOR === selectionBehavior && !selectionCellClick)) {\n          return;\n        }\n        if (isTreeTable) {\n          if (selectionMode === TableSelectionMode.MULTI_SELECT) {\n            dispatch({\n              type: 'SET_SELECTED_ROWS',\n              selectedIds: Object.assign({}, ...selectedFlatRows.map((item) => ({ [item.id]: true })), {\n                [row.id]: !row.isSelected\n              })\n            });\n          } else {\n            dispatch({ type: 'SET_SELECTED_ROWS', selectedIds: { [row.id]: !row.isSelected } });\n          }\n        } else {\n          row.toggleRowSelected();\n        }\n        if (typeof onRowSelected === 'function') {\n          const payload = {\n            row,\n            isSelected: !row.isSelected\n          };\n          const payloadWithFlatRows = {\n            ...payload,\n            selectedFlatRows: !row.isSelected\n              ? [...selectedFlatRows, row]\n              : selectedFlatRows.filter((prevRow) => prevRow.id !== row.id)\n          };\n          onRowSelected(\n            enrichEventWithDetails(e, TableSelectionMode.MULTI_SELECT === selectionMode ? payloadWithFlatRows : payload)\n          );\n        }\n        if (selectionMode === TableSelectionMode.SINGLE_SELECT && !isTreeTable) {\n          selectedFlatRows.forEach(({ id }) => {\n            toggleRowSelected(id, false);\n          });\n        }\n      }\n    },\n    [selectionMode, isTreeTable, dispatch, selectedFlatRows, onRowSelected, toggleRowSelected]\n  );\n\n  Object.assign(instance, { selectSingleRow });\n};\n\nexport const useSingleRowStateSelection = (hooks) => {\n  hooks.useInstance.push(useInstance);\n  hooks.prepareRow.push(prepareRow);\n  hooks.getRowProps.push(getRowProps);\n};\nuseSingleRowStateSelection.pluginName = 'useSingleRowStateSelection';\n","import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/lib/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport { TextAlign } from '@ui5/webcomponents-react/lib/TextAlign';\nimport { VerticalAlign } from '@ui5/webcomponents-react/lib/VerticalAlign';\nimport { getRTL } from '@ui5/webcomponents-base/dist/config/RTL';\nimport { CSSProperties } from 'react';\n\nconst getTableProps = (tableProps, { instance }) => {\n  const { classes } = instance.webComponentsReactProperties;\n  return [\n    tableProps,\n    {\n      className: classes.table\n    }\n  ];\n};\n\nconst getHeaderGroupProps = (headerGroupProps, { instance }) => {\n  const { classes } = instance.webComponentsReactProperties;\n  return [\n    headerGroupProps,\n    {\n      className: classes.tableHeaderRow\n    }\n  ];\n};\n\nconst getHeaderProps = (columnProps, { instance, column }) => {\n  const { classes } = instance.webComponentsReactProperties;\n  const isRTL = getRTL();\n  const lastColumnId = instance.visibleColumns[instance.visibleColumns.length - 1].id;\n  const isLastColumn = column.id === lastColumnId;\n  const style: CSSProperties = {\n    width: column.totalWidth\n  };\n\n  if (instance.state.isScrollable && isLastColumn) {\n    style[isRTL ? 'paddingLeft' : 'paddingRight'] = ThemingParameters.sapScrollBar_Dimension;\n  }\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column') {\n    style.padding = 0;\n  }\n\n  return [\n    columnProps,\n    {\n      className: classes.th,\n      column,\n      style: style,\n      id: column.id\n    }\n  ];\n};\n\nconst ROW_SELECTION_ATTRIBUTE = 'data-is-selected';\n\nconst getRowProps = (rowProps, { instance, row }) => {\n  const { webComponentsReactProperties } = instance;\n  const { classes, selectionBehavior, selectionMode, alternateRowColor } = webComponentsReactProperties;\n  const isEmptyRow = row.original?.emptyRow;\n  let className = classes.tr;\n  const rowCanBeSelected =\n    [TableSelectionMode.SINGLE_SELECT, TableSelectionMode.MULTI_SELECT].includes(selectionMode) && !isEmptyRow;\n\n  if (row.isGrouped) {\n    className += ` ${classes.tableGroupHeader}`;\n  }\n\n  if (alternateRowColor && row.index % 2 !== 0) {\n    className += ` ${classes.alternateRowColor}`;\n  }\n\n  const newRowProps = {\n    className,\n    role: 'row',\n    'aria-rowindex': row.index\n  };\n\n  if (rowCanBeSelected) {\n    if (TableSelectionBehavior.ROW_SELECTOR !== selectionBehavior) {\n      newRowProps.className += ` ${classes.trActive}`;\n    }\n    if (row.isSelected) {\n      newRowProps[ROW_SELECTION_ATTRIBUTE] = '';\n    }\n  }\n\n  return [rowProps, newRowProps];\n};\n\nconst getCellProps = (cellProps, { cell: { column }, instance }) => {\n  const columnIndex = instance.visibleColumns.findIndex(({ id }) => id === column.id);\n  const isLastColumn = instance.visibleColumns.length === columnIndex + 1;\n  const { classes } = instance.webComponentsReactProperties;\n  const style: CSSProperties = {};\n\n  switch (column.hAlign) {\n    case TextAlign.Begin:\n      style.justifyContent = 'flex-start';\n      style.textAlign = 'start';\n      break;\n    case TextAlign.Center:\n      style.justifyContent = 'center';\n      style.textAlign = 'center';\n      break;\n    case TextAlign.End:\n      style.justifyContent = 'flex-end';\n      style.textAlign = 'end';\n      break;\n    case TextAlign.Left:\n      style.justifyContent = 'left';\n      style.textAlign = 'left';\n      break;\n    case TextAlign.Right:\n      style.justifyContent = 'right';\n      style.textAlign = 'right';\n      break;\n  }\n  switch (column.vAlign) {\n    case VerticalAlign.Bottom:\n      style.alignItems = 'flex-end';\n      break;\n    case VerticalAlign.Middle:\n      style.alignItems = 'center';\n      break;\n    case VerticalAlign.Top:\n      style.alignItems = 'flex-start';\n      break;\n  }\n\n  let className = classes.tableCell;\n  if (column.className) {\n    className += ` ${column.className}`;\n  }\n\n  if (column.id === '__ui5wcr__internal_highlight_column' || column.id === '__ui5wcr__internal_selection_column') {\n    style.padding = 0;\n  }\n\n  if (isLastColumn && instance.state.isScrollable) {\n    style.width = `calc(${column.totalWidth}px - ${ThemingParameters.sapScrollBar_Dimension})`;\n  } else {\n    style.width = `${column.totalWidth}px`;\n  }\n\n  return [\n    cellProps,\n    {\n      className,\n      style,\n      tabIndex: -1,\n      'aria-colindex': columnIndex + 1 // aria index is 1 based, not 0\n    }\n  ];\n};\n\nexport const useStyling = (hooks) => {\n  hooks.getTableProps.push(getTableProps);\n  hooks.getHeaderGroupProps.push(getHeaderGroupProps);\n  hooks.getHeaderProps.push(getHeaderProps);\n  hooks.getRowProps.push(getRowProps);\n  hooks.getCellProps.push(getCellProps);\n};\nuseStyling.pluginName = 'useStyling';\n","import { useConsolidatedRef } from '@ui5/webcomponents-react-base/lib/useConsolidatedRef';\nimport { RefObject, useEffect, useRef } from 'react';\nimport { AnalyticalTableDomRef } from '../../../interfaces/AnalyticalTableDomRef';\n\nexport const useTableScrollHandles = (ref) => {\n  const analyticalTableRef: RefObject<AnalyticalTableDomRef> = useConsolidatedRef(ref);\n  const reactWindowRef = useRef<any>({});\n\n  useEffect(() => {\n    if (analyticalTableRef.current) {\n      Object.assign(analyticalTableRef.current, {\n        scrollTo: (offset, align) => {\n          if (typeof reactWindowRef.current?.scrollToOffset === 'function') {\n            reactWindowRef.current.scrollToOffset(offset, { align });\n          }\n        },\n        scrollToItem: (index, align) => {\n          if (typeof reactWindowRef.current?.scrollToIndex === 'function') {\n            reactWindowRef.current.scrollToIndex(index, { align });\n          }\n        }\n      });\n    }\n  }, [analyticalTableRef.current, reactWindowRef.current.scrollToIndex, reactWindowRef.current.scrollToOffset]);\n\n  return [analyticalTableRef, reactWindowRef];\n};\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { useCallback } from 'react';\n\nconst getToggleRowExpandedProps = (rowProps, { row, instance }) => {\n  const { onRowExpandChange, isTreeTable } = instance.webComponentsReactProperties;\n  const onClick = useCallback(\n    (e) => {\n      e.stopPropagation();\n      e.persist();\n      row.toggleRowExpanded();\n      let column = null;\n      if (!isTreeTable) {\n        column = row.cells.find((cell) => cell.column.id === row.groupByID).column;\n      }\n\n      onRowExpandChange(enrichEventWithDetails(e, { row, column }));\n    },\n    [row, isTreeTable, onRowExpandChange]\n  );\n  return [\n    rowProps,\n    {\n      onClick\n    }\n  ];\n};\n\nexport const useToggleRowExpand = (hooks) => {\n  hooks.getToggleRowExpandedProps.push(getToggleRowExpandedProps);\n};\nuseToggleRowExpand.pluginName = 'useToggleRowExpand';\n","export function deepCompare(obj1, obj2) {\n  //Loop through properties in object 1\n  if ((!obj1 && obj2) || (obj1 && !obj2)) {\n    return false;\n  }\n  for (let p in obj1) {\n    //Check property exists on both objects\n    if (obj1.hasOwnProperty(p) !== obj2.hasOwnProperty(p)) return false;\n\n    switch (typeof obj1[p]) {\n      //Deep compare objects\n      case 'object':\n        if (!deepCompare(obj1[p], obj2[p])) return false;\n        break;\n      //Compare function code\n      case 'function':\n        if (typeof obj2[p] == 'undefined' || (p != 'compare' && obj1[p].toString() != obj2[p].toString())) return false;\n        break;\n      //Compare values\n      default:\n        if (obj1[p] != obj2[p]) return false;\n    }\n  }\n\n  //Check object 2 for any extra properties\n  for (let p in obj2) {\n    if (typeof obj2[p] !== 'undefined' && typeof obj1[p] === 'undefined') {\n      return false;\n    }\n    // if (typeof (obj1[p]) == 'undefined') return false;\n  }\n  return true;\n}\n","import { deepCompare } from '../util/deepCompare';\n\nexport const stateReducer = (newState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case 'SET_GROUP_BY':\n      if (deepCompare(newState.groupBy, payload)) {\n        return newState;\n      }\n      return { ...newState, groupBy: payload };\n    case 'SET_SELECTED_ROWS':\n      if (deepCompare(newState.selectedRowIds, action.selectedIds)) {\n        return newState;\n      }\n      return { ...newState, selectedRowIds: action.selectedIds };\n    case 'TABLE_RESIZE':\n      return { ...newState, tableClientWidth: payload.tableClientWidth };\n    case 'TABLE_SCROLLING_ENABLED':\n      return { ...newState, isScrollable: payload.isScrollable };\n    default:\n      return newState;\n  }\n};\n","import { Title } from '@ui5/webcomponents-react/lib/Title';\nimport React, { FC, isValidElement, ReactNode, ReactText } from 'react';\n\nconst styles = {\n  minHeight: '1.5rem',\n  display: 'flex',\n  alignItems: 'center'\n};\n\nexport interface TitleBarProps {\n  children: ReactText | ReactNode;\n}\n\nexport /**\n * <code>import { TitleBar } from '@ui5/webcomponents-react/lib/TitleBar';</code>\n */\nconst TitleBar: FC<TitleBarProps> = (props) => {\n  const { children } = props;\n  return (\n    <div style={styles}>\n      {typeof children === 'string' && <Title>{children}</Title>}\n      {isValidElement(children) && children}\n    </div>\n  );\n};\n","import { defaultOrderByFn } from 'react-table';\n\nexport const orderByFn = (rows, functions, directions) => {\n  const wrapSortFn = (sortFn, index) => {\n    const desc = directions[index] === false || directions[index] === 'desc';\n\n    return (rowA, rowB) => {\n      if (rowA.original?.emptyRow && !rowB.original?.emptyRow) {\n        return desc ? -1 : 1;\n      }\n      if (!rowA.original?.emptyRow && rowB.original?.emptyRow) {\n        return desc ? 1 : -1;\n      }\n      if (rowA.original?.emptyRow && rowB.original?.emptyRow) {\n        return 0;\n      }\n      return sortFn(rowA, rowB);\n    };\n  };\n\n  const wrappedSortfunctions = functions.map(wrapSortFn);\n\n  return defaultOrderByFn(rows, wrappedSortfunctions, directions);\n};\n","import '@ui5/webcomponents-icons/dist/icons/navigation-down-arrow';\nimport '@ui5/webcomponents-icons/dist/icons/navigation-right-arrow';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { GlobalStyleClasses } from '@ui5/webcomponents-react/lib/GlobalStyleClasses';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport React, { MutableRefObject, useCallback, useRef } from 'react';\nimport { useVirtual } from 'react-virtual';\n\ninterface VirtualTableBodyProps {\n  classes: Record<string, string>;\n  prepareRow: (row: unknown) => void;\n  rows: any[];\n  minRows: number;\n  selectionMode: TableSelectionMode;\n  reactWindowRef: MutableRefObject<any>;\n  isTreeTable: boolean;\n  internalRowHeight: number;\n  tableBodyHeight: number;\n  visibleRows: number;\n  alternateRowColor: boolean;\n  overscanCount: number;\n  totalColumnsWidth: number;\n  infiniteScroll: boolean;\n  infiniteScrollThreshold: number;\n  onLoadMore?: (e?: { detail: { rowCount: number } }) => void;\n}\n\nexport const VirtualTableBody = (props: VirtualTableBodyProps) => {\n  const {\n    classes,\n    prepareRow,\n    rows,\n    minRows,\n    selectionMode,\n    reactWindowRef,\n    isTreeTable,\n    internalRowHeight,\n    tableBodyHeight,\n    visibleRows,\n    overscanCount,\n    totalColumnsWidth,\n    infiniteScroll,\n    infiniteScrollThreshold,\n    onLoadMore\n  } = props;\n\n  const firedInfiniteLoadEvents = useRef(new Set());\n\n  const itemCount = Math.max(minRows, rows.length);\n  const overscan = overscanCount ? overscanCount : Math.floor(visibleRows / 2);\n\n  const parentRef = useRef();\n\n  const rowVirtualizer = useVirtual({\n    size: itemCount,\n    parentRef,\n    estimateSize: React.useCallback(() => internalRowHeight, [internalRowHeight]),\n    overscan\n  });\n\n  reactWindowRef.current = {\n    scrollToOffset: rowVirtualizer.scrollToOffset,\n    scrollToIndex: rowVirtualizer.scrollToIndex\n  };\n\n  const classNames = StyleClassHelper.of(classes.tbody, GlobalStyleClasses.sapScrollBar);\n\n  const lastScrollTop = useRef(0);\n\n  const onScroll = useCallback(\n    (event) => {\n      const scrollOffset = event.target.scrollTop;\n      const isScrollingDown = lastScrollTop.current < scrollOffset;\n      if (isScrollingDown && infiniteScroll) {\n        lastScrollTop.current = scrollOffset;\n        const currentTopRow = Math.floor(scrollOffset / internalRowHeight);\n        if (rows.length - currentTopRow < infiniteScrollThreshold) {\n          if (!firedInfiniteLoadEvents.current.has(rows.length)) {\n            onLoadMore({\n              detail: {\n                rowCount: rows.length\n              }\n            });\n          }\n          firedInfiniteLoadEvents.current.add(rows.length);\n        }\n      }\n    },\n    [\n      infiniteScroll,\n      infiniteScrollThreshold,\n      onLoadMore,\n      rows.length,\n      internalRowHeight,\n      firedInfiniteLoadEvents,\n      lastScrollTop\n    ]\n  );\n\n  const currentlyFocusedCell = useRef<HTMLDivElement>(null);\n  const onTableFocus = useCallback(\n    (e) => {\n      const firstCell: HTMLDivElement = e.target.querySelector(\n        'div[role=\"row\"]:first-child div[role=\"cell\"]:first-child'\n      );\n      if (firstCell) {\n        firstCell.tabIndex = 0;\n        firstCell.focus();\n        currentlyFocusedCell.current = firstCell;\n      }\n    },\n    [currentlyFocusedCell]\n  );\n\n  const onKeyboardNavigation = useCallback(\n    (e) => {\n      if (currentlyFocusedCell.current) {\n        switch (e.key) {\n          case 'ArrowRight': {\n            const newElement = currentlyFocusedCell.current.nextElementSibling as HTMLDivElement;\n            if (newElement) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            }\n            break;\n          }\n          case 'ArrowLeft': {\n            const newElement = currentlyFocusedCell.current.previousElementSibling as HTMLDivElement;\n            if (newElement) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            }\n            break;\n          }\n          case 'ArrowDown': {\n            const nextRow = currentlyFocusedCell.current.parentElement.nextElementSibling as HTMLDivElement;\n            if (nextRow) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              const currentColumnIndex = currentlyFocusedCell.current.getAttribute('aria-colindex');\n              const newElement: HTMLDivElement = nextRow.querySelector(`div[aria-colindex=\"${currentColumnIndex}\"]`);\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            }\n            break;\n          }\n          case 'ArrowUp': {\n            const previousRow = currentlyFocusedCell.current.parentElement.previousElementSibling as HTMLDivElement;\n            if (previousRow) {\n              currentlyFocusedCell.current.tabIndex = -1;\n              const currentColumnIndex = currentlyFocusedCell.current.getAttribute('aria-colindex');\n              const newElement: HTMLDivElement = previousRow.querySelector(\n                `div[aria-colindex=\"${currentColumnIndex}\"]`\n              );\n              newElement.tabIndex = 0;\n              newElement.focus();\n              currentlyFocusedCell.current = newElement;\n            }\n            break;\n          }\n        }\n      }\n    },\n    [currentlyFocusedCell]\n  );\n\n  return (\n    <div\n      className={classNames.valueOf()}\n      ref={parentRef}\n      onScroll={onScroll}\n      style={{\n        height: `${tableBodyHeight}px`,\n        width: `${totalColumnsWidth}px`\n      }}\n    >\n      <div\n        tabIndex={0}\n        onFocus={onTableFocus}\n        onKeyDown={onKeyboardNavigation}\n        style={{\n          height: `${rowVirtualizer.totalSize}px`,\n          width: `${totalColumnsWidth}px`,\n          position: 'relative'\n        }}\n      >\n        {rowVirtualizer.virtualItems.map((virtualRow) => {\n          const row = rows[virtualRow.index];\n          if (!row) {\n            return (\n              <div\n                key={`empty_row_${virtualRow.index}`}\n                className={classes.tr}\n                style={{\n                  height: `${virtualRow.size}px`,\n                  transform: `translateY(${virtualRow.start}px)`\n                }}\n              />\n            );\n          }\n          prepareRow(row);\n          const rowProps = row.getRowProps();\n\n          return (\n            <div\n              {...rowProps}\n              style={{\n                height: `${virtualRow.size}px`,\n                transform: `translateY(${virtualRow.start}px)`\n              }}\n            >\n              {row.cells.map((cell) => {\n                const cellProps = cell.getCellProps();\n                if (row.original?.emptyRow) {\n                  return <div {...cellProps} />;\n                }\n\n                let contentToRender;\n                if (\n                  cell.column.id == '__ui5wcr__internal_highlight_column' ||\n                  cell.column.id === '__ui5wcr__internal_selection_column'\n                ) {\n                  contentToRender = 'Cell';\n                } else if (isTreeTable) {\n                  contentToRender = 'Expandable';\n                } else if (cell.isGrouped) {\n                  contentToRender = 'Grouped';\n                } else if (cell.isAggregated) {\n                  contentToRender = 'Aggregated';\n                } else if (cell.isPlaceholder) {\n                  contentToRender = 'RepeatedValue';\n                } else {\n                  contentToRender = 'Cell';\n                }\n\n                // eslint-disable-next-line react/jsx-key\n                return <div {...cellProps}>{cell.render(contentToRender)}</div>;\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { useDeprecateRenderMethods } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { TableScaleWidthMode } from '@ui5/webcomponents-react/lib/TableScaleWidthMode';\nimport { TableSelectionBehavior } from '@ui5/webcomponents-react/lib/TableSelectionBehavior';\nimport { TableSelectionMode } from '@ui5/webcomponents-react/lib/TableSelectionMode';\nimport debounce from 'lodash.debounce';\nimport React, {\n  ComponentType,\n  CSSProperties,\n  FC,\n  forwardRef,\n  ReactNode,\n  ReactText,\n  Ref,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef\n} from 'react';\nimport {\n  PluginHook,\n  useColumnOrder,\n  useExpanded,\n  useFilters,\n  useGroupBy,\n  useResizeColumns,\n  useRowSelect,\n  useSortBy,\n  useTable\n} from 'react-table';\nimport { AnalyticalTableColumnDefinition } from '../../interfaces/AnalyticalTableColumnDefinition';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport styles from './AnayticalTable.jss';\nimport { ColumnHeader } from './ColumnHeader';\nimport { DefaultColumn } from './defaults/Column';\nimport { DefaultLoadingComponent } from './defaults/LoadingComponent';\nimport { TablePlaceholder } from './defaults/LoadingComponent/TablePlaceholder';\nimport { DefaultNoDataComponent } from './defaults/NoDataComponent';\nimport { useDragAndDrop } from './hooks/useDragAndDrop';\nimport { useDynamicColumnWidths } from './hooks/useDynamicColumnWidths';\nimport { useRowHighlight } from './hooks/useRowHighlight';\nimport { useRowSelectionColumn } from './hooks/useRowSelectionColumn';\nimport { useSingleRowStateSelection } from './hooks/useSingleRowStateSelection';\nimport { useStyling } from './hooks/useStyling';\nimport { useTableScrollHandles } from './hooks/useTableScrollHandles';\nimport { useToggleRowExpand } from './hooks/useToggleRowExpand';\nimport { stateReducer } from './tableReducer/stateReducer';\nimport { TitleBar } from './TitleBar';\nimport { orderByFn } from './util';\nimport { VirtualTableBody } from './virtualization/VirtualTableBody';\n\nexport interface TableProps extends CommonProps {\n  /**\n   * Please look at the [AnalyticalTableColumnDefinition interface](https://github.com/SAP/ui5-webcomponents-react/blob/master/packages/main/src/interfaces/AnalyticalTableColumnDefinition.ts) for a full list of options.\n   */\n  columns: AnalyticalTableColumnDefinition[];\n  data: object[];\n\n  /**\n   * Component or text of title section of the Table (if not set it will be hidden)\n   */\n  title?: ReactText | ReactNode;\n  /**\n   * Extension section of the Table. If not set, no extension area will be rendered\n   */\n  renderExtension?: () => ReactNode;\n  extension?: ReactNode;\n\n  // appearance\n\n  minRows?: number;\n  visibleRows?: number;\n  loading?: boolean;\n  busyIndicatorEnabled?: boolean;\n  noDataText?: string;\n  rowHeight?: number;\n  alternateRowColor?: boolean;\n  withRowHighlight?: boolean;\n  highlightField?: string;\n\n  // features\n  filterable?: boolean;\n  sortable?: boolean;\n  groupable?: boolean;\n  groupBy?: string[];\n  selectionBehavior?: TableSelectionBehavior;\n  selectionMode?: TableSelectionMode;\n  scaleWidthMode?: TableScaleWidthMode;\n  columnOrder?: object[];\n  infiniteScroll?: boolean;\n  infiniteScrollThreshold?: number;\n\n  // events\n\n  onSort?: (e: CustomEvent<{ column: unknown; sortDirection: string }>) => void;\n  onGroup?: (e: CustomEvent<{ column: unknown; groupedColumns: string[] }>) => void;\n  onRowSelected?: (e?: CustomEvent<{ allRowsSelected?: boolean; row?: unknown; isSelected?: boolean }>) => any;\n  onRowExpandChange?: (e?: CustomEvent<{ row: unknown; column: unknown }>) => any;\n  onColumnsReordered?: (e?: CustomEvent<{ columnsNewOrder: string[]; column: unknown }>) => void;\n  onLoadMore?: (e?: { detail: { rowCount: number } }) => void;\n  /**\n   * additional options which will be passed to [react-table´s useTable hook](https://github.com/tannerlinsley/react-table/blob/master/docs/api/useTable.md#table-options)\n   */\n  reactTableOptions?: object;\n  tableHooks?: PluginHook<any>[];\n  subRowsKey?: string;\n  selectedRowIds?: { [key: string]: boolean };\n  isTreeTable?: boolean;\n  overscanCount?: number;\n\n  // default components\n  NoDataComponent?: ComponentType<any>;\n  LoadingComponent?: ComponentType<any>;\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'AnalyticalTable' });\n\n/**\n * <code>import { AnalyticalTable } from '@ui5/webcomponents-react/lib/AnalyticalTable';</code><br />\n * <br />\n * ### Usage Notes\n * By default, the `AnalyticalTable` will not select any rows after clicking on active elements like a `Button`, `Link`,\n * etc. <br />\n * In case you want to select the row anyways, you can \"mark\" the event to allow such a behaviour. <br />\n * Example: `<Link onClick={(e) => {e.markerAllowTableRowSelection = true;}>My Link Text</Link>`\n */\nconst AnalyticalTable: FC<TableProps> = forwardRef((props: TableProps, ref: Ref<HTMLDivElement>) => {\n  const {\n    columns,\n    className,\n    style,\n    tooltip,\n    title,\n    loading,\n    groupBy,\n    selectionMode,\n    selectionBehavior,\n    onRowSelected,\n    onSort,\n    reactTableOptions,\n    tableHooks,\n    busyIndicatorEnabled,\n    subRowsKey,\n    onGroup,\n    rowHeight,\n    selectedRowIds,\n    LoadingComponent,\n    onRowExpandChange,\n    noDataText,\n    NoDataComponent,\n    visibleRows,\n    minRows,\n    isTreeTable,\n    alternateRowColor,\n    overscanCount,\n    scaleWidthMode,\n    withRowHighlight,\n    highlightField = 'status',\n    groupable,\n    sortable,\n    filterable,\n    infiniteScroll,\n    infiniteScrollThreshold = 20,\n    onLoadMore\n  } = props;\n\n  const classes = useStyles();\n\n  const [analyticalTableRef, reactWindowRef] = useTableScrollHandles(ref);\n  const tableRef: RefObject<HTMLDivElement> = useRef();\n  const extension = useDeprecateRenderMethods(props, 'renderExtension', 'extension');\n\n  const getSubRows = useCallback((row) => row[subRowsKey] || [], [subRowsKey]);\n\n  const data = useMemo(() => {\n    if (minRows > props.data.length) {\n      const missingRows: number = minRows - props.data.length;\n      const emptyRows = Array.from({ length: missingRows }, (v, i) => i).map(() => ({ emptyRow: true }));\n\n      return [...props.data, ...emptyRows];\n    }\n    return props.data;\n  }, [props.data, minRows]);\n\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: tableState,\n    columns: tableInternalColumns,\n    setColumnOrder,\n    dispatch,\n    totalColumnsWidth,\n    selectedFlatRows\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn: DefaultColumn,\n      orderByFn,\n      getSubRows,\n      stateReducer,\n      disableFilters: !filterable,\n      disableSortBy: !sortable,\n      disableGroupBy: !groupable,\n      webComponentsReactProperties: {\n        tableRef,\n        selectionMode,\n        selectionBehavior,\n        classes,\n        onRowSelected,\n        onRowExpandChange,\n        isTreeTable,\n        alternateRowColor,\n        scaleWidthMode,\n        loading,\n        withRowHighlight,\n        highlightField\n      },\n      ...reactTableOptions\n    },\n    useFilters,\n    useGroupBy,\n    useColumnOrder,\n    useSortBy,\n    useExpanded,\n    useRowSelect,\n    useResizeColumns,\n    useRowSelectionColumn,\n    useSingleRowStateSelection,\n    useRowHighlight,\n    useDynamicColumnWidths,\n    useStyling,\n    useToggleRowExpand,\n    ...tableHooks\n  );\n  // scroll bar detection\n  useEffect(() => {\n    const visibleRowCount = rows.length < visibleRows ? Math.max(rows.length, minRows) : visibleRows;\n    dispatch({ type: 'TABLE_SCROLLING_ENABLED', payload: { isScrollable: rows.length > visibleRowCount } });\n  }, [rows.length, minRows, visibleRows]);\n\n  const updateTableClientWidth = useCallback(() => {\n    if (tableRef.current) {\n      dispatch({ type: 'TABLE_RESIZE', payload: { tableClientWidth: tableRef.current.clientWidth } });\n    }\n  }, []);\n\n  useEffect(() => {\n    // @ts-ignore\n    const tableWidthObserver = new ResizeObserver(debounce(updateTableClientWidth, 500));\n    tableWidthObserver.observe(tableRef.current);\n    return () => {\n      tableWidthObserver.disconnect();\n    };\n  }, [updateTableClientWidth]);\n\n  useEffect(() => {\n    updateTableClientWidth();\n  }, [updateTableClientWidth]);\n\n  useEffect(() => {\n    dispatch({ type: 'SET_GROUP_BY', payload: groupBy });\n  }, [groupBy, dispatch]);\n\n  useEffect(() => {\n    dispatch({ type: 'SET_SELECTED_ROWS', selectedIds: selectedRowIds });\n  }, [selectedRowIds, dispatch]);\n\n  const calcRowHeight = parseInt(\n    getComputedStyle(tableRef.current ?? document.body).getPropertyValue('--sapWcrAnalyticalTableRowHeight') || '44'\n  );\n\n  const internalRowHeight = rowHeight ?? calcRowHeight;\n\n  const tableBodyHeight = useMemo(() => {\n    const rowNum = rows.length < visibleRows ? Math.max(rows.length, minRows) : visibleRows;\n    return internalRowHeight * rowNum;\n  }, [internalRowHeight, rows.length, visibleRows, minRows]);\n\n  const noDataStyles = useMemo(() => {\n    return {\n      height: `${tableBodyHeight}px`,\n      width: `${totalColumnsWidth}px`\n    };\n  }, [tableBodyHeight, totalColumnsWidth]);\n\n  const onGroupByChanged = useCallback(\n    (e) => {\n      const { column, isGrouped } = e.detail;\n      let groupedColumns = [];\n      if (isGrouped) {\n        groupedColumns = [...tableState.groupBy, column.id];\n      } else {\n        groupedColumns = tableState.groupBy.filter((group) => group !== column.id);\n      }\n      dispatch({ type: 'SET_GROUP_BY', payload: groupedColumns });\n      onGroup(\n        enrichEventWithDetails(e, {\n          column,\n          groupedColumns\n        })\n      );\n    },\n    [tableState.groupBy, onGroup, dispatch]\n  );\n\n  const [dragOver, handleDragEnter, handleDragStart, handleDragOver, handleOnDrop, handleOnDragEnd] = useDragAndDrop(\n    props,\n    setColumnOrder,\n    tableState.columnOrder,\n    tableState.columnResizing,\n    tableInternalColumns\n  );\n\n  const passThroughProps = usePassThroughHtmlProps(props, [\n    'onSort',\n    'onGroup',\n    'onRowSelected',\n    'onRowExpandChange',\n    'onColumnsReordered',\n    'onLoadMore'\n  ]);\n\n  const inlineStyle = useMemo(() => {\n    const tableStyles = {\n      maxWidth: '100%',\n      overflowX: 'auto'\n    };\n    if (!!rowHeight) {\n      tableStyles['--sapWcrAnalyticalTableRowHeight'] = `${rowHeight}px`;\n    }\n\n    if (tableState.tableClientWidth > 0) {\n      return {\n        ...tableStyles,\n        ...style\n      } as CSSProperties;\n    }\n    return {\n      ...tableStyles,\n      ...style,\n      visibility: 'hidden'\n    } as CSSProperties;\n  }, [tableState.tableClientWidth, style, rowHeight]);\n\n  return (\n    <div className={className} style={inlineStyle} title={tooltip} ref={analyticalTableRef} {...passThroughProps}>\n      {title && <TitleBar>{title}</TitleBar>}\n      {extension && <div>{extension}</div>}\n      <div\n        {...getTableProps()}\n        role=\"grid\"\n        aria-rowcount={rows.length}\n        aria-colcount={tableInternalColumns.length}\n        data-per-page={visibleRows}\n        ref={tableRef}\n      >\n        {headerGroups.map((headerGroup) => {\n          let headerProps = {};\n          if (headerGroup.getHeaderGroupProps) {\n            headerProps = headerGroup.getHeaderGroupProps();\n          }\n          return (\n            // eslint-disable-next-line react/jsx-key\n            <header {...headerProps} role=\"rowgroup\">\n              {headerGroup.headers.map((column) => (\n                // eslint-disable-next-line react/jsx-key\n                <ColumnHeader\n                  {...column.getHeaderProps()}\n                  onSort={onSort}\n                  onGroupBy={onGroupByChanged}\n                  onDragStart={handleDragStart}\n                  onDragOver={handleDragOver}\n                  onDrop={handleOnDrop}\n                  onDragEnter={handleDragEnter}\n                  onDragEnd={handleOnDragEnd}\n                  dragOver={column.id === dragOver}\n                  isDraggable={!isTreeTable && column.canReorder}\n                >\n                  {column.render('Header')}\n                </ColumnHeader>\n              ))}\n            </header>\n          );\n        })}\n        {loading && busyIndicatorEnabled && props.data?.length > 0 && (\n          <LoadingComponent style={{ width: `${totalColumnsWidth}px` }} />\n        )}\n        {loading && props.data?.length === 0 && (\n          <TablePlaceholder\n            columns={tableInternalColumns.filter(\n              (col) => (col.isVisible ?? true) && !tableState.hiddenColumns.includes(col.accessor)\n            )}\n            rows={props.minRows}\n            style={noDataStyles}\n            rowHeight={internalRowHeight}\n            tableWidth={totalColumnsWidth}\n          />\n        )}\n        {!loading && props.data?.length === 0 && (\n          <NoDataComponent noDataText={noDataText} className={classes.noDataContainer} style={noDataStyles} />\n        )}\n        {props.data?.length > 0 && (\n          <VirtualTableBody\n            classes={classes}\n            prepareRow={prepareRow}\n            rows={rows}\n            minRows={minRows}\n            selectionMode={selectionMode}\n            reactWindowRef={reactWindowRef}\n            isTreeTable={isTreeTable}\n            internalRowHeight={internalRowHeight}\n            tableBodyHeight={tableBodyHeight}\n            visibleRows={visibleRows}\n            alternateRowColor={alternateRowColor}\n            overscanCount={overscanCount}\n            totalColumnsWidth={totalColumnsWidth}\n            infiniteScroll={infiniteScroll}\n            infiniteScrollThreshold={infiniteScrollThreshold}\n            onLoadMore={onLoadMore}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n\nAnalyticalTable.displayName = 'AnalyticalTable';\nAnalyticalTable.defaultProps = {\n  loading: false,\n  busyIndicatorEnabled: true,\n  sortable: true,\n  filterable: false,\n  groupable: false,\n  selectionMode: TableSelectionMode.NONE,\n  selectionBehavior: TableSelectionBehavior.ROW,\n  scaleWidthMode: TableScaleWidthMode.Default,\n  data: [],\n  columns: [],\n  title: null,\n  minRows: 5,\n  groupBy: [],\n  NoDataComponent: DefaultNoDataComponent,\n  LoadingComponent: DefaultLoadingComponent,\n  noDataText: 'No Data',\n  reactTableOptions: {},\n  tableHooks: [],\n  visibleRows: 15,\n  subRowsKey: 'subRows',\n  selectedRowIds: {},\n  onGroup: () => {},\n  onRowExpandChange: () => {},\n  onColumnsReordered: () => {},\n  isTreeTable: false,\n  alternateRowColor: false\n};\n\nexport { AnalyticalTable };\n"]},"metadata":{},"sourceType":"module"}