{"ast":null,"code":"import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/RadioButton';\n/**\n * <code>import { RadioButton } from '@ui5/webcomponents-react/lib/RadioButton';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/RadioButton\" target=\"_blank\">UI5 Web Components Playground</a>\n */\n\nvar RadioButton = withWebComponent('ui5-radiobutton', ['name', 'text', 'value', 'valueState'], ['disabled', 'readonly', 'selected', 'wrap'], [], ['select']);\nRadioButton.displayName = 'RadioButton';\nRadioButton.defaultProps = {\n  disabled: false,\n  readonly: false,\n  selected: false,\n  valueState: ValueState.None,\n  wrap: false\n};\nexport { RadioButton };","map":{"version":3,"sources":["../src/webComponents/RadioButton/index.tsx"],"names":["RadioButton","withWebComponent","disabled","readonly","selected","valueState","ValueState","wrap"],"mappings":";;;AAqDA;;;;;;IAKMA,WAAqC,GAAGC,gBAAgB,CAAA,iBAAA,EAE5D,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAF4D,YAE5D,CAF4D,EAG5D,CAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAH4D,MAG5D,CAH4D,EAAA,EAAA,EAK5D,CAL4D,QAK5D,CAL4D,C;AAQ9DD,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AAEAA,WAAW,CAAXA,YAAAA,GAA2B;AACzBE,EAAAA,QAAQ,EADiB,KAAA;AAEzBC,EAAAA,QAAQ,EAFiB,KAAA;AAGzBC,EAAAA,QAAQ,EAHiB,KAAA;AAIzBC,EAAAA,UAAU,EAAEC,UAAU,CAJG,IAAA;AAKzBC,EAAAA,IAAI,EAAE;AALmB,CAA3BP","sourcesContent":["import { ValueState } from '@ui5/webcomponents-react/lib/ValueState';\nimport { withWebComponent } from '@ui5/webcomponents-react/lib/withWebComponent';\nimport '@ui5/webcomponents/dist/RadioButton';\nimport React, { FC } from 'react';\nimport { WithWebComponentPropTypes } from '../../internal/withWebComponent';\n\nexport interface RadioButtonPropTypes extends Omit<WithWebComponentPropTypes, 'onSelect'> {\n  /**\n   * Determines whether the <code>ui5-radiobutton</code> is disabled. <br><br> <b>Note:</b> A disabled <code>ui5-radiobutton</code> is completely noninteractive.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the name of the <code>ui5-radiobutton</code>. Radio buttons with the same <code>name</code> will form a radio button group.<br/><br/>\n   *\n   * <b>Note:</b> The selection can be changed with <code>ARROW_UP/DOWN</code> and <code>ARROW_LEFT/RIGHT</code> keys between radio buttons in same group.<br/><br/>\n   *\n   * <b>Note:</b> Only one radio button can be selected per group.<br/><br/>\n   *\n   * <b>Important:</b> For the <code>name</code> property to have effect when submitting forms, you must add the following import to your project: <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code><br/><br/>\n   *\n   * <b>Note:</b> When set, a native <code>input</code> HTML element will be created inside the <code>ui5-radiobutton</code> so that it can be submitted as part of an HTML form.\n   */\n  name?: string;\n  /**\n   * Determines whether the <code>ui5-radiobutton</code> is read-only. <br><br> <b>Note:</b> A read-only <code>ui5-radiobutton</code> is not editable, but still provides visual feedback upon user interaction.\n   */\n  readonly?: boolean;\n  /**\n   * Determines whether the <code>ui5-radiobutton</code> is selected or not. <br><br> <b>Note:</b> The property value can be changed with user interaction, either by cliking/tapping on the <code>ui5-radiobutton</code>, or by using the Space or Enter key.\n   */\n  selected?: boolean;\n  /**\n   * Defines the text of the <code>ui5-radiobutton</code>.\n   */\n  text?: string;\n  /**\n   * Defines the form value of the <code>ui5-radiobutton</code>. When a form with a radio button group is submitted, the group's value will be the value of the currently selected radio button. <br> <b>Important:</b> For the <code>value</code> property to have effect, you must add the following import to your project: <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n   */\n  value?: string;\n  /**\n   * Defines the value state of the <code>ui5-radiobutton</code>. <br><br> Available options are: <ul> <li><code>None</code></li> <li><code>Error</code></li> <li><code>Warning</code></li> </ul>\n   */\n  valueState?: ValueState;\n  /**\n   * Defines whether the <code>ui5-radiobutton</code> text wraps when there is not enough space. <br><br> <b>Note:</b> By default, the text truncates when there is not enough space.\n   */\n  wrap?: boolean;\n  /**\n   * Fired when the <code>ui5-radiobutton</code> selected state changes.\n   */\n  onSelect?: (event: CustomEvent<{}>) => void;\n}\n\n/**\n * <code>import { RadioButton } from '@ui5/webcomponents-react/lib/RadioButton';</code>\n * <br />\n * <a href=\"https://sap.github.io/ui5-webcomponents/playground/components/RadioButton\" target=\"_blank\">UI5 Web Components Playground</a>\n */\nconst RadioButton: FC<RadioButtonPropTypes> = withWebComponent<RadioButtonPropTypes>(\n  'ui5-radiobutton',\n  ['name', 'text', 'value', 'valueState'],\n  ['disabled', 'readonly', 'selected', 'wrap'],\n  [],\n  ['select']\n);\n\nRadioButton.displayName = 'RadioButton';\n\nRadioButton.defaultProps = {\n  disabled: false,\n  readonly: false,\n  selected: false,\n  valueState: ValueState.None,\n  wrap: false\n};\n\nexport { RadioButton };\n"]},"metadata":{},"sourceType":"module"}