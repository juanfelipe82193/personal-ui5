{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { BusyIndicator } from '@ui5/webcomponents-react/lib/BusyIndicator';\nimport { BusyIndicatorSize } from '@ui5/webcomponents-react/lib/BusyIndicatorSize';\nimport { FilterType } from '@ui5/webcomponents-react/lib/FilterType';\nimport { Input } from '@ui5/webcomponents-react/lib/Input';\nimport { Label } from '@ui5/webcomponents-react/lib/Label';\nimport { MultiComboBox } from '@ui5/webcomponents-react/lib/MultiComboBox';\nimport { Option } from '@ui5/webcomponents-react/lib/Option';\nimport { Select } from '@ui5/webcomponents-react/lib/Select';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport React, { forwardRef, useMemo } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nvar styles = {\n  filterItem: {\n    minWidth: '10rem',\n    height: 'fit-content',\n    marginRight: '1rem',\n    marginBottom: '1rem'\n  },\n  innerFilterItemContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start'\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center'\n  }\n};\nvar useStyles = createComponentStyles(styles, {\n  name: 'FilterItem'\n});\n/**\n * <code>import { FilterItem } from '@ui5/webcomponents-react/lib/FilterItem';</code>\n */\n\nvar FilterItem = forwardRef(function (props, ref) {\n  var _ref = props,\n      filterItems = _ref.filterItems,\n      onChange = _ref.onChange,\n      type = _ref.type,\n      placeholder = _ref.placeholder,\n      children = _ref.children,\n      loading = _ref.loading,\n      changeEventName = _ref.changeEventName,\n      valueParamName = _ref.valueParamName,\n      label = _ref.label,\n      style = _ref.style,\n      tooltip = _ref.tooltip;\n  var classes = useStyles();\n\n  function getItemByKey(key) {\n    return filterItems.filter(function (item) {\n      return item.key === key;\n    })[0];\n  }\n\n  function onSelect(e) {\n    var selectedKey = e.detail.selectedOption.getAttribute('data-key');\n    var item = getItemByKey(selectedKey) || filterItems[0];\n    onChange(enrichEventWithDetails(e, {\n      selectedItem: item\n    }));\n  }\n\n  function onMultiCbChange(e) {\n    var selectedItems = e.detail.items;\n    onChange(enrichEventWithDetails(e, {\n      selectedItems: selectedItems.map(function (item) {\n        return getItemByKey(item.getAttribute('data-key'));\n      })\n    }));\n  }\n\n  var filterComponent = useMemo(function () {\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.loadingContainer\n      }, /*#__PURE__*/React.createElement(BusyIndicator, {\n        active: true,\n        size: BusyIndicatorSize.Medium,\n        style: {\n          backgroundColor: 'transparent',\n          width: '80px'\n        }\n      }));\n    }\n\n    switch (type) {\n      case FilterType.Default:\n        return /*#__PURE__*/React.createElement(Input, {\n          placeholder: placeholder,\n          onChange: onSelect,\n          style: {\n            width: '100%'\n          }\n        });\n\n      case FilterType.MultiSelect:\n        return /*#__PURE__*/React.createElement(MultiComboBox, {\n          onSelectionChange: onMultiCbChange\n        }, filterItems.map(function (item) {\n          return /*#__PURE__*/React.createElement(StandardListItem, {\n            \"data-key\": item.key,\n            key: item.key\n          }, item.text);\n        }));\n\n      case FilterType.Select:\n        return /*#__PURE__*/React.createElement(Select, {\n          onChange: onSelect,\n          style: {\n            width: '100%'\n          }\n        }, filterItems.map(function (item) {\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item.key,\n            \"data-key\": item.key\n          }, item.text);\n        }));\n\n      case FilterType.Custom:\n        return /*#__PURE__*/React.createElement(\"div\", null, React.Children.map(children, function (child) {\n          return React.cloneElement(child, {\n            // [changeEventName]: (event) => {\n            //   onSelect(event);\n            //   // @ts-ignore\n            //   if (child.props.hasOwnProperty(changeEventName)) {\n            //     // @ts-ignore\n            //     child.props[changeEventName](event);\n            //   }\n            // },\n            style: {\n              width: '100%'\n            }\n          });\n        }));\n    }\n  }, [valueParamName, changeEventName, filterItems, loading, type, children]);\n  var filterItemClasses = StyleClassHelper.of(classes.filterItem);\n  var passThroughProps = usePassThroughHtmlProps(props, ['onChange']);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: filterItemClasses.toString(),\n    style: style,\n    title: tooltip\n  }, passThroughProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.innerFilterItemContainer\n  }, /*#__PURE__*/React.createElement(Label, null, label), filterComponent));\n});\nFilterItem.defaultProps = {\n  placeholder: '',\n  renderText: function renderText(item) {\n    return item && item.text || '';\n  },\n  type: FilterType.Default,\n  filterItems: [],\n  label: '',\n  onChange: function onChange() {\n    return null;\n  },\n  loading: false\n};\nFilterItem.displayName = 'FilterItem';\nexport { FilterItem };","map":{"version":3,"sources":["../src/components/FilterItem/FilterItem.jss.ts","../src/components/FilterItem/index.tsx"],"names":["styles","filterItem","minWidth","height","marginRight","marginBottom","innerFilterItemContainer","display","flexDirection","justifyContent","loadingContainer","width","useStyles","createComponentStyles","name","FilterItem","forwardRef","filterItems","onChange","type","placeholder","children","loading","changeEventName","valueParamName","label","style","tooltip","classes","item","selectedKey","e","getItemByKey","enrichEventWithDetails","selectedItem","selectedItems","filterComponent","useMemo","BusyIndicatorSize","backgroundColor","FilterType","onMultiCbChange","key","filterItemClasses","StyleClassHelper","passThroughProps","usePassThroughHtmlProps","renderText"],"mappings":"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","sourcesContent":["const styles = {\n  filterItem: {\n    minWidth: '10rem',\n    height: 'fit-content',\n    marginRight: '1rem',\n    marginBottom: '1rem'\n  },\n  innerFilterItemContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start'\n  },\n  loadingContainer: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'center'\n  }\n};\n\nexport default styles;\n","import { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { BusyIndicator } from '@ui5/webcomponents-react/lib/BusyIndicator';\nimport { BusyIndicatorSize } from '@ui5/webcomponents-react/lib/BusyIndicatorSize';\nimport { FilterType } from '@ui5/webcomponents-react/lib/FilterType';\nimport { Input } from '@ui5/webcomponents-react/lib/Input';\nimport { Label } from '@ui5/webcomponents-react/lib/Label';\nimport { MultiComboBox } from '@ui5/webcomponents-react/lib/MultiComboBox';\nimport { Option } from '@ui5/webcomponents-react/lib/Option';\nimport { Select } from '@ui5/webcomponents-react/lib/Select';\nimport { StandardListItem } from '@ui5/webcomponents-react/lib/StandardListItem';\nimport React, { FC, forwardRef, ReactNode, RefObject, useMemo } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport styles from './FilterItem.jss';\n\nexport interface FilterItemPropTypes extends CommonProps {\n  placeholder?: string;\n  renderText?: (item?: any) => JSX.Element;\n  type?: FilterType;\n  label?: string;\n  filterItems?: any[];\n  onChange?: (event: CustomEvent<{ selectedItem?: unknown; selectedItems?: unknown }>) => void;\n  loading?: boolean;\n  children?: ReactNode;\n  valueParamName?: string;\n  changeEventName?: string;\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'FilterItem' });\n\n/**\n * <code>import { FilterItem } from '@ui5/webcomponents-react/lib/FilterItem';</code>\n */\nconst FilterItem: FC<FilterItemPropTypes> = forwardRef((props: FilterItemPropTypes, ref: RefObject<HTMLDivElement>) => {\n  const {\n    filterItems,\n    onChange,\n    type,\n    placeholder,\n    children,\n    loading,\n    changeEventName,\n    valueParamName,\n    label,\n    style,\n    tooltip\n  } = props as FilterItemPropTypes;\n  const classes = useStyles();\n\n  function getItemByKey(key) {\n    return filterItems.filter((item) => item.key === key)[0];\n  }\n\n  function onSelect(e) {\n    const selectedKey = e.detail.selectedOption.getAttribute('data-key');\n    const item = getItemByKey(selectedKey) || filterItems[0];\n    onChange(enrichEventWithDetails(e, { selectedItem: item }));\n  }\n\n  function onMultiCbChange(e) {\n    const selectedItems = e.detail.items;\n    onChange(\n      enrichEventWithDetails(e, {\n        selectedItems: selectedItems.map((item) => {\n          return getItemByKey(item.getAttribute('data-key'));\n        })\n      })\n    );\n  }\n\n  const filterComponent = useMemo(() => {\n    if (loading) {\n      return (\n        <div className={classes.loadingContainer}>\n          <BusyIndicator\n            active\n            size={BusyIndicatorSize.Medium}\n            style={{ backgroundColor: 'transparent', width: '80px' }}\n          />\n        </div>\n      );\n    }\n\n    switch (type) {\n      case FilterType.Default:\n        return <Input placeholder={placeholder} onChange={onSelect} style={{ width: '100%' }} />;\n      case FilterType.MultiSelect:\n        return (\n          <MultiComboBox onSelectionChange={onMultiCbChange}>\n            {filterItems.map((item) => (\n              <StandardListItem data-key={item.key} key={item.key}>\n                {item.text}\n              </StandardListItem>\n            ))}\n          </MultiComboBox>\n        );\n      case FilterType.Select:\n        return (\n          <Select onChange={onSelect} style={{ width: '100%' }}>\n            {filterItems.map((item) => (\n              <Option key={item.key} data-key={item.key}>\n                {item.text}\n              </Option>\n            ))}\n          </Select>\n        );\n      case FilterType.Custom:\n        return (\n          <div>\n            {React.Children.map(children, (child) => {\n              return React.cloneElement(child as React.ReactElement<any>, {\n                // [changeEventName]: (event) => {\n                //   onSelect(event);\n                //   // @ts-ignore\n                //   if (child.props.hasOwnProperty(changeEventName)) {\n                //     // @ts-ignore\n                //     child.props[changeEventName](event);\n                //   }\n                // },\n                style: { width: '100%' }\n              });\n            })}\n          </div>\n        );\n    }\n  }, [valueParamName, changeEventName, filterItems, loading, type, children]);\n\n  const filterItemClasses = StyleClassHelper.of(classes.filterItem);\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onChange']);\n\n  return (\n    <div ref={ref} className={filterItemClasses.toString()} style={style} title={tooltip} {...passThroughProps}>\n      <div className={classes.innerFilterItemContainer}>\n        <Label>{label}</Label>\n        {filterComponent}\n      </div>\n    </div>\n  );\n});\n\nFilterItem.defaultProps = {\n  placeholder: '',\n  renderText: (item) => (item && item.text) || '',\n  type: FilterType.Default,\n  filterItems: [],\n  label: '',\n  onChange: () => null,\n  loading: false\n};\n\nFilterItem.displayName = 'FilterItem';\n\nexport { FilterItem };\n"]},"metadata":{},"sourceType":"module"}