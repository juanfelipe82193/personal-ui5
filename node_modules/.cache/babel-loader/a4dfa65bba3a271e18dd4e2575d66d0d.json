{"ast":null,"code":"import merge from \"./thirdparty/merge.js\";\nimport boot from \"./boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport RenderScheduler from \"./RenderScheduler.js\";\nimport { registerTag, isTagRegistered } from \"./CustomElementsRegistry.js\";\nimport DOMObserver from \"./compatibility/DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport createComponentStyleTag from \"./theming/createComponentStyleTag.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport Integer from \"./types/Integer.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\nconst metadata = {\n  events: {\n    _propertyChange: {}\n  }\n};\nlet autoId = 0;\nconst elementTimeouts = new Map();\nconst GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.UI5Element\n * @extends HTMLElement\n * @public\n */\n\nclass UI5Element extends HTMLElement {\n  constructor() {\n    super();\n\n    this._generateId();\n\n    this._initializeState();\n\n    this._upgradeAllProperties();\n\n    this._initializeContainers();\n\n    this._upToDate = false;\n    let deferredResolve;\n    this._domRefReadyPromise = new Promise(resolve => {\n      deferredResolve = resolve;\n    });\n    this._domRefReadyPromise._deferredResolve = deferredResolve;\n    this._monitoredChildProps = new Map();\n    this._firePropertyChange = false;\n  }\n  /**\n   * @private\n   */\n\n\n  _generateId() {\n    this._id = `ui5wc_${++autoId}`;\n  }\n  /**\n   * @private\n   */\n\n\n  _initializeContainers() {\n    const needsShadowDOM = this.constructor._needsShadowDOM();\n\n    const needsStaticArea = this.constructor._needsStaticArea(); // Init Shadow Root\n\n\n    if (needsShadowDOM) {\n      this.attachShadow({\n        mode: \"open\"\n      }); // IE11, Edge\n\n      if (window.ShadyDOM) {\n        createComponentStyleTag(this.constructor);\n      } // Chrome\n\n\n      if (document.adoptedStyleSheets) {\n        const style = getConstructableStyle(this.constructor);\n        this.shadowRoot.adoptedStyleSheets = [style];\n      }\n    } // Init StaticAreaItem only if needed\n\n\n    if (needsStaticArea) {\n      this.staticAreaItem = new StaticAreaItem(this);\n    }\n  }\n  /**\n   * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n   * @private\n   */\n\n\n  async connectedCallback() {\n    const needsShadowDOM = this.constructor._needsShadowDOM();\n\n    const slotsAreManaged = this.constructor.getMetadata().slotsAreManaged(); // Render the Shadow DOM\n\n    if (needsShadowDOM) {\n      if (slotsAreManaged) {\n        // always register the observer before yielding control to the main thread (await)\n        this._startObservingDOMChildren();\n\n        await this._processChildren();\n      }\n\n      if (!this.shadowRoot) {\n        // Workaround for Firefox74 bug\n        await Promise.resolve();\n      }\n\n      await RenderScheduler.renderImmediately(this);\n\n      this._domRefReadyPromise._deferredResolve();\n\n      if (typeof this.onEnterDOM === \"function\") {\n        this.onEnterDOM();\n      }\n    }\n  }\n  /**\n   * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n   * @private\n   */\n\n\n  disconnectedCallback() {\n    const needsShadowDOM = this.constructor._needsShadowDOM();\n\n    const needsStaticArea = this.constructor._needsStaticArea();\n\n    const slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n    if (needsShadowDOM) {\n      if (slotsAreManaged) {\n        this._stopObservingDOMChildren();\n      }\n\n      if (typeof this.onExitDOM === \"function\") {\n        this.onExitDOM();\n      }\n    }\n\n    if (needsStaticArea) {\n      this.staticAreaItem._removeFragmentFromStaticArea();\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _startObservingDOMChildren() {\n    const shouldObserveChildren = this.constructor.getMetadata().hasSlots();\n\n    if (!shouldObserveChildren) {\n      return;\n    }\n\n    const canSlotText = this.constructor.getMetadata().canSlotText();\n    const mutationObserverOptions = {\n      childList: true,\n      subtree: canSlotText,\n      characterData: true\n    };\n    DOMObserver.observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n  }\n  /**\n   * @private\n   */\n\n\n  _stopObservingDOMChildren() {\n    DOMObserver.unobserveDOMNode(this);\n  }\n  /**\n   * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n   * @private\n   */\n\n\n  async _processChildren() {\n    const hasSlots = this.constructor.getMetadata().hasSlots();\n\n    if (hasSlots) {\n      await this._updateSlots();\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  async _updateSlots() {\n    const slotsMap = this.constructor.getMetadata().getSlots();\n    const canSlotText = this.constructor.getMetadata().canSlotText();\n    const domChildren = Array.from(canSlotText ? this.childNodes : this.children); // Init the _state object based on the supported slots\n\n    for (const [slotName, slotData] of Object.entries(slotsMap)) {\n      // eslint-disable-line\n      this._clearSlot(slotName, slotData);\n    }\n\n    const autoIncrementMap = new Map();\n    const slottedChildrenMap = new Map();\n    const allChildrenUpgraded = domChildren.map(async (child, idx) => {\n      // Determine the type of the child (mainly by the slot attribute)\n      const slotName = this.constructor._getSlotName(child);\n\n      const slotData = slotsMap[slotName]; // Check if the slotName is supported\n\n      if (slotData === undefined) {\n        const validValues = Object.keys(slotsMap).join(\", \");\n        console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n\n        return;\n      } // For children that need individual slots, calculate them\n\n\n      if (slotData.individualSlots) {\n        const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n        autoIncrementMap.set(slotName, nextIndex);\n        child._individualSlot = `${slotName}-${nextIndex}`;\n      } // Await for not-yet-defined custom elements\n\n\n      if (child instanceof HTMLElement) {\n        const localName = child.localName;\n        const isCustomElement = localName.includes(\"-\");\n\n        if (isCustomElement) {\n          const isDefined = window.customElements.get(localName);\n\n          if (!isDefined) {\n            const whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n\n            let timeoutPromise = elementTimeouts.get(localName);\n\n            if (!timeoutPromise) {\n              timeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n              elementTimeouts.set(localName, timeoutPromise);\n            }\n\n            await Promise.race([whenDefinedPromise, timeoutPromise]);\n          }\n\n          window.customElements.upgrade(child);\n        }\n      }\n\n      child = this.constructor.getMetadata().constructor.validateSlotValue(child, slotData);\n\n      if (child.isUI5Element && slotData.listenFor) {\n        this._attachChildPropertyUpdated(child, slotData.listenFor);\n      }\n\n      const propertyName = slotData.propertyName || slotName;\n\n      if (slottedChildrenMap.has(propertyName)) {\n        slottedChildrenMap.get(propertyName).push({\n          child,\n          idx\n        });\n      } else {\n        slottedChildrenMap.set(propertyName, [{\n          child,\n          idx\n        }]);\n      }\n    });\n    await Promise.all(allChildrenUpgraded); // Distribute the child in the _state object, keeping the Light DOM order,\n    // not the order elements are defined.\n\n    slottedChildrenMap.forEach((children, slot) => {\n      this._state[slot] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n    });\n\n    this._invalidate(\"slots\");\n  }\n  /**\n   * Removes all children from the slot and detaches listeners, if any\n   * @private\n   */\n\n\n  _clearSlot(slotName, slotData) {\n    const propertyName = slotData.propertyName || slotName;\n    let children = this._state[propertyName];\n\n    if (!Array.isArray(children)) {\n      children = [children];\n    }\n\n    children.forEach(child => {\n      if (child && child.isUI5Element) {\n        this._detachChildPropertyUpdated(child);\n      }\n    });\n    this._state[propertyName] = [];\n\n    this._invalidate(propertyName, []);\n  }\n  /**\n   * Do not override this method in derivatives of UI5Element\n   * @private\n   */\n\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    const properties = this.constructor.getMetadata().getProperties();\n    const realName = name.replace(/^ui5-/, \"\");\n    const nameInCamelCase = kebabToCamelCase(realName);\n\n    if (properties.hasOwnProperty(nameInCamelCase)) {\n      // eslint-disable-line\n      const propertyTypeClass = properties[nameInCamelCase].type;\n\n      if (propertyTypeClass === Boolean) {\n        newValue = newValue !== null;\n      }\n\n      if (propertyTypeClass === Integer) {\n        newValue = parseInt(newValue);\n      }\n\n      this[nameInCamelCase] = newValue;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _updateAttribute(name, newValue) {\n    if (!this.constructor.getMetadata().hasAttribute(name)) {\n      return;\n    }\n\n    if (typeof newValue === \"object\") {\n      return;\n    }\n\n    const attrName = camelToKebabCase(name);\n    const attrValue = this.getAttribute(attrName);\n\n    if (typeof newValue === \"boolean\") {\n      if (newValue === true && attrValue === null) {\n        this.setAttribute(attrName, \"\");\n      } else if (newValue === false && attrValue !== null) {\n        this.removeAttribute(attrName);\n      }\n    } else if (attrValue !== newValue) {\n      this.setAttribute(attrName, newValue);\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _upgradeProperty(prop) {\n    if (this.hasOwnProperty(prop)) {\n      // eslint-disable-line\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _upgradeAllProperties() {\n    const allProps = this.constructor.getMetadata().getPropertiesList();\n    allProps.forEach(this._upgradeProperty, this);\n  }\n  /**\n   * @private\n   */\n\n\n  _initializeState() {\n    const defaultState = this.constructor._getDefaultState();\n\n    this._state = Object.assign({}, defaultState);\n  }\n  /**\n   * @private\n   */\n\n\n  _attachChildPropertyUpdated(child, listenFor) {\n    const childMetadata = child.constructor.getMetadata(),\n          slotName = this.constructor._getSlotName(child),\n          // all slotted children have the same configuration\n    childProperties = childMetadata.getProperties();\n\n    let observedProps = [],\n        notObservedProps = [];\n\n    if (Array.isArray(listenFor)) {\n      observedProps = listenFor;\n    } else {\n      observedProps = Array.isArray(listenFor.props) ? listenFor.props : Object.keys(childProperties);\n      notObservedProps = Array.isArray(listenFor.exclude) ? listenFor.exclude : [];\n    }\n\n    if (!this._monitoredChildProps.has(slotName)) {\n      this._monitoredChildProps.set(slotName, {\n        observedProps,\n        notObservedProps\n      });\n    }\n\n    child.addEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n    child._firePropertyChange = true;\n  }\n  /**\n   * @private\n   */\n\n\n  _detachChildPropertyUpdated(child) {\n    child.removeEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n    child._firePropertyChange = false;\n  }\n  /**\n   * @private\n   */\n\n\n  _propertyChange(name, value) {\n    this._updateAttribute(name, value);\n\n    if (this._firePropertyChange) {\n      this.dispatchEvent(new CustomEvent(\"_propertyChange\", {\n        detail: {\n          name,\n          newValue: value\n        },\n        composed: false,\n        bubbles: true\n      }));\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _invalidateParentOnPropertyUpdate(prop) {\n    // The web component to be invalidated\n    const parentNode = this.parentNode;\n\n    if (!parentNode) {\n      return;\n    }\n\n    const slotName = parentNode.constructor._getSlotName(this);\n\n    const propsMetadata = parentNode._monitoredChildProps.get(slotName);\n\n    if (!propsMetadata) {\n      return;\n    }\n\n    const {\n      observedProps,\n      notObservedProps\n    } = propsMetadata;\n\n    if (observedProps.includes(prop.detail.name) && !notObservedProps.includes(prop.detail.name)) {\n      parentNode._invalidate(\"_parent_\", this);\n    }\n  }\n  /**\n   * Asynchronously re-renders an already rendered web component\n   * @private\n   */\n\n\n  _invalidate() {\n    if (!this._upToDate) {\n      // console.log(\"already invalidated\", this, ...arguments);\n      return;\n    }\n\n    if (this.getDomRef() && !this._suppressInvalidation) {\n      this._upToDate = false; // console.log(\"INVAL\", this, ...arguments);\n\n      RenderScheduler.renderDeferred(this);\n    }\n  }\n  /**\n   * Do not call this method directly, only intended to be called by RenderScheduler.js\n   * @protected\n   */\n\n\n  _render() {\n    const hasIndividualSlots = this.constructor.getMetadata().hasIndividualSlots(); // suppress invalidation to prevent state changes scheduling another rendering\n\n    this._suppressInvalidation = true;\n\n    if (typeof this.onBeforeRendering === \"function\") {\n      this.onBeforeRendering();\n    } // Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n\n\n    if (this._onComponentStateFinalized) {\n      this._onComponentStateFinalized();\n    } // resume normal invalidation handling\n\n\n    delete this._suppressInvalidation; // Update the shadow root with the render result\n    // console.log(this.getDomRef() ? \"RE-RENDER\" : \"FIRST RENDER\", this);\n\n    this._upToDate = true;\n\n    this._updateShadowRoot();\n\n    if (this._shouldUpdateFragment()) {\n      this.staticAreaItem._updateFragment(this);\n    } // Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n\n\n    if (hasIndividualSlots) {\n      this._assignIndividualSlotsToChildren();\n    } // Call the onAfterRendering hook\n\n\n    if (typeof this.onAfterRendering === \"function\") {\n      this.onAfterRendering();\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  _updateShadowRoot() {\n    if (!this.constructor._needsShadowDOM()) {\n      return;\n    }\n\n    let styleToPrepend;\n    const renderResult = this.constructor.template(this);\n\n    if (!document.adoptedStyleSheets && !window.ShadyDOM) {\n      styleToPrepend = getEffectiveStyle(this.constructor);\n    }\n\n    this.constructor.render(renderResult, this.shadowRoot, styleToPrepend, {\n      eventContext: this\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  _assignIndividualSlotsToChildren() {\n    const domChildren = Array.from(this.children);\n    domChildren.forEach(child => {\n      if (child._individualSlot) {\n        child.setAttribute(\"slot\", child._individualSlot);\n      }\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  _waitForDomRef() {\n    return this._domRefReadyPromise;\n  }\n  /**\n   * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n   * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n   * @public\n   */\n\n\n  getDomRef() {\n    if (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n      return;\n    }\n\n    return this.shadowRoot.children.length === 1 ? this.shadowRoot.children[0] : this.shadowRoot.children[1];\n  }\n  /**\n   * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n   * This is the element that will receive the focus by default.\n   * @public\n   */\n\n\n  getFocusDomRef() {\n    const domRef = this.getDomRef();\n\n    if (domRef) {\n      const focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n      return focusRef || domRef;\n    }\n  }\n  /**\n   * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n   * @public\n   */\n\n\n  async focus() {\n    await this._waitForDomRef();\n    const focusDomRef = this.getFocusDomRef();\n\n    if (focusDomRef && typeof focusDomRef.focus === \"function\") {\n      focusDomRef.focus();\n    }\n  }\n  /**\n   *\n   * @public\n   * @param name - name of the event\n   * @param data - additional data for the event\n   * @param cancelable - true, if the user can call preventDefault on the event object\n   * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n   */\n\n\n  fireEvent(name, data, cancelable) {\n    let compatEventResult = true; // Initialized to true, because if the event is not fired at all, it should be considered \"not-prevented\"\n\n    const noConflictEvent = new CustomEvent(`ui5-${name}`, {\n      detail: data,\n      composed: false,\n      bubbles: true,\n      cancelable\n    }); // This will be false if the compat event is prevented\n\n    compatEventResult = this.dispatchEvent(noConflictEvent);\n\n    if (skipOriginalEvent(name)) {\n      return compatEventResult;\n    }\n\n    const customEvent = new CustomEvent(name, {\n      detail: data,\n      composed: false,\n      bubbles: true,\n      cancelable\n    }); // This will be false if the normal event is prevented\n\n    const normalEventResult = this.dispatchEvent(customEvent); // Return false if any of the two events was prevented (its result was false).\n\n    return normalEventResult && compatEventResult;\n  }\n  /**\n   * Returns the actual children, associated with a slot.\n   * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n   * @public\n   */\n\n\n  getSlottedNodes(slotName) {\n    const reducer = (acc, curr) => {\n      if (curr.localName !== \"slot\") {\n        return acc.concat([curr]);\n      }\n\n      return acc.concat(curr.assignedNodes({\n        flatten: true\n      }).filter(item => item instanceof HTMLElement));\n    };\n\n    return this[slotName].reduce(reducer, []);\n  }\n\n  get isCompact() {\n    return getComputedStyle(this).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR) === \"compact\";\n  }\n\n  updateStaticAreaItemContentDensity() {\n    if (this.staticAreaItem) {\n      this.staticAreaItem._updateContentDensity(this.isCompact);\n    }\n  }\n  /**\n   * Used to duck-type UI5 elements without using instanceof\n   * @returns {boolean}\n   * @public\n   */\n\n\n  get isUI5Element() {\n    return true;\n  }\n  /**\n   * Do not override this method in derivatives of UI5Element, use metadata properties instead\n   * @private\n   */\n\n\n  static get observedAttributes() {\n    return this.getMetadata().getAttributesList();\n  }\n  /**\n   * @private\n   */\n\n\n  static _getSlotName(child) {\n    // Text nodes can only go to the default slot\n    if (!(child instanceof HTMLElement)) {\n      return \"default\";\n    } // Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n\n\n    const slot = child.getAttribute(\"slot\");\n\n    if (slot) {\n      const match = slot.match(/^(.+?)-\\d+$/);\n      return match ? match[1] : slot;\n    } // Use default slot as a fallback\n\n\n    return \"default\";\n  }\n  /**\n   * @private\n   */\n\n\n  static _needsShadowDOM() {\n    return !!this.template;\n  }\n\n  _shouldUpdateFragment() {\n    return this.constructor._needsStaticArea() && this.staticAreaItem.isRendered();\n  }\n  /**\n   * @private\n   */\n\n\n  static _needsStaticArea() {\n    return typeof this.staticAreaTemplate === \"function\";\n  }\n  /**\n   * @public\n   */\n\n\n  getStaticAreaItemDomRef() {\n    return this.staticAreaItem.getDomRef();\n  }\n  /**\n   * @private\n   */\n\n\n  static _getDefaultState() {\n    if (this._defaultState) {\n      return this._defaultState;\n    }\n\n    const MetadataClass = this.getMetadata();\n    const defaultState = {};\n    const slotsAreManaged = MetadataClass.slotsAreManaged(); // Initialize properties\n\n    const props = MetadataClass.getProperties();\n\n    for (const propName in props) {\n      // eslint-disable-line\n      const propType = props[propName].type;\n      const propDefaultValue = props[propName].defaultValue;\n\n      if (propType === Boolean) {\n        defaultState[propName] = false;\n\n        if (propDefaultValue !== undefined) {\n          console.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n        }\n      } else if (props[propName].multiple) {\n        defaultState[propName] = [];\n      } else if (propType === Object) {\n        defaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n      } else if (propType === String) {\n        defaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n      } else {\n        defaultState[propName] = propDefaultValue;\n      }\n    } // Initialize slots\n\n\n    if (slotsAreManaged) {\n      const slots = MetadataClass.getSlots();\n\n      for (const [slotName, slotData] of Object.entries(slots)) {\n        // eslint-disable-line\n        const propertyName = slotData.propertyName || slotName;\n        defaultState[propertyName] = [];\n      }\n    }\n\n    this._defaultState = defaultState;\n    return defaultState;\n  }\n  /**\n   * @private\n   */\n\n\n  static _generateAccessors() {\n    const proto = this.prototype;\n    const slotsAreManaged = this.getMetadata().slotsAreManaged(); // Properties\n\n    const properties = this.getMetadata().getProperties();\n\n    for (const [prop, propData] of Object.entries(properties)) {\n      // eslint-disable-line\n      if (!isValidPropertyName(prop)) {\n        throw new Error(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n      }\n\n      if (propData.type === Boolean && propData.defaultValue) {\n        throw new Error(`Cannot set a default value for property \"${prop}\". All booleans are false by default.`);\n      }\n\n      if (propData.type === Array) {\n        throw new Error(`Wrong type for property \"${prop}\". Properties cannot be of type Array - use \"multiple: true\" and set \"type\" to the single value type, such as \"String\", \"Object\", etc...`);\n      }\n\n      if (propData.type === Object && propData.defaultValue) {\n        throw new Error(`Cannot set a default value for property \"${prop}\". All properties of type \"Object\" are empty objects by default.`);\n      }\n\n      if (propData.multiple && propData.defaultValue) {\n        throw new Error(`Cannot set a default value for property \"${prop}\". All multiple properties are empty arrays by default.`);\n      }\n\n      Object.defineProperty(proto, prop, {\n        get() {\n          if (this._state[prop] !== undefined) {\n            return this._state[prop];\n          }\n\n          const propDefaultValue = propData.defaultValue;\n\n          if (propData.type === Boolean) {\n            return false;\n          } else if (propData.type === String) {\n            // eslint-disable-line\n            return propDefaultValue;\n          } else if (propData.multiple) {\n            // eslint-disable-line\n            return [];\n          } else {\n            return propDefaultValue;\n          }\n        },\n\n        set(value) {\n          value = this.constructor.getMetadata().constructor.validatePropertyValue(value, propData);\n          const oldState = this._state[prop];\n\n          if (oldState !== value) {\n            this._state[prop] = value;\n\n            this._invalidate(prop, value);\n\n            this._propertyChange(prop, value);\n          }\n        }\n\n      });\n    } // Slots\n\n\n    if (slotsAreManaged) {\n      const slots = this.getMetadata().getSlots();\n\n      for (const [slotName, slotData] of Object.entries(slots)) {\n        // eslint-disable-line\n        if (!isValidPropertyName(slotName)) {\n          throw new Error(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n        }\n\n        const propertyName = slotData.propertyName || slotName;\n        Object.defineProperty(proto, propertyName, {\n          get() {\n            if (this._state[propertyName] !== undefined) {\n              return this._state[propertyName];\n            }\n\n            return [];\n          },\n\n          set() {\n            throw new Error(\"Cannot set slots directly, use the DOM APIs\");\n          }\n\n        });\n      }\n    }\n  }\n  /**\n   * Returns the metadata object for this UI5 Web Component Class\n   * @protected\n   */\n\n\n  static get metadata() {\n    return metadata;\n  }\n  /**\n   * Returns the CSS for this UI5 Web Component Class\n   * @protected\n   */\n\n\n  static get styles() {\n    return \"\";\n  }\n  /**\n   * Returns the Static Area CSS for this UI5 Web Component Class\n   * @protected\n   */\n\n\n  static get staticAreaStyles() {\n    return \"\";\n  }\n  /**\n   * Registers a UI5 Web Component in the browser window object\n   * @public\n   * @returns {Promise<UI5Element>}\n   */\n\n\n  static async define() {\n    await boot();\n\n    if (this.onDefine) {\n      await this.onDefine();\n    }\n\n    const tag = this.getMetadata().getTag();\n    const definedLocally = isTagRegistered(tag);\n    const definedGlobally = customElements.get(tag);\n\n    if (definedGlobally && !definedLocally) {\n      console.warn(`Skipping definition of tag ${tag}, because it was already defined by another instance of ui5-webcomponents.`); // eslint-disable-line\n    } else if (!definedGlobally) {\n      this._generateAccessors();\n\n      registerTag(tag);\n      window.customElements.define(tag, this);\n    }\n\n    return this;\n  }\n  /**\n   * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n   * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n   * @public\n   * @returns {UI5ElementMetadata}\n   */\n\n\n  static getMetadata() {\n    if (this.hasOwnProperty(\"_metadata\")) {\n      // eslint-disable-line\n      return this._metadata;\n    }\n\n    const metadataObjects = [this.metadata];\n    let klass = this; // eslint-disable-line\n\n    while (klass !== UI5Element) {\n      klass = Object.getPrototypeOf(klass);\n      metadataObjects.unshift(klass.metadata);\n    }\n\n    const mergedMetadata = merge({}, ...metadataObjects);\n    this._metadata = new UI5ElementMetadata(mergedMetadata);\n    return this._metadata;\n  }\n\n}\n\nexport default UI5Element;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/UI5Element.js"],"names":["merge","boot","UI5ElementMetadata","StaticAreaItem","RenderScheduler","registerTag","isTagRegistered","DOMObserver","skipOriginalEvent","getConstructableStyle","createComponentStyleTag","getEffectiveStyle","Integer","kebabToCamelCase","camelToKebabCase","isValidPropertyName","metadata","events","_propertyChange","autoId","elementTimeouts","Map","GLOBAL_CONTENT_DENSITY_CSS_VAR","UI5Element","HTMLElement","constructor","_generateId","_initializeState","_upgradeAllProperties","_initializeContainers","_upToDate","deferredResolve","_domRefReadyPromise","Promise","resolve","_deferredResolve","_monitoredChildProps","_firePropertyChange","_id","needsShadowDOM","_needsShadowDOM","needsStaticArea","_needsStaticArea","attachShadow","mode","window","ShadyDOM","document","adoptedStyleSheets","style","shadowRoot","staticAreaItem","connectedCallback","slotsAreManaged","getMetadata","_startObservingDOMChildren","_processChildren","renderImmediately","onEnterDOM","disconnectedCallback","_stopObservingDOMChildren","onExitDOM","_removeFragmentFromStaticArea","shouldObserveChildren","hasSlots","canSlotText","mutationObserverOptions","childList","subtree","characterData","observeDOMNode","bind","unobserveDOMNode","_updateSlots","slotsMap","getSlots","domChildren","Array","from","childNodes","children","slotName","slotData","Object","entries","_clearSlot","autoIncrementMap","slottedChildrenMap","allChildrenUpgraded","map","child","idx","_getSlotName","undefined","validValues","keys","join","console","warn","individualSlots","nextIndex","get","set","_individualSlot","localName","isCustomElement","includes","isDefined","customElements","whenDefinedPromise","whenDefined","timeoutPromise","setTimeout","race","upgrade","validateSlotValue","isUI5Element","listenFor","_attachChildPropertyUpdated","propertyName","has","push","all","forEach","slot","_state","sort","a","b","_","_invalidate","isArray","_detachChildPropertyUpdated","attributeChangedCallback","name","oldValue","newValue","properties","getProperties","realName","replace","nameInCamelCase","hasOwnProperty","propertyTypeClass","type","Boolean","parseInt","_updateAttribute","hasAttribute","attrName","attrValue","getAttribute","setAttribute","removeAttribute","_upgradeProperty","prop","value","allProps","getPropertiesList","defaultState","_getDefaultState","assign","childMetadata","childProperties","observedProps","notObservedProps","props","exclude","addEventListener","_invalidateParentOnPropertyUpdate","removeEventListener","dispatchEvent","CustomEvent","detail","composed","bubbles","parentNode","propsMetadata","getDomRef","_suppressInvalidation","renderDeferred","_render","hasIndividualSlots","onBeforeRendering","_onComponentStateFinalized","_updateShadowRoot","_shouldUpdateFragment","_updateFragment","_assignIndividualSlotsToChildren","onAfterRendering","styleToPrepend","renderResult","template","render","eventContext","_waitForDomRef","length","getFocusDomRef","domRef","focusRef","querySelector","focus","focusDomRef","fireEvent","data","cancelable","compatEventResult","noConflictEvent","customEvent","normalEventResult","getSlottedNodes","reducer","acc","curr","concat","assignedNodes","flatten","filter","item","reduce","isCompact","getComputedStyle","getPropertyValue","updateStaticAreaItemContentDensity","_updateContentDensity","observedAttributes","getAttributesList","match","isRendered","staticAreaTemplate","getStaticAreaItemDomRef","_defaultState","MetadataClass","propName","propType","propDefaultValue","defaultValue","multiple","String","slots","_generateAccessors","proto","prototype","propData","Error","defineProperty","validatePropertyValue","oldState","styles","staticAreaStyles","define","onDefine","tag","getTag","definedLocally","definedGlobally","_metadata","metadataObjects","klass","getPrototypeOf","unshift","mergedMetadata"],"mappings":"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","sourcesContent":["import merge from \"./thirdparty/merge.js\";\nimport boot from \"./boot.js\";\nimport UI5ElementMetadata from \"./UI5ElementMetadata.js\";\nimport StaticAreaItem from \"./StaticAreaItem.js\";\nimport RenderScheduler from \"./RenderScheduler.js\";\nimport { registerTag, isTagRegistered } from \"./CustomElementsRegistry.js\";\nimport DOMObserver from \"./compatibility/DOMObserver.js\";\nimport { skipOriginalEvent } from \"./config/NoConflict.js\";\nimport getConstructableStyle from \"./theming/getConstructableStyle.js\";\nimport createComponentStyleTag from \"./theming/createComponentStyleTag.js\";\nimport getEffectiveStyle from \"./theming/getEffectiveStyle.js\";\nimport Integer from \"./types/Integer.js\";\nimport { kebabToCamelCase, camelToKebabCase } from \"./util/StringHelper.js\";\nimport isValidPropertyName from \"./util/isValidPropertyName.js\";\n\nconst metadata = {\n\tevents: {\n\t\t_propertyChange: {},\n\t},\n};\n\nlet autoId = 0;\n\nconst elementTimeouts = new Map();\n\nconst GLOBAL_CONTENT_DENSITY_CSS_VAR = \"--_ui5_content_density\";\n/**\n * Base class for all UI5 Web Components\n *\n * @class\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.base.UI5Element\n * @extends HTMLElement\n * @public\n */\nclass UI5Element extends HTMLElement {\n\tconstructor() {\n\t\tsuper();\n\t\tthis._generateId();\n\t\tthis._initializeState();\n\t\tthis._upgradeAllProperties();\n\t\tthis._initializeContainers();\n\t\tthis._upToDate = false;\n\n\t\tlet deferredResolve;\n\t\tthis._domRefReadyPromise = new Promise(resolve => {\n\t\t\tdeferredResolve = resolve;\n\t\t});\n\t\tthis._domRefReadyPromise._deferredResolve = deferredResolve;\n\n\t\tthis._monitoredChildProps = new Map();\n\t\tthis._firePropertyChange = false;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_generateId() {\n\t\tthis._id = `ui5wc_${++autoId}`;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_initializeContainers() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst needsStaticArea = this.constructor._needsStaticArea();\n\n\t\t// Init Shadow Root\n\t\tif (needsShadowDOM) {\n\t\t\tthis.attachShadow({ mode: \"open\" });\n\n\t\t\t// IE11, Edge\n\t\t\tif (window.ShadyDOM) {\n\t\t\t\tcreateComponentStyleTag(this.constructor);\n\t\t\t}\n\n\t\t\t// Chrome\n\t\t\tif (document.adoptedStyleSheets) {\n\t\t\t\tconst style = getConstructableStyle(this.constructor);\n\t\t\t\tthis.shadowRoot.adoptedStyleSheets = [style];\n\t\t\t}\n\t\t}\n\n\t\t// Init StaticAreaItem only if needed\n\t\tif (needsStaticArea) {\n\t\t\tthis.staticAreaItem = new StaticAreaItem(this);\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onEnterDOM\" only\n\t * @private\n\t */\n\tasync connectedCallback() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n\t\t// Render the Shadow DOM\n\t\tif (needsShadowDOM) {\n\t\t\tif (slotsAreManaged) {\n\t\t\t\t// always register the observer before yielding control to the main thread (await)\n\t\t\t\tthis._startObservingDOMChildren();\n\t\t\t\tawait this._processChildren();\n\t\t\t}\n\n\t\t\tif (!this.shadowRoot) { // Workaround for Firefox74 bug\n\t\t\t\tawait Promise.resolve();\n\t\t\t}\n\n\t\t\tawait RenderScheduler.renderImmediately(this);\n\t\t\tthis._domRefReadyPromise._deferredResolve();\n\t\t\tif (typeof this.onEnterDOM === \"function\") {\n\t\t\t\tthis.onEnterDOM();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method from derivatives of UI5Element, use \"onExitDOM\" only\n\t * @private\n\t */\n\tdisconnectedCallback() {\n\t\tconst needsShadowDOM = this.constructor._needsShadowDOM();\n\t\tconst needsStaticArea = this.constructor._needsStaticArea();\n\t\tconst slotsAreManaged = this.constructor.getMetadata().slotsAreManaged();\n\n\t\tif (needsShadowDOM) {\n\t\t\tif (slotsAreManaged) {\n\t\t\t\tthis._stopObservingDOMChildren();\n\t\t\t}\n\n\t\t\tif (typeof this.onExitDOM === \"function\") {\n\t\t\t\tthis.onExitDOM();\n\t\t\t}\n\t\t}\n\n\t\tif (needsStaticArea) {\n\t\t\tthis.staticAreaItem._removeFragmentFromStaticArea();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_startObservingDOMChildren() {\n\t\tconst shouldObserveChildren = this.constructor.getMetadata().hasSlots();\n\t\tif (!shouldObserveChildren) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst canSlotText = this.constructor.getMetadata().canSlotText();\n\t\tconst mutationObserverOptions = {\n\t\t\tchildList: true,\n\t\t\tsubtree: canSlotText,\n\t\t\tcharacterData: true,\n\t\t};\n\t\tDOMObserver.observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_stopObservingDOMChildren() {\n\t\tDOMObserver.unobserveDOMNode(this);\n\t}\n\n\t/**\n\t * Note: this method is also manually called by \"compatibility/patchNodeValue.js\"\n\t * @private\n\t */\n\tasync _processChildren() {\n\t\tconst hasSlots = this.constructor.getMetadata().hasSlots();\n\t\tif (hasSlots) {\n\t\t\tawait this._updateSlots();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tasync _updateSlots() {\n\t\tconst slotsMap = this.constructor.getMetadata().getSlots();\n\t\tconst canSlotText = this.constructor.getMetadata().canSlotText();\n\t\tconst domChildren = Array.from(canSlotText ? this.childNodes : this.children);\n\n\t\t// Init the _state object based on the supported slots\n\t\tfor (const [slotName, slotData] of Object.entries(slotsMap)) { // eslint-disable-line\n\t\t\tthis._clearSlot(slotName, slotData);\n\t\t}\n\n\t\tconst autoIncrementMap = new Map();\n\t\tconst slottedChildrenMap = new Map();\n\n\t\tconst allChildrenUpgraded = domChildren.map(async (child, idx) => {\n\t\t\t// Determine the type of the child (mainly by the slot attribute)\n\t\t\tconst slotName = this.constructor._getSlotName(child);\n\t\t\tconst slotData = slotsMap[slotName];\n\n\t\t\t// Check if the slotName is supported\n\t\t\tif (slotData === undefined) {\n\t\t\t\tconst validValues = Object.keys(slotsMap).join(\", \");\n\t\t\t\tconsole.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`); // eslint-disable-line\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For children that need individual slots, calculate them\n\t\t\tif (slotData.individualSlots) {\n\t\t\t\tconst nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;\n\t\t\t\tautoIncrementMap.set(slotName, nextIndex);\n\t\t\t\tchild._individualSlot = `${slotName}-${nextIndex}`;\n\t\t\t}\n\n\t\t\t// Await for not-yet-defined custom elements\n\t\t\tif (child instanceof HTMLElement) {\n\t\t\t\tconst localName = child.localName;\n\t\t\t\tconst isCustomElement = localName.includes(\"-\");\n\t\t\t\tif (isCustomElement) {\n\t\t\t\t\tconst isDefined = window.customElements.get(localName);\n\t\t\t\t\tif (!isDefined) {\n\t\t\t\t\t\tconst whenDefinedPromise = window.customElements.whenDefined(localName); // Class registered, but instances not upgraded yet\n\t\t\t\t\t\tlet timeoutPromise = elementTimeouts.get(localName);\n\t\t\t\t\t\tif (!timeoutPromise) {\n\t\t\t\t\t\t\ttimeoutPromise = new Promise(resolve => setTimeout(resolve, 1000));\n\t\t\t\t\t\t\telementTimeouts.set(localName, timeoutPromise);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait Promise.race([whenDefinedPromise, timeoutPromise]);\n\t\t\t\t\t}\n\t\t\t\t\twindow.customElements.upgrade(child);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchild = this.constructor.getMetadata().constructor.validateSlotValue(child, slotData);\n\n\t\t\tif (child.isUI5Element && slotData.listenFor) {\n\t\t\t\tthis._attachChildPropertyUpdated(child, slotData.listenFor);\n\t\t\t}\n\n\t\t\tconst propertyName = slotData.propertyName || slotName;\n\n\t\t\tif (slottedChildrenMap.has(propertyName)) {\n\t\t\t\tslottedChildrenMap.get(propertyName).push({ child, idx });\n\t\t\t} else {\n\t\t\t\tslottedChildrenMap.set(propertyName, [{ child, idx }]);\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(allChildrenUpgraded);\n\n\t\t// Distribute the child in the _state object, keeping the Light DOM order,\n\t\t// not the order elements are defined.\n\t\tslottedChildrenMap.forEach((children, slot) => {\n\t\t\tthis._state[slot] = children.sort((a, b) => a.idx - b.idx).map(_ => _.child);\n\t\t});\n\t\tthis._invalidate(\"slots\");\n\t}\n\n\t/**\n\t * Removes all children from the slot and detaches listeners, if any\n\t * @private\n\t */\n\t_clearSlot(slotName, slotData) {\n\t\tconst propertyName = slotData.propertyName || slotName;\n\n\t\tlet children = this._state[propertyName];\n\t\tif (!Array.isArray(children)) {\n\t\t\tchildren = [children];\n\t\t}\n\n\t\tchildren.forEach(child => {\n\t\t\tif (child && child.isUI5Element) {\n\t\t\t\tthis._detachChildPropertyUpdated(child);\n\t\t\t}\n\t\t});\n\n\t\tthis._state[propertyName] = [];\n\t\tthis._invalidate(propertyName, []);\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element\n\t * @private\n\t */\n\tattributeChangedCallback(name, oldValue, newValue) {\n\t\tconst properties = this.constructor.getMetadata().getProperties();\n\t\tconst realName = name.replace(/^ui5-/, \"\");\n\t\tconst nameInCamelCase = kebabToCamelCase(realName);\n\t\tif (properties.hasOwnProperty(nameInCamelCase)) { // eslint-disable-line\n\t\t\tconst propertyTypeClass = properties[nameInCamelCase].type;\n\t\t\tif (propertyTypeClass === Boolean) {\n\t\t\t\tnewValue = newValue !== null;\n\t\t\t}\n\t\t\tif (propertyTypeClass === Integer) {\n\t\t\t\tnewValue = parseInt(newValue);\n\t\t\t}\n\t\t\tthis[nameInCamelCase] = newValue;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updateAttribute(name, newValue) {\n\t\tif (!this.constructor.getMetadata().hasAttribute(name)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof newValue === \"object\") {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attrName = camelToKebabCase(name);\n\t\tconst attrValue = this.getAttribute(attrName);\n\t\tif (typeof newValue === \"boolean\") {\n\t\t\tif (newValue === true && attrValue === null) {\n\t\t\t\tthis.setAttribute(attrName, \"\");\n\t\t\t} else if (newValue === false && attrValue !== null) {\n\t\t\t\tthis.removeAttribute(attrName);\n\t\t\t}\n\t\t} else if (attrValue !== newValue) {\n\t\t\tthis.setAttribute(attrName, newValue);\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_upgradeProperty(prop) {\n\t\tif (this.hasOwnProperty(prop)) { // eslint-disable-line\n\t\t\tconst value = this[prop];\n\t\t\tdelete this[prop];\n\t\t\tthis[prop] = value;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_upgradeAllProperties() {\n\t\tconst allProps = this.constructor.getMetadata().getPropertiesList();\n\t\tallProps.forEach(this._upgradeProperty, this);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_initializeState() {\n\t\tconst defaultState = this.constructor._getDefaultState();\n\t\tthis._state = Object.assign({}, defaultState);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_attachChildPropertyUpdated(child, listenFor) {\n\t\tconst childMetadata = child.constructor.getMetadata(),\n\t\t\tslotName = this.constructor._getSlotName(child), // all slotted children have the same configuration\n\t\t\tchildProperties = childMetadata.getProperties();\n\n\t\tlet observedProps = [],\n\t\t\tnotObservedProps = [];\n\n\t\tif (Array.isArray(listenFor)) {\n\t\t\tobservedProps = listenFor;\n\t\t} else {\n\t\t\tobservedProps = Array.isArray(listenFor.props) ? listenFor.props : Object.keys(childProperties);\n\t\t\tnotObservedProps = Array.isArray(listenFor.exclude) ? listenFor.exclude : [];\n\t\t}\n\n\t\tif (!this._monitoredChildProps.has(slotName)) {\n\t\t\tthis._monitoredChildProps.set(slotName, { observedProps, notObservedProps });\n\t\t}\n\n\t\tchild.addEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n\t\tchild._firePropertyChange = true;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_detachChildPropertyUpdated(child) {\n\t\tchild.removeEventListener(\"_propertyChange\", this._invalidateParentOnPropertyUpdate);\n\t\tchild._firePropertyChange = false;\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_propertyChange(name, value) {\n\t\tthis._updateAttribute(name, value);\n\n\t\tif (this._firePropertyChange) {\n\t\t\tthis.dispatchEvent(new CustomEvent(\"_propertyChange\", {\n\t\t\t\tdetail: { name, newValue: value },\n\t\t\t\tcomposed: false,\n\t\t\t\tbubbles: true,\n\t\t\t}));\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_invalidateParentOnPropertyUpdate(prop) {\n\t\t// The web component to be invalidated\n\t\tconst parentNode = this.parentNode;\n\t\tif (!parentNode) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst slotName = parentNode.constructor._getSlotName(this);\n\t\tconst propsMetadata = parentNode._monitoredChildProps.get(slotName);\n\n\t\tif (!propsMetadata) {\n\t\t\treturn;\n\t\t}\n\t\tconst { observedProps, notObservedProps } = propsMetadata;\n\n\t\tif (observedProps.includes(prop.detail.name) && !notObservedProps.includes(prop.detail.name)) {\n\t\t\tparentNode._invalidate(\"_parent_\", this);\n\t\t}\n\t}\n\n\t/**\n\t * Asynchronously re-renders an already rendered web component\n\t * @private\n\t */\n\t_invalidate() {\n\t\tif (!this._upToDate) {\n\t\t\t// console.log(\"already invalidated\", this, ...arguments);\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.getDomRef() && !this._suppressInvalidation) {\n\t\t\tthis._upToDate = false;\n\t\t\t// console.log(\"INVAL\", this, ...arguments);\n\t\t\tRenderScheduler.renderDeferred(this);\n\t\t}\n\t}\n\n\t/**\n\t * Do not call this method directly, only intended to be called by RenderScheduler.js\n\t * @protected\n\t */\n\t_render() {\n\t\tconst hasIndividualSlots = this.constructor.getMetadata().hasIndividualSlots();\n\n\t\t// suppress invalidation to prevent state changes scheduling another rendering\n\t\tthis._suppressInvalidation = true;\n\n\t\tif (typeof this.onBeforeRendering === \"function\") {\n\t\t\tthis.onBeforeRendering();\n\t\t}\n\n\t\t// Intended for framework usage only. Currently ItemNavigation updates tab indexes after the component has updated its state but before the template is rendered\n\t\tif (this._onComponentStateFinalized) {\n\t\t\tthis._onComponentStateFinalized();\n\t\t}\n\n\t\t// resume normal invalidation handling\n\t\tdelete this._suppressInvalidation;\n\n\t\t// Update the shadow root with the render result\n\t\t// console.log(this.getDomRef() ? \"RE-RENDER\" : \"FIRST RENDER\", this);\n\t\tthis._upToDate = true;\n\t\tthis._updateShadowRoot();\n\n\t\tif (this._shouldUpdateFragment()) {\n\t\t\tthis.staticAreaItem._updateFragment(this);\n\t\t}\n\n\t\t// Safari requires that children get the slot attribute only after the slot tags have been rendered in the shadow DOM\n\t\tif (hasIndividualSlots) {\n\t\t\tthis._assignIndividualSlotsToChildren();\n\t\t}\n\n\t\t// Call the onAfterRendering hook\n\t\tif (typeof this.onAfterRendering === \"function\") {\n\t\t\tthis.onAfterRendering();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updateShadowRoot() {\n\t\tif (!this.constructor._needsShadowDOM()) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet styleToPrepend;\n\t\tconst renderResult = this.constructor.template(this);\n\n\t\tif (!document.adoptedStyleSheets && !window.ShadyDOM) {\n\t\t\tstyleToPrepend = getEffectiveStyle(this.constructor);\n\t\t}\n\t\tthis.constructor.render(renderResult, this.shadowRoot, styleToPrepend, { eventContext: this });\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_assignIndividualSlotsToChildren() {\n\t\tconst domChildren = Array.from(this.children);\n\n\t\tdomChildren.forEach(child => {\n\t\t\tif (child._individualSlot) {\n\t\t\t\tchild.setAttribute(\"slot\", child._individualSlot);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_waitForDomRef() {\n\t\treturn this._domRefReadyPromise;\n\t}\n\n\t/**\n\t * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template\n\t * Use this method instead of \"this.shadowRoot\" to read the Shadow DOM, if ever necessary\n\t * @public\n\t */\n\tgetDomRef() {\n\t\tif (!this.shadowRoot || this.shadowRoot.children.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn this.shadowRoot.children.length === 1\n\t\t\t? this.shadowRoot.children[0] : this.shadowRoot.children[1];\n\t}\n\n\t/**\n\t * Returns the DOM Element marked with \"data-sap-focus-ref\" inside the template.\n\t * This is the element that will receive the focus by default.\n\t * @public\n\t */\n\tgetFocusDomRef() {\n\t\tconst domRef = this.getDomRef();\n\t\tif (domRef) {\n\t\t\tconst focusRef = domRef.querySelector(\"[data-sap-focus-ref]\");\n\t\t\treturn focusRef || domRef;\n\t\t}\n\t}\n\n\t/**\n\t * Set the focus to the element, returned by \"getFocusDomRef()\" (marked by \"data-sap-focus-ref\")\n\t * @public\n\t */\n\tasync focus() {\n\t\tawait this._waitForDomRef();\n\n\t\tconst focusDomRef = this.getFocusDomRef();\n\n\t\tif (focusDomRef && typeof focusDomRef.focus === \"function\") {\n\t\t\tfocusDomRef.focus();\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @public\n\t * @param name - name of the event\n\t * @param data - additional data for the event\n\t * @param cancelable - true, if the user can call preventDefault on the event object\n\t * @returns {boolean} false, if the event was cancelled (preventDefault called), true otherwise\n\t */\n\tfireEvent(name, data, cancelable) {\n\t\tlet compatEventResult = true; // Initialized to true, because if the event is not fired at all, it should be considered \"not-prevented\"\n\n\t\tconst noConflictEvent = new CustomEvent(`ui5-${name}`, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles: true,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the compat event is prevented\n\t\tcompatEventResult = this.dispatchEvent(noConflictEvent);\n\n\t\tif (skipOriginalEvent(name)) {\n\t\t\treturn compatEventResult;\n\t\t}\n\n\t\tconst customEvent = new CustomEvent(name, {\n\t\t\tdetail: data,\n\t\t\tcomposed: false,\n\t\t\tbubbles: true,\n\t\t\tcancelable,\n\t\t});\n\n\t\t// This will be false if the normal event is prevented\n\t\tconst normalEventResult = this.dispatchEvent(customEvent);\n\n\t\t// Return false if any of the two events was prevented (its result was false).\n\t\treturn normalEventResult && compatEventResult;\n\t}\n\n\t/**\n\t * Returns the actual children, associated with a slot.\n\t * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.\n\t * @public\n\t */\n\tgetSlottedNodes(slotName) {\n\t\tconst reducer = (acc, curr) => {\n\t\t\tif (curr.localName !== \"slot\") {\n\t\t\t\treturn acc.concat([curr]);\n\t\t\t}\n\t\t\treturn acc.concat(curr.assignedNodes({ flatten: true }).filter(item => item instanceof HTMLElement));\n\t\t};\n\n\t\treturn this[slotName].reduce(reducer, []);\n\t}\n\n\tget isCompact() {\n\t\treturn getComputedStyle(this).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR) === \"compact\";\n\t}\n\n\tupdateStaticAreaItemContentDensity() {\n\t\tif (this.staticAreaItem) {\n\t\t\tthis.staticAreaItem._updateContentDensity(this.isCompact);\n\t\t}\n\t}\n\n\t/**\n\t * Used to duck-type UI5 elements without using instanceof\n\t * @returns {boolean}\n\t * @public\n\t */\n\tget isUI5Element() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Do not override this method in derivatives of UI5Element, use metadata properties instead\n\t * @private\n\t */\n\tstatic get observedAttributes() {\n\t\treturn this.getMetadata().getAttributesList();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _getSlotName(child) {\n\t\t// Text nodes can only go to the default slot\n\t\tif (!(child instanceof HTMLElement)) {\n\t\t\treturn \"default\";\n\t\t}\n\n\t\t// Discover the slot based on the real slot name (f.e. footer => footer, or content-32 => content)\n\t\tconst slot = child.getAttribute(\"slot\");\n\t\tif (slot) {\n\t\t\tconst match = slot.match(/^(.+?)-\\d+$/);\n\t\t\treturn match ? match[1] : slot;\n\t\t}\n\n\t\t// Use default slot as a fallback\n\t\treturn \"default\";\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _needsShadowDOM() {\n\t\treturn !!this.template;\n\t}\n\n\t_shouldUpdateFragment() {\n\t\treturn this.constructor._needsStaticArea() && this.staticAreaItem.isRendered();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _needsStaticArea() {\n\t\treturn typeof this.staticAreaTemplate === \"function\";\n\t}\n\n\t/**\n\t * @public\n\t */\n\tgetStaticAreaItemDomRef() {\n\t\treturn this.staticAreaItem.getDomRef();\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _getDefaultState() {\n\t\tif (this._defaultState) {\n\t\t\treturn this._defaultState;\n\t\t}\n\n\t\tconst MetadataClass = this.getMetadata();\n\t\tconst defaultState = {};\n\t\tconst slotsAreManaged = MetadataClass.slotsAreManaged();\n\n\t\t// Initialize properties\n\t\tconst props = MetadataClass.getProperties();\n\t\tfor (const propName in props) { // eslint-disable-line\n\t\t\tconst propType = props[propName].type;\n\t\t\tconst propDefaultValue = props[propName].defaultValue;\n\n\t\t\tif (propType === Boolean) {\n\t\t\t\tdefaultState[propName] = false;\n\n\t\t\t\tif (propDefaultValue !== undefined) {\n\t\t\t\t\tconsole.warn(\"The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default\"); // eslint-disable-line\n\t\t\t\t}\n\t\t\t} else if (props[propName].multiple) {\n\t\t\t\tdefaultState[propName] = [];\n\t\t\t} else if (propType === Object) {\n\t\t\t\tdefaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : {};\n\t\t\t} else if (propType === String) {\n\t\t\t\tdefaultState[propName] = \"defaultValue\" in props[propName] ? props[propName].defaultValue : \"\";\n\t\t\t} else {\n\t\t\t\tdefaultState[propName] = propDefaultValue;\n\t\t\t}\n\t\t}\n\n\t\t// Initialize slots\n\t\tif (slotsAreManaged) {\n\t\t\tconst slots = MetadataClass.getSlots();\n\t\t\tfor (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n\t\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\t\tdefaultState[propertyName] = [];\n\t\t\t}\n\t\t}\n\n\t\tthis._defaultState = defaultState;\n\t\treturn defaultState;\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic _generateAccessors() {\n\t\tconst proto = this.prototype;\n\t\tconst slotsAreManaged = this.getMetadata().slotsAreManaged();\n\n\t\t// Properties\n\t\tconst properties = this.getMetadata().getProperties();\n\t\tfor (const [prop, propData] of Object.entries(properties)) { // eslint-disable-line\n\t\t\tif (!isValidPropertyName(prop)) {\n\t\t\t\tthrow new Error(`\"${prop}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n\t\t\t}\n\n\t\t\tif (propData.type === Boolean && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All booleans are false by default.`);\n\t\t\t}\n\n\t\t\tif (propData.type === Array) {\n\t\t\t\tthrow new Error(`Wrong type for property \"${prop}\". Properties cannot be of type Array - use \"multiple: true\" and set \"type\" to the single value type, such as \"String\", \"Object\", etc...`);\n\t\t\t}\n\n\t\t\tif (propData.type === Object && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All properties of type \"Object\" are empty objects by default.`);\n\t\t\t}\n\n\t\t\tif (propData.multiple && propData.defaultValue) {\n\t\t\t\tthrow new Error(`Cannot set a default value for property \"${prop}\". All multiple properties are empty arrays by default.`);\n\t\t\t}\n\n\t\t\tObject.defineProperty(proto, prop, {\n\t\t\t\tget() {\n\t\t\t\t\tif (this._state[prop] !== undefined) {\n\t\t\t\t\t\treturn this._state[prop];\n\t\t\t\t\t}\n\n\t\t\t\t\tconst propDefaultValue = propData.defaultValue;\n\n\t\t\t\t\tif (propData.type === Boolean) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (propData.type === String) {  // eslint-disable-line\n\t\t\t\t\t\treturn propDefaultValue;\n\t\t\t\t\t} else if (propData.multiple) { // eslint-disable-line\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn propDefaultValue;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tset(value) {\n\t\t\t\t\tvalue = this.constructor.getMetadata().constructor.validatePropertyValue(value, propData);\n\n\t\t\t\t\tconst oldState = this._state[prop];\n\n\t\t\t\t\tif (oldState !== value) {\n\t\t\t\t\t\tthis._state[prop] = value;\n\t\t\t\t\t\tthis._invalidate(prop, value);\n\t\t\t\t\t\tthis._propertyChange(prop, value);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\t// Slots\n\t\tif (slotsAreManaged) {\n\t\t\tconst slots = this.getMetadata().getSlots();\n\t\t\tfor (const [slotName, slotData] of Object.entries(slots)) { // eslint-disable-line\n\t\t\t\tif (!isValidPropertyName(slotName)) {\n\t\t\t\t\tthrow new Error(`\"${slotName}\" is not a valid property name. Use a name that does not collide with DOM APIs`);\n\t\t\t\t}\n\n\t\t\t\tconst propertyName = slotData.propertyName || slotName;\n\t\t\t\tObject.defineProperty(proto, propertyName, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tif (this._state[propertyName] !== undefined) {\n\t\t\t\t\t\t\treturn this._state[propertyName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t},\n\t\t\t\t\tset() {\n\t\t\t\t\t\tthrow new Error(\"Cannot set slots directly, use the DOM APIs\");\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns the metadata object for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\t/**\n\t * Returns the CSS for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get styles() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns the Static Area CSS for this UI5 Web Component Class\n\t * @protected\n\t */\n\tstatic get staticAreaStyles() {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Registers a UI5 Web Component in the browser window object\n\t * @public\n\t * @returns {Promise<UI5Element>}\n\t */\n\tstatic async define() {\n\t\tawait boot();\n\n\t\tif (this.onDefine) {\n\t\t\tawait this.onDefine();\n\t\t}\n\n\t\tconst tag = this.getMetadata().getTag();\n\n\t\tconst definedLocally = isTagRegistered(tag);\n\t\tconst definedGlobally = customElements.get(tag);\n\n\t\tif (definedGlobally && !definedLocally) {\n\t\t\tconsole.warn(`Skipping definition of tag ${tag}, because it was already defined by another instance of ui5-webcomponents.`); // eslint-disable-line\n\t\t} else if (!definedGlobally) {\n\t\t\tthis._generateAccessors();\n\t\t\tregisterTag(tag);\n\t\t\twindow.customElements.define(tag, this);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')\n\t * Note: not to be confused with the \"get metadata()\" method, which returns an object for this class's metadata only\n\t * @public\n\t * @returns {UI5ElementMetadata}\n\t */\n\tstatic getMetadata() {\n\t\tif (this.hasOwnProperty(\"_metadata\")) { // eslint-disable-line\n\t\t\treturn this._metadata;\n\t\t}\n\n\t\tconst metadataObjects = [this.metadata];\n\t\tlet klass = this; // eslint-disable-line\n\t\twhile (klass !== UI5Element) {\n\t\t\tklass = Object.getPrototypeOf(klass);\n\t\t\tmetadataObjects.unshift(klass.metadata);\n\t\t}\n\t\tconst mergedMetadata = merge({}, ...metadataObjects);\n\n\t\tthis._metadata = new UI5ElementMetadata(mergedMetadata);\n\t\treturn this._metadata;\n\t}\n}\n\nexport default UI5Element;\n"]},"metadata":{},"sourceType":"module"}