{"ast":null,"code":"import _classCallCheck from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar INTERVAL = 300;\n\nvar CustomResize = /*#__PURE__*/function () {\n  function CustomResize() {\n    _classCallCheck(this, CustomResize);\n  }\n\n  _createClass(CustomResize, null, [{\n    key: \"initialize\",\n    value: function initialize() {\n      CustomResize.initialized = false;\n      CustomResize.resizeInterval = undefined;\n      CustomResize.resizeListeners = new Map();\n    }\n  }, {\n    key: \"attachListener\",\n    value: function attachListener(ref, callback) {\n      var observedObject = CustomResize.resizeListeners.get(ref);\n      var existingCallbacks = observedObject ? observedObject.callbacks : [];\n      CustomResize.resizeListeners.set(ref, {\n        width: ref ? ref.offsetWidth : 0,\n        height: ref ? ref.offsetHeight : 0,\n        callbacks: existingCallbacks.concat(callback)\n      });\n      CustomResize.initListener();\n    }\n  }, {\n    key: \"initListener\",\n    value: function initListener() {\n      if (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {\n        CustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);\n      }\n    }\n  }, {\n    key: \"checkListeners\",\n    value: function checkListeners() {\n      CustomResize.resizeListeners.forEach(function (entry, ref) {\n        var changed = CustomResize.checkSizes(entry, ref);\n\n        if (changed || entry && !entry._hasBeenRendered) {\n          CustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);\n          entry.callbacks.forEach(function (el) {\n            return el();\n          });\n          entry._hasBeenRendered = true;\n        }\n      });\n    }\n  }, {\n    key: \"updateSizes\",\n    value: function updateSizes(sizes, newWidth, newHeight) {\n      sizes.width = newWidth;\n      sizes.height = newHeight;\n    }\n  }, {\n    key: \"checkSizes\",\n    value: function checkSizes(entry, ref) {\n      var oldHeight = entry.height;\n      var oldWidth = entry.width;\n      var newHeight = ref.offsetHeight;\n      var newWidth = ref.offsetWidth;\n      return oldHeight !== newHeight || oldWidth !== newWidth;\n    }\n  }, {\n    key: \"detachListener\",\n    value: function detachListener(ref, callback) {\n      var listenerObject = CustomResize.resizeListeners.get(ref);\n      var callbacks = listenerObject ? listenerObject.callbacks : [];\n      var filteredCallbacks = callbacks.filter(function (fn) {\n        return fn !== callback;\n      });\n\n      if (!listenerObject || callbacks.length === filteredCallbacks.length && callbacks.length !== 0) {\n        return;\n      }\n\n      CustomResize.resizeListeners.set(ref, Object.assign(listenerObject, {\n        callbacks: filteredCallbacks\n      }));\n\n      if (!filteredCallbacks.length) {\n        listenerObject.callbacks = null;\n        CustomResize.resizeListeners.delete(ref);\n      }\n\n      if (CustomResize.resizeListeners.size === 0) {\n        CustomResize.initialized = false;\n        clearInterval(CustomResize.resizeInterval);\n      }\n    }\n  }]);\n\n  return CustomResize;\n}();\n\nexport default CustomResize;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/delegate/CustomResize.js"],"names":["INTERVAL","CustomResize","initialized","resizeInterval","undefined","resizeListeners","Map","ref","callback","observedObject","get","existingCallbacks","callbacks","set","width","offsetWidth","height","offsetHeight","concat","initListener","size","setInterval","checkListeners","bind","forEach","entry","changed","checkSizes","_hasBeenRendered","updateSizes","el","sizes","newWidth","newHeight","oldHeight","oldWidth","listenerObject","filteredCallbacks","filter","fn","length","Object","assign","delete","clearInterval"],"mappings":"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","sourcesContent":["const INTERVAL = 300;\n\nclass CustomResize {\n\tstatic initialize() {\n\t\tCustomResize.initialized = false;\n\t\tCustomResize.resizeInterval = undefined;\n\t\tCustomResize.resizeListeners = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedObject = CustomResize.resizeListeners.get(ref);\n\t\tconst existingCallbacks = observedObject ? observedObject.callbacks : [];\n\n\t\tCustomResize.resizeListeners.set(ref, {\n\t\t\twidth: ref ? ref.offsetWidth : 0,\n\t\t\theight: ref ? ref.offsetHeight : 0,\n\t\t\tcallbacks: existingCallbacks.concat(callback),\n\t\t});\n\n\t\tCustomResize.initListener();\n\t}\n\n\tstatic initListener() {\n\t\tif (CustomResize.resizeListeners.size > 0 && !CustomResize.initialized) {\n\t\t\tCustomResize.resizeInterval = setInterval(CustomResize.checkListeners.bind(CustomResize), INTERVAL);\n\t\t}\n\t}\n\n\tstatic checkListeners() {\n\t\tCustomResize.resizeListeners.forEach((entry, ref) => {\n\t\t\tconst changed = CustomResize.checkSizes(entry, ref);\n\n\t\t\tif (changed || (entry && !entry._hasBeenRendered)) {\n\t\t\t\tCustomResize.updateSizes(entry, ref.offsetWidth, ref.offsetHeight);\n\t\t\t\tentry.callbacks.forEach(el => el());\n\t\t\t\tentry._hasBeenRendered = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tstatic updateSizes(sizes, newWidth, newHeight) {\n\t\tsizes.width = newWidth;\n\t\tsizes.height = newHeight;\n\t}\n\n\tstatic checkSizes(entry, ref) {\n\t\tconst oldHeight = entry.height;\n\t\tconst oldWidth = entry.width;\n\t\tconst newHeight = ref.offsetHeight;\n\t\tconst newWidth = ref.offsetWidth;\n\n\t\treturn ((oldHeight !== newHeight) || oldWidth !== newWidth);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst listenerObject = CustomResize.resizeListeners.get(ref);\n\t\tconst callbacks = listenerObject ? listenerObject.callbacks : [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!listenerObject || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tCustomResize.resizeListeners.set(ref, Object.assign(listenerObject, { callbacks: filteredCallbacks }));\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tlistenerObject.callbacks = null;\n\t\t\tCustomResize.resizeListeners.delete(ref);\n\t\t}\n\n\t\tif (CustomResize.resizeListeners.size === 0) {\n\t\t\tCustomResize.initialized = false;\n\t\t\tclearInterval(CustomResize.resizeInterval);\n\t\t}\n\t}\n}\n\nexport default CustomResize;\n"]},"metadata":{},"sourceType":"module"}