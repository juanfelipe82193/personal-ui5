{"ast":null,"code":"class NativeResize {\n  static initialize() {\n    NativeResize.resizeObserver = new window.ResizeObserver(entries => {\n      // call attached callbacks\n      entries.forEach(entry => {\n        const callbacks = NativeResize.observedObjects.get(entry.target);\n        callbacks.forEach(el => el());\n      });\n    });\n    NativeResize.observedObjects = new Map();\n  }\n\n  static attachListener(ref, callback) {\n    const observedDOMs = NativeResize.observedObjects;\n    const callbacks = observedDOMs.get(ref) || []; // if no callbacks has been added for this ref - start observing it\n\n    if (!callbacks.length) {\n      NativeResize.resizeObserver.observe(ref);\n    } // save the callbacks in an array\n\n\n    observedDOMs.set(ref, [...callbacks, callback]);\n  }\n\n  static detachListener(ref, callback) {\n    const callbacks = NativeResize.observedObjects.get(ref) || [];\n    const filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n    if (!callbacks.length || callbacks.length === filteredCallbacks.length && callbacks.length !== 0) {\n      return;\n    }\n\n    NativeResize.observedObjects.set(ref, filteredCallbacks);\n\n    if (!filteredCallbacks.length) {\n      NativeResize.resizeObserver.unobserve(ref);\n    }\n  }\n\n}\n\nexport default NativeResize;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-base/dist/delegate/NativeResize.js"],"names":["NativeResize","initialize","resizeObserver","window","ResizeObserver","entries","forEach","entry","callbacks","observedObjects","get","target","el","Map","attachListener","ref","callback","observedDOMs","length","observe","set","detachListener","filteredCallbacks","filter","fn","unobserve"],"mappings":"AAAA,MAAMA,YAAN,CAAmB;AAClB,SAAOC,UAAP,GAAoB;AACnBD,IAAAA,YAAY,CAACE,cAAb,GAA8B,IAAIC,MAAM,CAACC,cAAX,CAA0BC,OAAO,IAAI;AAClE;AACAA,MAAAA,OAAO,CAACC,OAAR,CAAgBC,KAAK,IAAI;AACxB,cAAMC,SAAS,GAAGR,YAAY,CAACS,eAAb,CAA6BC,GAA7B,CAAiCH,KAAK,CAACI,MAAvC,CAAlB;AAEAH,QAAAA,SAAS,CAACF,OAAV,CAAkBM,EAAE,IAAIA,EAAE,EAA1B;AACA,OAJD;AAKA,KAP6B,CAA9B;AASAZ,IAAAA,YAAY,CAACS,eAAb,GAA+B,IAAII,GAAJ,EAA/B;AACA;;AAED,SAAOC,cAAP,CAAsBC,GAAtB,EAA2BC,QAA3B,EAAqC;AACpC,UAAMC,YAAY,GAAGjB,YAAY,CAACS,eAAlC;AACA,UAAMD,SAAS,GAAGS,YAAY,CAACP,GAAb,CAAiBK,GAAjB,KAAyB,EAA3C,CAFoC,CAIpC;;AACA,QAAI,CAACP,SAAS,CAACU,MAAf,EAAuB;AACtBlB,MAAAA,YAAY,CAACE,cAAb,CAA4BiB,OAA5B,CAAoCJ,GAApC;AACA,KAPmC,CASpC;;;AACAE,IAAAA,YAAY,CAACG,GAAb,CAAiBL,GAAjB,EAAsB,CAAC,GAAGP,SAAJ,EAAeQ,QAAf,CAAtB;AACA;;AAED,SAAOK,cAAP,CAAsBN,GAAtB,EAA2BC,QAA3B,EAAqC;AACpC,UAAMR,SAAS,GAAGR,YAAY,CAACS,eAAb,CAA6BC,GAA7B,CAAiCK,GAAjC,KAAyC,EAA3D;AACA,UAAMO,iBAAiB,GAAGd,SAAS,CAACe,MAAV,CAAiBC,EAAE,IAAIA,EAAE,KAAKR,QAA9B,CAA1B;;AAEA,QAAI,CAACR,SAAS,CAACU,MAAX,IAAsBV,SAAS,CAACU,MAAV,KAAqBI,iBAAiB,CAACJ,MAAvC,IAAiDV,SAAS,CAACU,MAAV,KAAqB,CAAhG,EAAoG;AACnG;AACA;;AAEDlB,IAAAA,YAAY,CAACS,eAAb,CAA6BW,GAA7B,CAAiCL,GAAjC,EAAsCO,iBAAtC;;AAEA,QAAI,CAACA,iBAAiB,CAACJ,MAAvB,EAA+B;AAC9BlB,MAAAA,YAAY,CAACE,cAAb,CAA4BuB,SAA5B,CAAsCV,GAAtC;AACA;AACD;;AAxCiB;;AA2CnB,eAAef,YAAf","sourcesContent":["class NativeResize {\n\tstatic initialize() {\n\t\tNativeResize.resizeObserver = new window.ResizeObserver(entries => {\n\t\t\t// call attached callbacks\n\t\t\tentries.forEach(entry => {\n\t\t\t\tconst callbacks = NativeResize.observedObjects.get(entry.target);\n\n\t\t\t\tcallbacks.forEach(el => el());\n\t\t\t});\n\t\t});\n\n\t\tNativeResize.observedObjects = new Map();\n\t}\n\n\tstatic attachListener(ref, callback) {\n\t\tconst observedDOMs = NativeResize.observedObjects;\n\t\tconst callbacks = observedDOMs.get(ref) || [];\n\n\t\t// if no callbacks has been added for this ref - start observing it\n\t\tif (!callbacks.length) {\n\t\t\tNativeResize.resizeObserver.observe(ref);\n\t\t}\n\n\t\t// save the callbacks in an array\n\t\tobservedDOMs.set(ref, [...callbacks, callback]);\n\t}\n\n\tstatic detachListener(ref, callback) {\n\t\tconst callbacks = NativeResize.observedObjects.get(ref) || [];\n\t\tconst filteredCallbacks = callbacks.filter(fn => fn !== callback);\n\n\t\tif (!callbacks.length || (callbacks.length === filteredCallbacks.length && callbacks.length !== 0)) {\n\t\t\treturn;\n\t\t}\n\n\t\tNativeResize.observedObjects.set(ref, filteredCallbacks);\n\n\t\tif (!filteredCallbacks.length) {\n\t\t\tNativeResize.resizeObserver.unobserve(ref);\n\t\t}\n\t}\n}\n\nexport default NativeResize;\n"]},"metadata":{},"sourceType":"module"}