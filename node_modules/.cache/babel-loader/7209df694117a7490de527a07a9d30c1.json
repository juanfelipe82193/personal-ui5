{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useDeprecateRenderMethods } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport React, { forwardRef, useState, useCallback } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nvar styles = {\n  outerContainer: {\n    paddingTop: '0.5rem',\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    paddingBottom: '1px',\n    background: ThemingParameters.sapObjectHeader_Background,\n    boxShadow: ThemingParameters.sapContent_HeaderShadow\n  },\n  filterBarHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    background: ThemingParameters.sapObjectHeader_Background,\n    minHeight: '3rem',\n    paddingBottom: '0.5rem',\n    boxShadow: 'none',\n    flexWrap: 'wrap'\n  },\n  vLine: {\n    borderLeft: '1px solid gray',\n    paddingLeft: '0.5rem'\n  },\n  filterArea: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    paddingTop: '1rem',\n    paddingBottom: '1rem',\n    background: ThemingParameters.sapObjectHeader_Background,\n    transition: 'max-height 0.2s ease-out, opacity 0.2s ease-in'\n  },\n  filterAreaClosed: {\n    maxHeight: '0',\n    opacity: 0,\n    padding: 0,\n    overflowY: 'auto'\n  },\n  filterAreaOpen: {\n    maxHeight: '500px',\n    opacity: 1,\n    overflowY: 'auto'\n  },\n  headerRowRight: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  // is being applied to the span which represents the InfoLabel Text\n  label: {\n    fontSize: ThemingParameters.sapFontSmallSize,\n    fontFamily: ThemingParameters.sapFontFamily,\n    lineHeight: '1.125rem',\n    fontWeight: 600,\n    letterSpacing: '0.0125rem',\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    verticalAlign: 'top',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n    color: ThemingParameters.sapTextColor\n  },\n  // specific padding needed for purely numeric input\n  numeric: {},\n  // specific padding needed for text input\n  text: {},\n  // displayOnly mode\n  displayOnly: {}\n};\nvar useStyles = createComponentStyles(styles, {\n  name: 'FilterBar'\n});\n/**\n * <code>import { FilterBar } from '@ui5/webcomponents-react/lib/FilterBar';</code>\n */\n\nvar FilterBar = forwardRef(function (props, ref) {\n  var _ref = props,\n      children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showFilters = _useState2[0],\n      setShowFilters = _useState2[1];\n\n  var search = useDeprecateRenderMethods(props, 'renderSearch', 'search');\n  var variants = useDeprecateRenderMethods(props, 'renderVariants', 'variants');\n  var classes = useStyles();\n  var handleHideFilterBar = useCallback(function () {\n    setShowFilters(!showFilters);\n  }, [showFilters]);\n  var filterAreaClasses = StyleClassHelper.of(classes.filterArea);\n\n  if (showFilters) {\n    filterAreaClasses.put(classes.filterAreaOpen);\n  } else {\n    filterAreaClasses.put(classes.filterAreaClosed);\n  }\n\n  var passThroughProps = usePassThroughHtmlProps(props);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: classes.outerContainer\n  }, passThroughProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.filterBarHeader\n  }, variants, search && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.vLine\n  }, \" \", search, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.headerRowRight\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleHideFilterBar,\n    design: ButtonDesign.Transparent\n  }, showFilters ? 'Hide Filter Bar' : 'Show Filter Bar'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: filterAreaClasses.valueOf()\n  }, children));\n});\nFilterBar.displayName = 'FilterBar';\nexport { FilterBar };","map":{"version":3,"sources":["../src/components/FilterBar/FilterBar.jss.ts","../src/components/FilterBar/index.tsx"],"names":["styles","outerContainer","paddingTop","paddingLeft","paddingRight","paddingBottom","background","ThemingParameters","boxShadow","sapContent_HeaderShadow","filterBarHeader","alignItems","display","minHeight","flexWrap","vLine","borderLeft","filterArea","transition","filterAreaClosed","maxHeight","opacity","padding","overflowY","filterAreaOpen","headerRowRight","justifyContent","flexGrow","label","fontSize","fontFamily","lineHeight","fontWeight","letterSpacing","textTransform","textAlign","verticalAlign","textOverflow","whiteSpace","color","sapTextColor","numeric","text","displayOnly","useStyles","createComponentStyles","name","FilterBar","forwardRef","children","showFilters","setShowFilters","useState","search","useDeprecateRenderMethods","variants","classes","handleHideFilterBar","useCallback","filterAreaClasses","StyleClassHelper","passThroughProps","usePassThroughHtmlProps","ButtonDesign","Transparent"],"mappings":"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","sourcesContent":["import { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst styles = {\n  outerContainer: {\n    paddingTop: '0.5rem',\n    paddingLeft: '2rem',\n    paddingRight: '2rem',\n    paddingBottom: '1px',\n    background: ThemingParameters.sapObjectHeader_Background,\n    boxShadow: ThemingParameters.sapContent_HeaderShadow\n  },\n  filterBarHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    background: ThemingParameters.sapObjectHeader_Background,\n    minHeight: '3rem',\n    paddingBottom: '0.5rem',\n    boxShadow: 'none',\n    flexWrap: 'wrap'\n  },\n  vLine: {\n    borderLeft: '1px solid gray',\n    paddingLeft: '0.5rem'\n  },\n  filterArea: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    paddingTop: '1rem',\n    paddingBottom: '1rem',\n    background: ThemingParameters.sapObjectHeader_Background,\n    transition: 'max-height 0.2s ease-out, opacity 0.2s ease-in'\n  },\n  filterAreaClosed: {\n    maxHeight: '0',\n    opacity: 0,\n    padding: 0,\n    overflowY: 'auto'\n  },\n  filterAreaOpen: {\n    maxHeight: '500px',\n    opacity: 1,\n    overflowY: 'auto'\n  },\n  headerRowRight: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    flexGrow: 1\n  },\n  // is being applied to the span which represents the InfoLabel Text\n  label: {\n    fontSize: ThemingParameters.sapFontSmallSize,\n    fontFamily: ThemingParameters.sapFontFamily,\n    lineHeight: '1.125rem',\n    fontWeight: 600,\n    letterSpacing: '0.0125rem',\n    textTransform: 'uppercase',\n    textAlign: 'center',\n    verticalAlign: 'top',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    display: 'inline-block',\n    color: ThemingParameters.sapTextColor\n  },\n  // specific padding needed for purely numeric input\n  numeric: {},\n  // specific padding needed for text input\n  text: {},\n  // displayOnly mode\n  displayOnly: {}\n};\n\nexport default styles;\n","import { StyleClassHelper } from '@ui5/webcomponents-react-base/lib/StyleClassHelper';\nimport { usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/usePassThroughHtmlProps';\nimport { useDeprecateRenderMethods } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport React, { FC, forwardRef, ReactNode, ReactNodeArray, RefObject, useCallback, useState } from 'react';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport styles from './FilterBar.jss';\n\nexport interface FilterBarPropTypes extends CommonProps {\n  renderVariants?: () => JSX.Element;\n  renderSearch?: () => JSX.Element;\n  variants?: ReactNode;\n  search?: ReactNode;\n  children: ReactNode | ReactNodeArray;\n}\n\ninterface FilterBarInternalProps extends FilterBarPropTypes {}\n\nconst useStyles = createComponentStyles(styles, { name: 'FilterBar' });\n\n/**\n * <code>import { FilterBar } from '@ui5/webcomponents-react/lib/FilterBar';</code>\n */\nconst FilterBar: FC<FilterBarPropTypes> = forwardRef((props: FilterBarPropTypes, ref: RefObject<HTMLDivElement>) => {\n  const { children } = props as FilterBarInternalProps;\n  const [showFilters, setShowFilters] = useState(true);\n  const search = useDeprecateRenderMethods(props, 'renderSearch', 'search');\n  const variants = useDeprecateRenderMethods(props, 'renderVariants', 'variants');\n\n  const classes = useStyles();\n\n  const handleHideFilterBar = useCallback(() => {\n    setShowFilters(!showFilters);\n  }, [showFilters]);\n\n  const filterAreaClasses = StyleClassHelper.of(classes.filterArea);\n  if (showFilters) {\n    filterAreaClasses.put(classes.filterAreaOpen);\n  } else {\n    filterAreaClasses.put(classes.filterAreaClosed);\n  }\n\n  const passThroughProps = usePassThroughHtmlProps(props);\n\n  return (\n    <div ref={ref} className={classes.outerContainer} {...passThroughProps}>\n      <div className={classes.filterBarHeader}>\n        {variants}\n        {search && <div className={classes.vLine}> {search} </div>}\n        <div className={classes.headerRowRight}>\n          <Button onClick={handleHideFilterBar} design={ButtonDesign.Transparent}>\n            {showFilters ? 'Hide Filter Bar' : 'Show Filter Bar'}\n          </Button>\n        </div>\n      </div>\n      <div className={filterAreaClasses.valueOf()}>{children}</div>\n    </div>\n  );\n});\n\nFilterBar.displayName = 'FilterBar';\nexport { FilterBar };\n"]},"metadata":{},"sourceType":"module"}