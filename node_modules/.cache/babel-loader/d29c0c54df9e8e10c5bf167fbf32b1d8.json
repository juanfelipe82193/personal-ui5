{"ast":null,"code":"import _extends from '@babel/runtime/helpers/extends';\nimport '@ui5/webcomponents-icons/dist/icons/hint';\nimport '@ui5/webcomponents-icons/dist/icons/message-error';\nimport '@ui5/webcomponents-icons/dist/icons/message-information';\nimport '@ui5/webcomponents-icons/dist/icons/message-success';\nimport '@ui5/webcomponents-icons/dist/icons/message-warning';\nimport '@ui5/webcomponents-icons/dist/icons/question-mark';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { useI18nBundle, useConsolidatedRef, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\nimport { ABORT, CANCEL, CLOSE, DELETE, IGNORE, NO, OK, RETRY, YES, HIGHLIGHT, WARNING, SUCCESS, INFORMATION, ERROR, CONFIRMATION } from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { Dialog } from '@ui5/webcomponents-react/lib/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/lib/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/lib/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport React, { forwardRef, useMemo, isValidElement, useCallback, useEffect } from 'react';\nimport { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\nvar style = {\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    lineHeight: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: 'auto',\n    alignItems: 'center',\n    '& $icon': {\n      '& >*': {\n        verticalAlign: 'middle'\n      }\n    },\n    // justifyContent: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: \"1px solid var(--messageBoxBorderColor)\",\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n      }\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n      }\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n      }\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n      }\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n      }\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n      }\n    }\n  },\n  icon: {\n    marginRight: '0.5rem',\n    fontSize: '1rem',\n    width: '1rem'\n  },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& >*:not(:last-child)': {\n      marginRight: '0.5rem'\n    },\n    '& > ui5-button': {\n      display: 'flex'\n    }\n  }\n};\nvar actionTextMap = new Map();\nactionTextMap.set(MessageBoxActions.ABORT, ABORT);\nactionTextMap.set(MessageBoxActions.CANCEL, CANCEL);\nactionTextMap.set(MessageBoxActions.CLOSE, CLOSE);\nactionTextMap.set(MessageBoxActions.DELETE, DELETE);\nactionTextMap.set(MessageBoxActions.IGNORE, IGNORE);\nactionTextMap.set(MessageBoxActions.NO, NO);\nactionTextMap.set(MessageBoxActions.OK, OK);\nactionTextMap.set(MessageBoxActions.RETRY, RETRY);\nactionTextMap.set(MessageBoxActions.YES, YES);\nvar useStyles = createComponentStyles(style, {\n  name: 'MessageBox'\n});\n/**\n * <code>import { MessageBox } from '@ui5/webcomponents-react/lib/MessageBox';</code>\n */\n\nvar MessageBox = forwardRef(function (props, ref) {\n  var open = props.open,\n      type = props.type,\n      children = props.children,\n      className = props.className,\n      style = props.style,\n      tooltip = props.tooltip,\n      slot = props.slot,\n      title = props.title,\n      icon = props.icon,\n      actions = props.actions,\n      onClose = props.onClose;\n  var i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n  var classes = useStyles();\n  var iconToRender = useMemo(function () {\n    if (isValidElement(icon)) return icon;\n\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"question-mark\"\n        });\n\n      case MessageBoxTypes.ERROR:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-error\"\n        });\n\n      case MessageBoxTypes.INFORMATION:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-information\"\n        });\n\n      case MessageBoxTypes.SUCCESS:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-success\"\n        });\n\n      case MessageBoxTypes.WARNING:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"message-warning\"\n        });\n\n      case MessageBoxTypes.HIGHLIGHT:\n        return /*#__PURE__*/React.createElement(Icon, {\n          name: \"hint\"\n        });\n    }\n\n    return null;\n  }, [icon, type]);\n  var titleToRender = useMemo(function () {\n    if (title) {\n      return title;\n    }\n\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return i18nBundle.getText(CONFIRMATION);\n\n      case MessageBoxTypes.ERROR:\n        return i18nBundle.getText(ERROR);\n\n      case MessageBoxTypes.INFORMATION:\n        return i18nBundle.getText(INFORMATION);\n\n      case MessageBoxTypes.SUCCESS:\n        return i18nBundle.getText(SUCCESS);\n\n      case MessageBoxTypes.WARNING:\n        return i18nBundle.getText(WARNING);\n\n      case MessageBoxTypes.HIGHLIGHT:\n        return i18nBundle.getText(HIGHLIGHT);\n    }\n\n    return null;\n  }, [title, type, i18nBundle]);\n  var actionsToRender = useMemo(function () {\n    if (actions && actions.length > 0) {\n      return actions;\n    }\n\n    if (type === MessageBoxTypes.CONFIRM) {\n      return [MessageBoxActions.OK, MessageBoxActions.CANCEL];\n    }\n\n    if (type === MessageBoxTypes.ERROR) {\n      return [MessageBoxActions.CLOSE];\n    }\n\n    return [MessageBoxActions.OK];\n  }, [actions, type]);\n  var handleOnClose = useCallback(function (e) {\n    var action = e.target.dataset.action;\n    onClose(enrichEventWithDetails(e, {\n      action: action\n    }));\n  }, [onClose]);\n  var dialogRef = useConsolidatedRef(ref);\n  useEffect(function () {\n    if (dialogRef.current) {\n      if (open) {\n        dialogRef.current.open();\n      } else {\n        dialogRef.current.close();\n      }\n    }\n  }, [open, dialogRef]);\n  var passThroughProps = usePassThroughHtmlProps(props, ['onClose']);\n  return /*#__PURE__*/React.createElement(Dialog, _extends({\n    slot: slot,\n    ref: dialogRef,\n    style: style,\n    tooltip: tooltip,\n    className: className,\n    onAfterClose: open ? handleOnClose : null,\n    header: /*#__PURE__*/React.createElement(\"header\", {\n      className: classes.header,\n      \"data-type\": type\n    }, !!iconToRender && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.icon\n    }, iconToRender), /*#__PURE__*/React.createElement(Title, {\n      level: TitleLevel.H5\n    }, titleToRender)),\n    footer: /*#__PURE__*/React.createElement(\"footer\", {\n      className: classes.footer\n    }, actionsToRender.map(function (action, index) {\n      var text = i18nBundle.getText(actionTextMap.get(action));\n      return /*#__PURE__*/React.createElement(Button, {\n        style: {\n          minWidth: '4rem'\n        },\n        key: action,\n        design: index === 0 ? ButtonDesign.Emphasized : ButtonDesign.Transparent,\n        onClick: handleOnClose,\n        \"data-action\": action\n      }, text);\n    }))\n  }, passThroughProps), /*#__PURE__*/React.createElement(Text, {\n    className: classes.content\n  }, children));\n});\nMessageBox.displayName = 'MessageBox';\nMessageBox.defaultProps = {\n  open: false,\n  title: null,\n  icon: null,\n  type: MessageBoxTypes.CONFIRM,\n  actions: []\n};\nexport { MessageBox };","map":{"version":3,"sources":["../src/components/MessageBox/MessageBox.jss.ts","../src/components/MessageBox/index.tsx"],"names":["style","header","display","height","CssSizeVariables","lineHeight","textAlign","width","alignItems","verticalAlign","padding","boxSizing","borderBottom","color","ThemingParameters","fontSize","sapNegativeElementColor","sapCriticalElementColor","sapPositiveElementColor","sapNeutralElementColor","sapInformativeElementColor","icon","marginRight","content","footer","justifyContent","actionTextMap","MessageBoxActions","useStyles","createComponentStyles","name","MessageBox","forwardRef","open","type","children","className","tooltip","slot","title","actions","onClose","props","i18nBundle","useI18nBundle","classes","iconToRender","useMemo","isValidElement","MessageBoxTypes","titleToRender","actionsToRender","handleOnClose","useCallback","action","e","enrichEventWithDetails","dialogRef","useConsolidatedRef","useEffect","passThroughProps","usePassThroughHtmlProps","TitleLevel","H5","text","minWidth","index","ButtonDesign"],"mappings":"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","sourcesContent":["import { CssSizeVariables } from '@ui5/webcomponents-react-base/lib/CssSizeVariables';\nimport { ThemingParameters } from '@ui5/webcomponents-react-base/lib/ThemingParameters';\n\nconst style = {\n  header: {\n    display: 'flex',\n    height: CssSizeVariables.sapWcrBarHeight,\n    lineHeight: CssSizeVariables.sapWcrBarHeight,\n    textAlign: 'center',\n    width: 'auto',\n    alignItems: 'center',\n    '& $icon': {\n      '& >*': {\n        verticalAlign: 'middle'\n      }\n    },\n    // justifyContent: 'center',\n    padding: '0.25rem 1rem',\n    boxSizing: 'border-box',\n    borderBottom: `1px solid var(--messageBoxBorderColor)`,\n    color: ThemingParameters.sapContent_LabelColor,\n    fontSize: '1rem',\n    '&[data-type=\"Error\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapErrorBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapErrorBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNegativeElementColor\n      }\n    },\n    '&[data-type=\"Warning\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapWarningBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapWarningBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapCriticalElementColor\n      }\n    },\n    '&[data-type=\"Success\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapSuccessBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapSuccessBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapPositiveElementColor\n      }\n    },\n    '&[data-type=\"Confirm\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n      }\n    },\n    '&[data-type=\"Information\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapNeutralBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapNeutralBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapNeutralElementColor\n      }\n    },\n    '&[data-type=\"Highlight\"]': {\n      '--sapPageFooter_BorderColor': ThemingParameters.sapInformationBorderColor,\n      '--messageBoxBorderColor': ThemingParameters.sapInformationBorderColor,\n      '& $icon': {\n        '--sapContent_NonInteractiveIconColor': ThemingParameters.sapInformativeElementColor\n      }\n    }\n  },\n  icon: {\n    marginRight: '0.5rem',\n    fontSize: '1rem',\n    width: '1rem'\n  },\n  content: {\n    padding: '1rem'\n  },\n  footer: {\n    height: CssSizeVariables.sapWcrBarHeight,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 0.5rem',\n    '& >*:not(:last-child)': {\n      marginRight: '0.5rem'\n    },\n    '& > ui5-button': {\n      display: 'flex'\n    }\n  }\n};\n\nexport default style;\n","import '@ui5/webcomponents-icons/dist/icons/hint';\nimport '@ui5/webcomponents-icons/dist/icons/message-error';\nimport '@ui5/webcomponents-icons/dist/icons/message-information';\nimport '@ui5/webcomponents-icons/dist/icons/message-success';\nimport '@ui5/webcomponents-icons/dist/icons/message-warning';\nimport '@ui5/webcomponents-icons/dist/icons/question-mark';\nimport { createComponentStyles } from '@ui5/webcomponents-react-base/lib/createComponentStyles';\nimport { useConsolidatedRef, useI18nBundle, usePassThroughHtmlProps } from '@ui5/webcomponents-react-base/lib/hooks';\nimport { enrichEventWithDetails } from '@ui5/webcomponents-react-base/lib/Utils';\n\nimport {\n  CONFIRMATION,\n  ERROR,\n  HIGHLIGHT,\n  INFORMATION,\n  ABORT,\n  CANCEL,\n  CLOSE,\n  DELETE,\n  IGNORE,\n  NO,\n  OK,\n  RETRY,\n  YES,\n  SUCCESS,\n  WARNING\n} from '@ui5/webcomponents-react/dist/assets/i18n/i18n-defaults';\nimport { Button } from '@ui5/webcomponents-react/lib/Button';\nimport { ButtonDesign } from '@ui5/webcomponents-react/lib/ButtonDesign';\nimport { Dialog } from '@ui5/webcomponents-react/lib/Dialog';\nimport { Icon } from '@ui5/webcomponents-react/lib/Icon';\nimport { MessageBoxActions } from '@ui5/webcomponents-react/lib/MessageBoxActions';\nimport { MessageBoxTypes } from '@ui5/webcomponents-react/lib/MessageBoxTypes';\nimport { Text } from '@ui5/webcomponents-react/lib/Text';\nimport { Title } from '@ui5/webcomponents-react/lib/Title';\nimport { TitleLevel } from '@ui5/webcomponents-react/lib/TitleLevel';\nimport React, { FC, forwardRef, isValidElement, ReactNode, Ref, useCallback, useEffect, useMemo } from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5DialogDomRef } from '../../interfaces/Ui5DialogDomRef';\nimport styles from './MessageBox.jss';\n\nconst actionTextMap = new Map();\nactionTextMap.set(MessageBoxActions.ABORT, ABORT);\nactionTextMap.set(MessageBoxActions.CANCEL, CANCEL);\nactionTextMap.set(MessageBoxActions.CLOSE, CLOSE);\nactionTextMap.set(MessageBoxActions.DELETE, DELETE);\nactionTextMap.set(MessageBoxActions.IGNORE, IGNORE);\nactionTextMap.set(MessageBoxActions.NO, NO);\nactionTextMap.set(MessageBoxActions.OK, OK);\nactionTextMap.set(MessageBoxActions.RETRY, RETRY);\nactionTextMap.set(MessageBoxActions.YES, YES);\n\nexport interface MessageBoxPropTypes extends CommonProps {\n  open?: boolean;\n  title?: string;\n  children: string;\n  actions?: MessageBoxActions[];\n  icon?: ReactNode;\n  type?: MessageBoxTypes;\n  onClose: (event: CustomEvent<{ action: MessageBoxActions }>) => void;\n}\n\nconst useStyles = createComponentStyles(styles, { name: 'MessageBox' });\n\n/**\n * <code>import { MessageBox } from '@ui5/webcomponents-react/lib/MessageBox';</code>\n */\nconst MessageBox: FC<MessageBoxPropTypes> = forwardRef((props: MessageBoxPropTypes, ref: Ref<Ui5DialogDomRef>) => {\n  const { open, type, children, className, style, tooltip, slot, title, icon, actions, onClose } = props;\n\n  const i18nBundle = useI18nBundle('@ui5/webcomponents-react');\n\n  const classes = useStyles();\n\n  const iconToRender = useMemo(() => {\n    if (isValidElement(icon)) return icon;\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return <Icon name=\"question-mark\" />;\n      case MessageBoxTypes.ERROR:\n        return <Icon name=\"message-error\" />;\n      case MessageBoxTypes.INFORMATION:\n        return <Icon name=\"message-information\" />;\n      case MessageBoxTypes.SUCCESS:\n        return <Icon name=\"message-success\" />;\n      case MessageBoxTypes.WARNING:\n        return <Icon name=\"message-warning\" />;\n      case MessageBoxTypes.HIGHLIGHT:\n        return <Icon name=\"hint\" />;\n    }\n\n    return null;\n  }, [icon, type]);\n\n  const titleToRender = useMemo(() => {\n    if (title) {\n      return title;\n    }\n    switch (type) {\n      case MessageBoxTypes.CONFIRM:\n        return i18nBundle.getText(CONFIRMATION);\n      case MessageBoxTypes.ERROR:\n        return i18nBundle.getText(ERROR);\n      case MessageBoxTypes.INFORMATION:\n        return i18nBundle.getText(INFORMATION);\n      case MessageBoxTypes.SUCCESS:\n        return i18nBundle.getText(SUCCESS);\n      case MessageBoxTypes.WARNING:\n        return i18nBundle.getText(WARNING);\n      case MessageBoxTypes.HIGHLIGHT:\n        return i18nBundle.getText(HIGHLIGHT);\n    }\n    return null;\n  }, [title, type, i18nBundle]);\n\n  const actionsToRender = useMemo(() => {\n    if (actions && actions.length > 0) {\n      return actions;\n    }\n    if (type === MessageBoxTypes.CONFIRM) {\n      return [MessageBoxActions.OK, MessageBoxActions.CANCEL];\n    }\n    if (type === MessageBoxTypes.ERROR) {\n      return [MessageBoxActions.CLOSE];\n    }\n    return [MessageBoxActions.OK];\n  }, [actions, type]);\n\n  const handleOnClose = useCallback(\n    (e) => {\n      const { action } = e.target.dataset;\n      onClose(enrichEventWithDetails(e, { action }));\n    },\n    [onClose]\n  );\n\n  const dialogRef = useConsolidatedRef<Ui5DialogDomRef>(ref);\n\n  useEffect(() => {\n    if (dialogRef.current) {\n      if (open) {\n        dialogRef.current.open();\n      } else {\n        dialogRef.current.close();\n      }\n    }\n  }, [open, dialogRef]);\n\n  const passThroughProps = usePassThroughHtmlProps(props, ['onClose']);\n\n  return (\n    <Dialog\n      slot={slot}\n      ref={dialogRef}\n      style={style}\n      tooltip={tooltip}\n      className={className}\n      onAfterClose={open ? handleOnClose : null}\n      header={\n        <header className={classes.header} data-type={type}>\n          {!!iconToRender && <div className={classes.icon}>{iconToRender}</div>}\n          <Title level={TitleLevel.H5}>{titleToRender}</Title>\n        </header>\n      }\n      footer={\n        <footer className={classes.footer}>\n          {actionsToRender.map((action, index) => {\n            const text = i18nBundle.getText(actionTextMap.get(action));\n            return (\n              <Button\n                style={{\n                  minWidth: '4rem'\n                }}\n                key={action}\n                design={index === 0 ? ButtonDesign.Emphasized : ButtonDesign.Transparent}\n                onClick={handleOnClose}\n                data-action={action}\n              >\n                {text}\n              </Button>\n            );\n          })}\n        </footer>\n      }\n      {...passThroughProps}\n    >\n      <Text className={classes.content}>{children}</Text>\n    </Dialog>\n  );\n});\n\nMessageBox.displayName = 'MessageBox';\n\nMessageBox.defaultProps = {\n  open: false,\n  title: null,\n  icon: null,\n  type: MessageBoxTypes.CONFIRM,\n  actions: []\n};\n\nexport { MessageBox };\n"]},"metadata":{},"sourceType":"module"}