{"ast":null,"code":"import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport RenderScheduler from \"@ui5/webcomponents-base/dist/RenderScheduler.js\";\nimport { isIE, isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport { isUp, isDown, isSpace, isEnter } from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/decline.js\";\nimport InputType from \"./types/InputType.js\";\nimport Popover from \"./Popover.js\"; // Templates\n\nimport InputTemplate from \"./generated/templates/InputTemplate.lit.js\";\nimport InputPopoverTemplate from \"./generated/templates/InputPopoverTemplate.lit.js\";\nimport { VALUE_STATE_SUCCESS, VALUE_STATE_INFORMATION, VALUE_STATE_ERROR, VALUE_STATE_WARNING, INPUT_SUGGESTIONS, INPUT_SUGGESTIONS_TITLE } from \"./generated/i18n/i18n-defaults.js\"; // Styles\n\nimport styles from \"./generated/themes/Input.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\n/**\n * @public\n */\n\nconst metadata = {\n  tag: \"ui5-input\",\n  managedSlots: true,\n  slots:\n  /** @lends sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Defines the icon to be displayed in the <code>ui5-input</code>.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    icon: {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the <code>ui5-input</code> suggestion items.\n     * <br><br>\n     * Example:\n     * <br><br>\n     * &lt;ui5-input show-suggestions><br>\n     * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #1\">&lt;/ui5-suggestion-item><br>\n     * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #2\">&lt;/ui5-suggestion-item><br>\n     * &lt;/ui5-input>\n     * <br>\n     * <ui5-input show-suggestions>\n     * <ui5-suggestion-item text=\"Item #1\"></ui5-suggestion-item>\n     * <ui5-suggestion-item text=\"Item #2\"></ui5-suggestion-item>\n     * </ui5-input>\n     * <br><br>\n     * <b>Note:</b> The suggestion would be displayed only if the <code>showSuggestions</code>\n     * property is set to <code>true</code>.\n     * <br><br>\n     * <b>Note:</b> The &lt;ui5-suggestion-item> is recommended to be used as a suggestion item.\n     * Importing the Input Suggestions Support feature:\n     * <br>\n     * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code>\n     * <br>\n     * also automatically imports the &lt;ui5-suggestion-item> for your convenience.\n     *\n     * @type {HTMLElement[]}\n     * @slot\n     * @public\n     */\n    \"default\": {\n      propertyName: \"suggestionItems\",\n      type: HTMLElement\n    },\n\n    /**\n     * The slot is used for native <code>input</code> HTML element to enable form submit,\n     * when <code>name</code> property is set.\n     * @type {HTMLElement[]}\n     * @private\n     */\n    formSupport: {\n      type: HTMLElement\n    },\n\n    /**\n     * Defines the value state message that will be displayed as pop up under the <code>ui5-input</code>.\n     * <br><br>\n     *\n     * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n     * <br>\n     * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n     * when the <code>ui5-input</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n     * <br>\n     * <b>Note:</b> If the <code>ui5-input</code> has <code>suggestionItems</code>,\n     * the <code>valueStateMessage</code> would be displayed as part of the same popover, if used on desktop, or dialog - on phone.\n     * @type {HTMLElement[]}\n     * @since 1.0.0-rc.6\n     * @slot\n     * @public\n     */\n    valueStateMessage: {\n      type: HTMLElement\n    }\n  },\n  properties:\n  /** @lends  sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Defines whether the <code>ui5-input</code> is in disabled state.\n     * <br><br>\n     * <b>Note:</b> A disabled <code>ui5-input</code> is completely noninteractive.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    disabled: {\n      type: Boolean\n    },\n\n    /**\n     * Defines a short hint intended to aid the user with data entry when the\n     * <code>ui5-input</code> has no value.\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    placeholder: {\n      type: String\n    },\n\n    /**\n     * Defines whether the <code>ui5-input</code> is read-only.\n     * <br><br>\n     * <b>Note:</b> A read-only <code>ui5-input</code> is not editable,\n     * but still provides visual feedback upon user interaction.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    readonly: {\n      type: Boolean\n    },\n\n    /**\n     * Defines whether the <code>ui5-input</code> is required.\n     *\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     * @since 1.0.0-rc.3\n     */\n    required: {\n      type: Boolean\n    },\n\n    /**\n     * Defines the HTML type of the <code>ui5-input</code>.\n     * Available options are: <code>Text</code>, <code>Email</code>,\n     * <code>Number</code>, <code>Password</code>, <code>Tel</code>, and <code>URL</code>.\n     * <br><br>\n     * <b>Notes:</b>\n     * <ul>\n     * <li>The particular effect of this property differs depending on the browser\n     * and the current language settings, especially for type <code>Number</code>.</li>\n     * <li>The property is mostly intended to be used with touch devices\n     * that use different soft keyboard layouts depending on the given input type.</li>\n     * </ul>\n     *\n     * @type {InputType}\n     * @defaultvalue \"Text\"\n     * @public\n     */\n    type: {\n      type: InputType,\n      defaultValue: InputType.Text\n    },\n\n    /**\n     * Defines the value of the <code>ui5-input</code>.\n     * <br><br>\n     * <b>Note:</b> The property is updated upon typing.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    value: {\n      type: String\n    },\n\n    /**\n     * Defines the value state of the <code>ui5-input</code>.\n     * <br><br>\n     * Available options are:\n     * <ul>\n     * <li><code>None</code></li>\n     * <li><code>Error</code></li>\n     * <li><code>Warning</code></li>\n     * <li><code>Success</code></li>\n     * <li><code>Information</code></li>\n     * </ul>\n     *\n     * @type {ValueState}\n     * @defaultvalue \"None\"\n     * @public\n     */\n    valueState: {\n      type: ValueState,\n      defaultValue: ValueState.None\n    },\n\n    /**\n     * Determines the name with which the <code>ui5-input</code> will be submitted in an HTML form.\n     *\n     * <br><br>\n     * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n     * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n     *\n     * <br><br>\n     * <b>Note:</b> When set, a native <code>input</code> HTML element\n     * will be created inside the <code>ui5-input</code> so that it can be submitted as\n     * part of an HTML form. Do not use this property unless you need to submit a form.\n     *\n     * @type {string}\n     * @defaultvalue \"\"\n     * @public\n     */\n    name: {\n      type: String\n    },\n\n    /**\n     * Defines whether the <code>ui5-input</code> should show suggestions, if such are present.\n     * <br><br>\n     * <b>Note:</b>\n     * Don`t forget to import the <code>InputSuggestions</code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"</code> to enable this functionality.\n     * @type {boolean}\n     * @defaultvalue false\n     * @public\n     */\n    showSuggestions: {\n      type: Boolean\n    },\n\n    /**\n     * Sets the maximum number of characters available in the input field.\n     *\n     * @type {Integer}\n     * @since 1.0.0-rc.5\n     * @public\n     */\n    maxlength: {\n      type: Integer\n    },\n\n    /**\n     * @private\n     */\n    focused: {\n      type: Boolean\n    },\n    _input: {\n      type: Object\n    },\n    _inputAccInfo: {\n      type: Object\n    },\n    _wrapperAccInfo: {\n      type: Object\n    },\n    _inputWidth: {\n      type: Integer\n    },\n    _listWidth: {\n      type: Integer\n    },\n    _isPopoverOpen: {\n      type: Boolean,\n      noAttribute: true\n    }\n  },\n  events:\n  /** @lends  sap.ui.webcomponents.main.Input.prototype */\n  {\n    /**\n     * Fired when the input operation has finished by pressing Enter or on focusout.\n     *\n     * @event\n     * @public\n     */\n    change: {},\n\n    /**\n     * Fired when the value of the <code>ui5-input</code> changes at each keystroke,\n     * and when a suggestion item has been selected.\n     *\n     * @event\n     * @public\n     */\n    input: {},\n\n    /**\n     * Fired when user presses Enter key on the <code>ui5-input</code>.\n     * <br><br>\n     * <b>Note:</b> The event is fired independent of whether there was a change before or not.\n     * If change was performed, the event is fired after the change event.\n     * The event is also fired when an item of the select list is selected by pressing Enter.\n     *\n     * @event\n     * @public\n     */\n    submit: {},\n\n    /**\n     * Fired when a suggestion item, that is displayed in the suggestion popup, is selected.\n     *\n     * @event\n     * @param {HTMLElement} item The selected item\n     * @public\n     */\n    suggestionItemSelect: {\n      detail: {\n        item: {\n          type: HTMLElement\n        }\n      }\n    }\n  }\n};\n/**\n * @class\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-input</code> component allows the user to enter and edit text or numeric values in one line.\n * <br>\n * Additionally, you can provide <code>suggestionItems</code>,\n * that are displayed in a popover right under the input.\n * <br><br>\n * The text field can be editable or read-only (<code>readonly</code> property),\n * and it can be enabled or disabled (<code>enabled</code> property).\n * To visualize semantic states, such as \"error\" or \"warning\", the <code>valueState</code> property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n * <br><br>\n * <b>Note:</b> If you are using the <code>ui5-input</code> as a single npm module,\n * don't forget to import the <code>InputSuggestions</code> module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Input.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code> (optional - for input suggestions support)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Input\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-input\n * @appenddocs SuggestionItem\n * @public\n */\n\nclass Input extends UI5Element {\n  static get metadata() {\n    return metadata;\n  }\n\n  static get render() {\n    return litRender;\n  }\n\n  static get template() {\n    return InputTemplate;\n  }\n\n  static get staticAreaTemplate() {\n    return InputPopoverTemplate;\n  }\n\n  static get styles() {\n    return styles;\n  }\n\n  static get staticAreaStyles() {\n    return [ResponsivePopoverCommonCss, ValueStateMessageCss];\n  }\n\n  constructor() {\n    super(); // Indicates if there is selected suggestionItem.\n\n    this.hasSuggestionItemSelected = false; // Represents the value before user moves selection between the suggestion items.\n    // Used to register and fire \"input\" event upon [SPACE] or [ENTER].\n    // Note: the property \"value\" is updated upon selection move and can`t be used.\n\n    this.valueBeforeItemSelection = \"\"; // tracks the value between focus in and focus out to detect that change event should be fired.\n\n    this.previousValue = undefined; // Indicates, if the component is rendering for first time.\n\n    this.firstRendering = true; // all sementic events\n\n    this.EVENT_SUBMIT = \"submit\";\n    this.EVENT_CHANGE = \"change\";\n    this.EVENT_INPUT = \"input\";\n    this.EVENT_SUGGESTION_ITEM_SELECT = \"suggestionItemSelect\"; // all user interactions\n\n    this.ACTION_ENTER = \"enter\";\n    this.ACTION_USER_INPUT = \"input\"; // Suggestions array initialization\n\n    this.suggestionsTexts = [];\n    this.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n    this._handleResizeBound = this._handleResize.bind(this);\n  }\n\n  onEnterDOM() {\n    ResizeHandler.register(this, this._handleResizeBound);\n  }\n\n  onExitDOM() {\n    ResizeHandler.deregister(this, this._handleResizeBound);\n  }\n\n  onBeforeRendering() {\n    if (this.showSuggestions) {\n      this.enableSuggestions();\n      this.suggestionsTexts = this.Suggestions.defaultSlotProperties();\n    }\n\n    const FormSupport = getFeature(\"FormSupport\");\n\n    if (FormSupport) {\n      FormSupport.syncNativeHiddenInput(this);\n    } else if (this.name) {\n      console.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n    }\n  }\n\n  onAfterRendering() {\n    if (!this.firstRendering && !isPhone() && this.Suggestions) {\n      const shouldOpenSuggestions = this.shouldOpenSuggestions();\n      this.updateStaticAreaItemContentDensity();\n      this.Suggestions.toggle(shouldOpenSuggestions);\n      RenderScheduler.whenFinished().then(async () => {\n        this._listWidth = await this.Suggestions._getListWidth();\n      });\n\n      if (!isPhone() && shouldOpenSuggestions) {\n        // Set initial focus to the native input\n        this.getInputDOMRef().focus();\n      }\n    }\n\n    if (!this.firstRendering && this.hasValueStateMessage) {\n      this.toggle(this.shouldDisplayOnlyValueStateMessage);\n    }\n\n    this.firstRendering = false;\n  }\n\n  _onkeydown(event) {\n    if (isUp(event)) {\n      return this._handleUp(event);\n    }\n\n    if (isDown(event)) {\n      return this._handleDown(event);\n    }\n\n    if (isSpace(event)) {\n      return this._handleSpace(event);\n    }\n\n    if (isEnter(event)) {\n      return this._handleEnter(event);\n    }\n\n    this._keyDown = true;\n  }\n\n  _onkeyup(event) {\n    this._keyDown = false;\n  }\n  /* Event handling */\n\n\n  _handleUp(event) {\n    if (this.Suggestions && this.Suggestions.isOpened()) {\n      this.Suggestions.onUp(event);\n    }\n  }\n\n  _handleDown(event) {\n    if (this.Suggestions && this.Suggestions.isOpened()) {\n      this.Suggestions.onDown(event);\n    }\n  }\n\n  _handleSpace(event) {\n    if (this.Suggestions) {\n      this.Suggestions.onSpace(event);\n    }\n  }\n\n  _handleEnter(event) {\n    const itemPressed = !!(this.Suggestions && this.Suggestions.onEnter(event));\n\n    if (!itemPressed) {\n      this.fireEventByAction(this.ACTION_ENTER);\n    }\n  }\n\n  _onfocusin(event) {\n    this.focused = true; // invalidating property\n\n    this.previousValue = this.value;\n  }\n\n  _onfocusout(event) {\n    // if focusout is triggered by pressing on suggestion item skip invalidation, because re-rendering\n    // will happen before \"itemPress\" event, which will make item \"active\" state not visualized\n    if (this.Suggestions && event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.contains(this.Suggestions.responsivePopover)) {\n      return;\n    }\n\n    if (this.popover) {\n      this.popover.close(false, false, true);\n    }\n\n    this.previousValue = \"\";\n    this.focused = false; // invalidating property\n  }\n\n  _click(event) {\n    if (isPhone() && !this.readonly && this.Suggestions) {\n      this.updateStaticAreaItemContentDensity();\n      this.Suggestions.open(this);\n      this.isRespPopoverOpen = true;\n    }\n  }\n\n  _handleChange(event) {\n    this.fireEvent(this.EVENT_CHANGE);\n  }\n\n  _handleInput(event) {\n    if (event.target === this.getInputDOMRef()) {\n      // stop the native event, as the semantic \"input\" would be fired.\n      event.stopImmediatePropagation();\n    }\n    /* skip calling change event when an input with a placeholder is focused on IE\n    \t- value of the host and the internal input should be differnt in case of actual input\n    \t- input is called when a key is pressed => keyup should not be called yet\n    */\n\n\n    const skipFiring = this.getInputDOMRef().value === this.value && isIE() && !this._keyDown && !!this.placeholder;\n    !skipFiring && this.fireEventByAction(this.ACTION_USER_INPUT);\n    this.hasSuggestionItemSelected = false;\n\n    if (this.Suggestions) {\n      this.Suggestions.updateSelectedItemPosition(null);\n    }\n  }\n\n  _handleResize() {\n    if (this.hasValueStateMessage) {\n      this._inputWidth = this.offsetWidth;\n    }\n  }\n\n  _closeRespPopover() {\n    this.Suggestions.close();\n  }\n\n  _afterOpenPopover() {\n    // Set initial focus to the native input\n    if (isPhone()) {\n      this.getInputDOMRef().focus();\n    }\n  }\n\n  _afterClosePopover() {\n    // close device's keyboard and prevent further typing\n    if (isPhone()) {\n      this.blur();\n    }\n  }\n\n  toggle(isToggled) {\n    if (isToggled && !this.isRespPopoverOpen) {\n      this.openPopover();\n    } else {\n      this.closePopover();\n    }\n  }\n  /**\n   * Checks if the popover is open.\n   * @returns {Boolean} true if the popover is open, false otherwise\n   * @public\n   */\n\n\n  isOpen() {\n    return !!this._isPopoverOpen;\n  }\n\n  async openPopover() {\n    this._isPopoverOpen = true;\n    this.popover = await this._getPopover();\n    this.popover.openBy(this);\n  }\n\n  closePopover() {\n    if (this.isOpen()) {\n      this._isPopoverOpen = false;\n      this.popover.close();\n    }\n  }\n\n  async _getPopover() {\n    const staticAreaItem = await this.getStaticAreaItemDomRef();\n    return staticAreaItem.querySelector(\"ui5-popover\");\n  }\n\n  enableSuggestions() {\n    if (this.Suggestions) {\n      return;\n    }\n\n    const Suggestions = getFeature(\"InputSuggestions\");\n\n    if (Suggestions) {\n      this.Suggestions = new Suggestions(this, \"suggestionItems\");\n    } else {\n      throw new Error(`You have to import \"@ui5/webcomponents/dist/features/InputSuggestions.js\" module to use ui5-input suggestions`);\n    }\n  }\n\n  shouldOpenSuggestions() {\n    return !!(this.suggestionItems.length && this.focused && this.showSuggestions && !this.hasSuggestionItemSelected);\n  }\n\n  selectSuggestion(item, keyboardUsed) {\n    if (item.group) {\n      return;\n    }\n\n    const itemText = item.text || item.textContent; // keep textContent for compatibility\n\n    const fireInput = keyboardUsed ? this.valueBeforeItemSelection !== itemText : this.value !== itemText;\n    this.hasSuggestionItemSelected = true;\n    this.fireEvent(this.EVENT_SUGGESTION_ITEM_SELECT, {\n      item\n    });\n\n    if (fireInput) {\n      this.value = itemText;\n      this.valueBeforeItemSelection = itemText;\n      this.fireEvent(this.EVENT_INPUT);\n      this.fireEvent(this.EVENT_CHANGE);\n    }\n  }\n\n  previewSuggestion(item) {\n    this.valueBeforeItemSelection = this.value;\n    this.value = item.group ? \"\" : item.textContent;\n  }\n\n  fireEventByAction(action) {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    const inputValue = this.getInputValue();\n    const isSubmit = action === this.ACTION_ENTER;\n    const isUserInput = action === this.ACTION_USER_INPUT;\n    this.value = inputValue;\n\n    if (isUserInput) {\n      // input\n      this.fireEvent(this.EVENT_INPUT); // Angular two way data binding\n\n      this.fireEvent(\"value-changed\");\n      return;\n    }\n\n    if (isSubmit) {\n      // submit\n      this.fireEvent(this.EVENT_SUBMIT);\n    } // In IE, pressing the ENTER does not fire change\n\n\n    const valueChanged = this.previousValue !== undefined && this.previousValue !== this.value;\n\n    if (isIE() && isSubmit && valueChanged) {\n      this.fireEvent(this.EVENT_CHANGE);\n    }\n  }\n\n  getInputValue() {\n    const inputDOM = this.getDomRef();\n\n    if (inputDOM) {\n      return this.getInputDOMRef().value;\n    }\n\n    return \"\";\n  }\n\n  getInputDOMRef() {\n    let inputDomRef;\n\n    if (isPhone()) {\n      inputDomRef = this.Suggestions && this.Suggestions.responsivePopover.querySelector(\".ui5-input-inner-phone\");\n    }\n\n    if (!inputDomRef) {\n      inputDomRef = this.getDomRef().querySelector(`#${this.getInputId()}`);\n    }\n\n    return inputDomRef;\n  }\n\n  getLabelableElementId() {\n    return this.getInputId();\n  }\n\n  getInputId() {\n    return `${this._id}-inner`;\n  }\n  /* Suggestions interface  */\n\n\n  onItemFocused() {}\n\n  onItemSelected(item, keyboardUsed) {\n    this.selectSuggestion(item, keyboardUsed);\n  }\n\n  onItemPreviewed(item) {\n    this.previewSuggestion(item);\n  }\n\n  onOpen() {}\n\n  onClose() {}\n\n  valueStateTextMappings() {\n    const i18nBundle = this.i18nBundle;\n    return {\n      \"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n      \"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION),\n      \"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n      \"Warning\": i18nBundle.getText(VALUE_STATE_WARNING)\n    };\n  }\n\n  get _readonly() {\n    return this.readonly && !this.disabled;\n  }\n\n  get _headerTitleText() {\n    return this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n  }\n\n  get inputType() {\n    return this.type.toLowerCase();\n  }\n\n  get suggestionsTextId() {\n    return this.showSuggestions ? `${this._id}-suggestionsText` : \"\";\n  }\n\n  get valueStateTextId() {\n    return this.hasValueState ? `${this._id}-valueStateDesc` : \"\";\n  }\n\n  get accInfo() {\n    const ariaHasPopupDefault = this.showSuggestions ? \"true\" : undefined;\n    const ariaAutoCompleteDefault = this.showSuggestions ? \"list\" : undefined;\n    return {\n      \"wrapper\": {},\n      \"input\": {\n        \"ariaDescribedBy\": this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId}`.trim(),\n        \"ariaInvalid\": this.valueState === ValueState.Error ? \"true\" : undefined,\n        \"ariaHasPopup\": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,\n        \"ariaAutoComplete\": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,\n        \"role\": this._inputAccInfo && this._inputAccInfo.role,\n        \"ariaOwns\": this._inputAccInfo && this._inputAccInfo.ariaOwns,\n        \"ariaExpanded\": this._inputAccInfo && this._inputAccInfo.ariaExpanded,\n        \"ariaDescription\": this._inputAccInfo && this._inputAccInfo.ariaDescription\n      }\n    };\n  }\n\n  get classes() {\n    return {\n      popoverValueState: {\n        \"ui5-valuestatemessage-root\": true,\n        \"ui5-valuestatemessage--success\": this.valueState === ValueState.Success,\n        \"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n        \"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning,\n        \"ui5-valuestatemessage--information\": this.valueState === ValueState.Information\n      }\n    };\n  }\n\n  get styles() {\n    return {\n      popoverHeader: {\n        \"width\": `${this._inputWidth}px`\n      },\n      suggestionPopoverHeader: {\n        \"display\": this._listWidth === 0 ? \"none\" : \"inline-block\",\n        \"width\": `${this._listWidth}px`,\n        \"padding\": \"0.5625rem 1rem\"\n      }\n    };\n  }\n\n  get valueStateMessageText() {\n    const valueStateMessage = this.valueStateMessage.map(x => x.cloneNode(true));\n    return valueStateMessage;\n  }\n\n  get shouldDisplayOnlyValueStateMessage() {\n    return this.hasValueStateMessage && !this.shouldOpenSuggestions() && this.focused;\n  }\n\n  get shouldDisplayDefaultValueStateMessage() {\n    return !this.valueStateMessage.length && this.hasValueStateMessage;\n  }\n\n  get hasValueState() {\n    return this.valueState !== ValueState.None;\n  }\n\n  get hasValueStateMessage() {\n    return this.hasValueState && this.valueState !== ValueState.Success;\n  }\n\n  get valueStateText() {\n    return this.valueStateTextMappings()[this.valueState];\n  }\n\n  get suggestionsText() {\n    return this.i18nBundle.getText(INPUT_SUGGESTIONS);\n  }\n\n  get _isPhone() {\n    return isPhone();\n  }\n\n  static async onDefine() {\n    await Promise.all([Popover.define(), fetchI18nBundle(\"@ui5/webcomponents\")]);\n  }\n\n}\n\nInput.define();\nexport default Input;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents/dist/Input.js"],"names":["UI5Element","litRender","ResizeHandler","RenderScheduler","isIE","isPhone","ValueState","getFeature","isUp","isDown","isSpace","isEnter","Integer","fetchI18nBundle","getI18nBundle","InputType","Popover","InputTemplate","InputPopoverTemplate","VALUE_STATE_SUCCESS","VALUE_STATE_INFORMATION","VALUE_STATE_ERROR","VALUE_STATE_WARNING","INPUT_SUGGESTIONS","INPUT_SUGGESTIONS_TITLE","styles","ResponsivePopoverCommonCss","ValueStateMessageCss","metadata","tag","managedSlots","slots","icon","type","HTMLElement","propertyName","formSupport","valueStateMessage","properties","disabled","Boolean","placeholder","String","readonly","required","defaultValue","Text","value","valueState","None","name","showSuggestions","maxlength","focused","_input","Object","_inputAccInfo","_wrapperAccInfo","_inputWidth","_listWidth","_isPopoverOpen","noAttribute","events","change","input","submit","suggestionItemSelect","detail","item","Input","render","template","staticAreaTemplate","staticAreaStyles","constructor","hasSuggestionItemSelected","valueBeforeItemSelection","previousValue","undefined","firstRendering","EVENT_SUBMIT","EVENT_CHANGE","EVENT_INPUT","EVENT_SUGGESTION_ITEM_SELECT","ACTION_ENTER","ACTION_USER_INPUT","suggestionsTexts","i18nBundle","_handleResizeBound","_handleResize","bind","onEnterDOM","register","onExitDOM","deregister","onBeforeRendering","enableSuggestions","Suggestions","defaultSlotProperties","FormSupport","syncNativeHiddenInput","console","warn","onAfterRendering","shouldOpenSuggestions","updateStaticAreaItemContentDensity","toggle","whenFinished","then","_getListWidth","getInputDOMRef","focus","hasValueStateMessage","shouldDisplayOnlyValueStateMessage","_onkeydown","event","_handleUp","_handleDown","_handleSpace","_handleEnter","_keyDown","_onkeyup","isOpened","onUp","onDown","onSpace","itemPressed","onEnter","fireEventByAction","_onfocusin","_onfocusout","relatedTarget","shadowRoot","contains","responsivePopover","popover","close","_click","open","isRespPopoverOpen","_handleChange","fireEvent","_handleInput","target","stopImmediatePropagation","skipFiring","updateSelectedItemPosition","offsetWidth","_closeRespPopover","_afterOpenPopover","_afterClosePopover","blur","isToggled","openPopover","closePopover","isOpen","_getPopover","openBy","staticAreaItem","getStaticAreaItemDomRef","querySelector","Error","suggestionItems","length","selectSuggestion","keyboardUsed","group","itemText","text","textContent","fireInput","previewSuggestion","action","inputValue","getInputValue","isSubmit","isUserInput","valueChanged","inputDOM","getDomRef","inputDomRef","getInputId","getLabelableElementId","_id","onItemFocused","onItemSelected","onItemPreviewed","onOpen","onClose","valueStateTextMappings","getText","_readonly","_headerTitleText","inputType","toLowerCase","suggestionsTextId","valueStateTextId","hasValueState","accInfo","ariaHasPopupDefault","ariaAutoCompleteDefault","ariaDescribedBy","trim","ariaHasPopup","ariaAutoComplete","role","ariaOwns","ariaExpanded","ariaDescription","classes","popoverValueState","Success","Warning","Information","popoverHeader","suggestionPopoverHeader","valueStateMessageText","map","x","cloneNode","shouldDisplayDefaultValueStateMessage","valueStateText","suggestionsText","_isPhone","onDefine","Promise","all","define"],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport ResizeHandler from \"@ui5/webcomponents-base/dist/delegate/ResizeHandler.js\";\nimport RenderScheduler from \"@ui5/webcomponents-base/dist/RenderScheduler.js\";\nimport { isIE, isPhone } from \"@ui5/webcomponents-base/dist/Device.js\";\nimport ValueState from \"@ui5/webcomponents-base/dist/types/ValueState.js\";\nimport { getFeature } from \"@ui5/webcomponents-base/dist/FeaturesRegistry.js\";\nimport {\n\tisUp,\n\tisDown,\n\tisSpace,\n\tisEnter,\n} from \"@ui5/webcomponents-base/dist/Keys.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport { fetchI18nBundle, getI18nBundle } from \"@ui5/webcomponents-base/dist/i18nBundle.js\";\nimport \"@ui5/webcomponents-icons/dist/icons/decline.js\";\nimport InputType from \"./types/InputType.js\";\nimport Popover from \"./Popover.js\";\n// Templates\nimport InputTemplate from \"./generated/templates/InputTemplate.lit.js\";\nimport InputPopoverTemplate from \"./generated/templates/InputPopoverTemplate.lit.js\";\n\nimport {\n\tVALUE_STATE_SUCCESS,\n\tVALUE_STATE_INFORMATION,\n\tVALUE_STATE_ERROR,\n\tVALUE_STATE_WARNING,\n\tINPUT_SUGGESTIONS,\n\tINPUT_SUGGESTIONS_TITLE,\n} from \"./generated/i18n/i18n-defaults.js\";\n\n// Styles\nimport styles from \"./generated/themes/Input.css.js\";\nimport ResponsivePopoverCommonCss from \"./generated/themes/ResponsivePopoverCommon.css.js\";\nimport ValueStateMessageCss from \"./generated/themes/ValueStateMessage.css.js\";\n\n/**\n * @public\n */\nconst metadata = {\n\ttag: \"ui5-input\",\n\tmanagedSlots: true,\n\tslots: /** @lends sap.ui.webcomponents.main.Input.prototype */ {\n\n\t\t/**\n\t\t * Defines the icon to be displayed in the <code>ui5-input</code>.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\ticon: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the <code>ui5-input</code> suggestion items.\n\t\t * <br><br>\n\t\t * Example:\n\t\t * <br><br>\n\t\t * &lt;ui5-input show-suggestions><br>\n\t\t * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #1\">&lt;/ui5-suggestion-item><br>\n\t\t * &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=\"Item #2\">&lt;/ui5-suggestion-item><br>\n\t\t * &lt;/ui5-input>\n\t\t * <br>\n\t\t * <ui5-input show-suggestions>\n\t\t * <ui5-suggestion-item text=\"Item #1\"></ui5-suggestion-item>\n\t\t * <ui5-suggestion-item text=\"Item #2\"></ui5-suggestion-item>\n\t\t * </ui5-input>\n\t\t * <br><br>\n\t\t * <b>Note:</b> The suggestion would be displayed only if the <code>showSuggestions</code>\n\t\t * property is set to <code>true</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The &lt;ui5-suggestion-item> is recommended to be used as a suggestion item.\n\t\t * Importing the Input Suggestions Support feature:\n\t\t * <br>\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code>\n\t\t * <br>\n\t\t * also automatically imports the &lt;ui5-suggestion-item> for your convenience.\n\t\t *\n\t\t * @type {HTMLElement[]}\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\t\"default\": {\n\t\t\tpropertyName: \"suggestionItems\",\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * The slot is used for native <code>input</code> HTML element to enable form submit,\n\t\t * when <code>name</code> property is set.\n\t\t * @type {HTMLElement[]}\n\t\t * @private\n\t\t */\n\t\tformSupport: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state message that will be displayed as pop up under the <code>ui5-input</code>.\n\t\t * <br><br>\n\t\t *\n\t\t * <b>Note:</b> If not specified, a default text (in the respective language) will be displayed.\n\t\t * <br>\n\t\t * <b>Note:</b> The <code>valueStateMessage</code> would be displayed,\n\t\t * when the <code>ui5-input</code> is in <code>Information</code>, <code>Warning</code> or <code>Error</code> value state.\n\t\t * <br>\n\t\t * <b>Note:</b> If the <code>ui5-input</code> has <code>suggestionItems</code>,\n\t\t * the <code>valueStateMessage</code> would be displayed as part of the same popover, if used on desktop, or dialog - on phone.\n\t\t * @type {HTMLElement[]}\n\t\t * @since 1.0.0-rc.6\n\t\t * @slot\n\t\t * @public\n\t\t */\n\t\tvalueStateMessage: {\n\t\t\ttype: HTMLElement,\n\t\t},\n\t},\n\tproperties: /** @lends  sap.ui.webcomponents.main.Input.prototype */  {\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-input</code> is in disabled state.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A disabled <code>ui5-input</code> is completely noninteractive.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tdisabled: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines a short hint intended to aid the user with data entry when the\n\t\t * <code>ui5-input</code> has no value.\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tplaceholder: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-input</code> is read-only.\n\t\t * <br><br>\n\t\t * <b>Note:</b> A read-only <code>ui5-input</code> is not editable,\n\t\t * but still provides visual feedback upon user interaction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\treadonly: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-input</code> is required.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t * @since 1.0.0-rc.3\n\t\t */\n\t\trequired: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Defines the HTML type of the <code>ui5-input</code>.\n\t\t * Available options are: <code>Text</code>, <code>Email</code>,\n\t\t * <code>Number</code>, <code>Password</code>, <code>Tel</code>, and <code>URL</code>.\n\t\t * <br><br>\n\t\t * <b>Notes:</b>\n\t\t * <ul>\n\t\t * <li>The particular effect of this property differs depending on the browser\n\t\t * and the current language settings, especially for type <code>Number</code>.</li>\n\t\t * <li>The property is mostly intended to be used with touch devices\n\t\t * that use different soft keyboard layouts depending on the given input type.</li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {InputType}\n\t\t * @defaultvalue \"Text\"\n\t\t * @public\n\t\t */\n\t\ttype: {\n\t\t\ttype: InputType,\n\t\t\tdefaultValue: InputType.Text,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value of the <code>ui5-input</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The property is updated upon typing.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines the value state of the <code>ui5-input</code>.\n\t\t * <br><br>\n\t\t * Available options are:\n\t\t * <ul>\n\t\t * <li><code>None</code></li>\n\t\t * <li><code>Error</code></li>\n\t\t * <li><code>Warning</code></li>\n\t\t * <li><code>Success</code></li>\n\t\t * <li><code>Information</code></li>\n\t\t * </ul>\n\t\t *\n\t\t * @type {ValueState}\n\t\t * @defaultvalue \"None\"\n\t\t * @public\n\t\t */\n\t\tvalueState: {\n\t\t\ttype: ValueState,\n\t\t\tdefaultValue: ValueState.None,\n\t\t},\n\n\t\t/**\n\t\t * Determines the name with which the <code>ui5-input</code> will be submitted in an HTML form.\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Important:</b> For the <code>name</code> property to have effect, you must add the following import to your project:\n\t\t * <code>import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";</code>\n\t\t *\n\t\t * <br><br>\n\t\t * <b>Note:</b> When set, a native <code>input</code> HTML element\n\t\t * will be created inside the <code>ui5-input</code> so that it can be submitted as\n\t\t * part of an HTML form. Do not use this property unless you need to submit a form.\n\t\t *\n\t\t * @type {string}\n\t\t * @defaultvalue \"\"\n\t\t * @public\n\t\t */\n\t\tname: {\n\t\t\ttype: String,\n\t\t},\n\n\t\t/**\n\t\t * Defines whether the <code>ui5-input</code> should show suggestions, if such are present.\n\t\t * <br><br>\n\t\t * <b>Note:</b>\n\t\t * Don`t forget to import the <code>InputSuggestions</code> module from <code>\"@ui5/webcomponents/dist/features/InputSuggestions.js\"</code> to enable this functionality.\n\t\t * @type {boolean}\n\t\t * @defaultvalue false\n\t\t * @public\n\t\t */\n\t\tshowSuggestions: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t/**\n\t\t * Sets the maximum number of characters available in the input field.\n\t\t *\n\t\t * @type {Integer}\n\t\t * @since 1.0.0-rc.5\n\t\t * @public\n\t\t */\n\t\tmaxlength: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tfocused: {\n\t\t\ttype: Boolean,\n\t\t},\n\n\t\t_input: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_inputAccInfo: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_wrapperAccInfo: {\n\t\t\ttype: Object,\n\t\t},\n\n\t\t_inputWidth: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t_listWidth: {\n\t\t\ttype: Integer,\n\t\t},\n\n\t\t_isPopoverOpen: {\n\t\t\ttype: Boolean,\n\t\t\tnoAttribute: true,\n\t\t},\n\t},\n\tevents: /** @lends  sap.ui.webcomponents.main.Input.prototype */ {\n\t\t/**\n\t\t * Fired when the input operation has finished by pressing Enter or on focusout.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tchange: {},\n\n\t\t/**\n\t\t * Fired when the value of the <code>ui5-input</code> changes at each keystroke,\n\t\t * and when a suggestion item has been selected.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tinput: {},\n\n\t\t/**\n\t\t * Fired when user presses Enter key on the <code>ui5-input</code>.\n\t\t * <br><br>\n\t\t * <b>Note:</b> The event is fired independent of whether there was a change before or not.\n\t\t * If change was performed, the event is fired after the change event.\n\t\t * The event is also fired when an item of the select list is selected by pressing Enter.\n\t\t *\n\t\t * @event\n\t\t * @public\n\t\t */\n\t\tsubmit: {},\n\n\t\t/**\n\t\t * Fired when a suggestion item, that is displayed in the suggestion popup, is selected.\n\t\t *\n\t\t * @event\n\t\t * @param {HTMLElement} item The selected item\n\t\t * @public\n\t\t */\n\t\tsuggestionItemSelect: {\n\t\t\tdetail: {\n\t\t\t\titem: { type: HTMLElement },\n\t\t\t},\n\t\t},\n\t},\n};\n\n/**\n * @class\n * <h3 class=\"comment-api-title\">Overview</h3>\n *\n * The <code>ui5-input</code> component allows the user to enter and edit text or numeric values in one line.\n * <br>\n * Additionally, you can provide <code>suggestionItems</code>,\n * that are displayed in a popover right under the input.\n * <br><br>\n * The text field can be editable or read-only (<code>readonly</code> property),\n * and it can be enabled or disabled (<code>enabled</code> property).\n * To visualize semantic states, such as \"error\" or \"warning\", the <code>valueState</code> property is provided.\n * When the user makes changes to the text, the change event is fired,\n * which enables you to react on any text change.\n * <br><br>\n * <b>Note:</b> If you are using the <code>ui5-input</code> as a single npm module,\n * don't forget to import the <code>InputSuggestions</code> module from\n * \"@ui5/webcomponents/dist/features/InputSuggestions.js\"\n * to enable the suggestions functionality.\n *\n * <h3>ES6 Module Import</h3>\n *\n * <code>import \"@ui5/webcomponents/dist/Input.js\";</code>\n * <br>\n * <code>import \"@ui5/webcomponents/dist/features/InputSuggestions.js\";</code> (optional - for input suggestions support)\n *\n * @constructor\n * @author SAP SE\n * @alias sap.ui.webcomponents.main.Input\n * @extends sap.ui.webcomponents.base.UI5Element\n * @tagname ui5-input\n * @appenddocs SuggestionItem\n * @public\n */\nclass Input extends UI5Element {\n\tstatic get metadata() {\n\t\treturn metadata;\n\t}\n\n\tstatic get render() {\n\t\treturn litRender;\n\t}\n\n\tstatic get template() {\n\t\treturn InputTemplate;\n\t}\n\n\tstatic get staticAreaTemplate() {\n\t\treturn InputPopoverTemplate;\n\t}\n\n\tstatic get styles() {\n\t\treturn styles;\n\t}\n\n\tstatic get staticAreaStyles() {\n\t\treturn [ResponsivePopoverCommonCss, ValueStateMessageCss];\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\t// Indicates if there is selected suggestionItem.\n\t\tthis.hasSuggestionItemSelected = false;\n\n\t\t// Represents the value before user moves selection between the suggestion items.\n\t\t// Used to register and fire \"input\" event upon [SPACE] or [ENTER].\n\t\t// Note: the property \"value\" is updated upon selection move and can`t be used.\n\t\tthis.valueBeforeItemSelection = \"\";\n\n\t\t// tracks the value between focus in and focus out to detect that change event should be fired.\n\t\tthis.previousValue = undefined;\n\n\t\t// Indicates, if the component is rendering for first time.\n\t\tthis.firstRendering = true;\n\n\t\t// all sementic events\n\t\tthis.EVENT_SUBMIT = \"submit\";\n\t\tthis.EVENT_CHANGE = \"change\";\n\t\tthis.EVENT_INPUT = \"input\";\n\t\tthis.EVENT_SUGGESTION_ITEM_SELECT = \"suggestionItemSelect\";\n\n\t\t// all user interactions\n\t\tthis.ACTION_ENTER = \"enter\";\n\t\tthis.ACTION_USER_INPUT = \"input\";\n\n\t\t// Suggestions array initialization\n\t\tthis.suggestionsTexts = [];\n\n\t\tthis.i18nBundle = getI18nBundle(\"@ui5/webcomponents\");\n\n\t\tthis._handleResizeBound = this._handleResize.bind(this);\n\t}\n\n\tonEnterDOM() {\n\t\tResizeHandler.register(this, this._handleResizeBound);\n\t}\n\n\tonExitDOM() {\n\t\tResizeHandler.deregister(this, this._handleResizeBound);\n\t}\n\n\tonBeforeRendering() {\n\t\tif (this.showSuggestions) {\n\t\t\tthis.enableSuggestions();\n\t\t\tthis.suggestionsTexts = this.Suggestions.defaultSlotProperties();\n\t\t}\n\n\t\tconst FormSupport = getFeature(\"FormSupport\");\n\t\tif (FormSupport) {\n\t\t\tFormSupport.syncNativeHiddenInput(this);\n\t\t} else if (this.name) {\n\t\t\tconsole.warn(`In order for the \"name\" property to have effect, you should also: import \"@ui5/webcomponents/dist/features/InputElementsFormSupport.js\";`); // eslint-disable-line\n\t\t}\n\t}\n\n\tonAfterRendering() {\n\t\tif (!this.firstRendering && !isPhone() && this.Suggestions) {\n\t\t\tconst shouldOpenSuggestions = this.shouldOpenSuggestions();\n\n\t\t\tthis.updateStaticAreaItemContentDensity();\n\t\t\tthis.Suggestions.toggle(shouldOpenSuggestions);\n\n\t\t\tRenderScheduler.whenFinished().then(async () => {\n\t\t\t\tthis._listWidth = await this.Suggestions._getListWidth();\n\t\t\t});\n\n\t\t\tif (!isPhone() && shouldOpenSuggestions) {\n\t\t\t\t// Set initial focus to the native input\n\t\t\t\tthis.getInputDOMRef().focus();\n\t\t\t}\n\t\t}\n\n\t\tif (!this.firstRendering && this.hasValueStateMessage) {\n\t\t\tthis.toggle(this.shouldDisplayOnlyValueStateMessage);\n\t\t}\n\n\t\tthis.firstRendering = false;\n\t}\n\n\t_onkeydown(event) {\n\t\tif (isUp(event)) {\n\t\t\treturn this._handleUp(event);\n\t\t}\n\n\t\tif (isDown(event)) {\n\t\t\treturn this._handleDown(event);\n\t\t}\n\n\t\tif (isSpace(event)) {\n\t\t\treturn this._handleSpace(event);\n\t\t}\n\n\t\tif (isEnter(event)) {\n\t\t\treturn this._handleEnter(event);\n\t\t}\n\n\t\tthis._keyDown = true;\n\t}\n\n\t_onkeyup(event) {\n\t\tthis._keyDown = false;\n\t}\n\n\t/* Event handling */\n\t_handleUp(event) {\n\t\tif (this.Suggestions && this.Suggestions.isOpened()) {\n\t\t\tthis.Suggestions.onUp(event);\n\t\t}\n\t}\n\n\t_handleDown(event) {\n\t\tif (this.Suggestions && this.Suggestions.isOpened()) {\n\t\t\tthis.Suggestions.onDown(event);\n\t\t}\n\t}\n\n\t_handleSpace(event) {\n\t\tif (this.Suggestions) {\n\t\t\tthis.Suggestions.onSpace(event);\n\t\t}\n\t}\n\n\t_handleEnter(event) {\n\t\tconst itemPressed = !!(this.Suggestions && this.Suggestions.onEnter(event));\n\t\tif (!itemPressed) {\n\t\t\tthis.fireEventByAction(this.ACTION_ENTER);\n\t\t}\n\t}\n\n\t_onfocusin(event) {\n\t\tthis.focused = true; // invalidating property\n\t\tthis.previousValue = this.value;\n\t}\n\n\t_onfocusout(event) {\n\t\t// if focusout is triggered by pressing on suggestion item skip invalidation, because re-rendering\n\t\t// will happen before \"itemPress\" event, which will make item \"active\" state not visualized\n\t\tif (this.Suggestions && event.relatedTarget && event.relatedTarget.shadowRoot && event.relatedTarget.shadowRoot.contains(this.Suggestions.responsivePopover)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.popover) {\n\t\t\tthis.popover.close(false, false, true);\n\t\t}\n\n\t\tthis.previousValue = \"\";\n\t\tthis.focused = false; // invalidating property\n\t}\n\n\t_click(event) {\n\t\tif (isPhone() && !this.readonly && this.Suggestions) {\n\t\t\tthis.updateStaticAreaItemContentDensity();\n\t\t\tthis.Suggestions.open(this);\n\t\t\tthis.isRespPopoverOpen = true;\n\t\t}\n\t}\n\n\t_handleChange(event) {\n\t\tthis.fireEvent(this.EVENT_CHANGE);\n\t}\n\n\t_handleInput(event) {\n\t\tif (event.target === this.getInputDOMRef()) {\n\t\t\t// stop the native event, as the semantic \"input\" would be fired.\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t\t/* skip calling change event when an input with a placeholder is focused on IE\n\t\t\t- value of the host and the internal input should be differnt in case of actual input\n\t\t\t- input is called when a key is pressed => keyup should not be called yet\n\t\t*/\n\t\tconst skipFiring = (this.getInputDOMRef().value === this.value) && isIE() && !this._keyDown && !!this.placeholder;\n\n\t\t!skipFiring && this.fireEventByAction(this.ACTION_USER_INPUT);\n\n\t\tthis.hasSuggestionItemSelected = false;\n\n\t\tif (this.Suggestions) {\n\t\t\tthis.Suggestions.updateSelectedItemPosition(null);\n\t\t}\n\t}\n\n\t_handleResize() {\n\t\tif (this.hasValueStateMessage) {\n\t\t\tthis._inputWidth = this.offsetWidth;\n\t\t}\n\t}\n\n\t_closeRespPopover() {\n\t\tthis.Suggestions.close();\n\t}\n\n\t_afterOpenPopover() {\n\t\t// Set initial focus to the native input\n\t\tif (isPhone()) {\n\t\t\tthis.getInputDOMRef().focus();\n\t\t}\n\t}\n\n\t_afterClosePopover() {\n\t\t// close device's keyboard and prevent further typing\n\t\tif (isPhone()) {\n\t\t\tthis.blur();\n\t\t}\n\t}\n\n\ttoggle(isToggled) {\n\t\tif (isToggled && !this.isRespPopoverOpen) {\n\t\t\tthis.openPopover();\n\t\t} else {\n\t\t\tthis.closePopover();\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the popover is open.\n\t * @returns {Boolean} true if the popover is open, false otherwise\n\t * @public\n\t */\n\tisOpen() {\n\t\treturn !!this._isPopoverOpen;\n\t}\n\n\tasync openPopover() {\n\t\tthis._isPopoverOpen = true;\n\t\tthis.popover = await this._getPopover();\n\t\tthis.popover.openBy(this);\n\t}\n\n\tclosePopover() {\n\t\tif (this.isOpen()) {\n\t\t\tthis._isPopoverOpen = false;\n\t\t\tthis.popover.close();\n\t\t}\n\t}\n\n\tasync _getPopover() {\n\t\tconst staticAreaItem = await this.getStaticAreaItemDomRef();\n\t\treturn staticAreaItem.querySelector(\"ui5-popover\");\n\t}\n\n\tenableSuggestions() {\n\t\tif (this.Suggestions) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst Suggestions = getFeature(\"InputSuggestions\");\n\t\tif (Suggestions) {\n\t\t\tthis.Suggestions = new Suggestions(this, \"suggestionItems\");\n\t\t} else {\n\t\t\tthrow new Error(`You have to import \"@ui5/webcomponents/dist/features/InputSuggestions.js\" module to use ui5-input suggestions`);\n\t\t}\n\t}\n\n\tshouldOpenSuggestions() {\n\t\treturn !!(this.suggestionItems.length\n\t\t\t&& this.focused\n\t\t\t&& this.showSuggestions\n\t\t\t&& !this.hasSuggestionItemSelected);\n\t}\n\n\tselectSuggestion(item, keyboardUsed) {\n\t\tif (item.group) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst itemText = item.text || item.textContent; // keep textContent for compatibility\n\t\tconst fireInput = keyboardUsed\n\t\t\t? this.valueBeforeItemSelection !== itemText : this.value !== itemText;\n\n\t\tthis.hasSuggestionItemSelected = true;\n\t\tthis.fireEvent(this.EVENT_SUGGESTION_ITEM_SELECT, { item });\n\n\t\tif (fireInput) {\n\t\t\tthis.value = itemText;\n\t\t\tthis.valueBeforeItemSelection = itemText;\n\t\t\tthis.fireEvent(this.EVENT_INPUT);\n\t\t\tthis.fireEvent(this.EVENT_CHANGE);\n\t\t}\n\t}\n\n\tpreviewSuggestion(item) {\n\t\tthis.valueBeforeItemSelection = this.value;\n\t\tthis.value = item.group ? \"\" : item.textContent;\n\t}\n\n\tfireEventByAction(action) {\n\t\tif (this.disabled || this.readonly) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst inputValue = this.getInputValue();\n\t\tconst isSubmit = action === this.ACTION_ENTER;\n\t\tconst isUserInput = action === this.ACTION_USER_INPUT;\n\n\t\tthis.value = inputValue;\n\n\t\tif (isUserInput) { // input\n\t\t\tthis.fireEvent(this.EVENT_INPUT);\n\t\t\t// Angular two way data binding\n\t\t\tthis.fireEvent(\"value-changed\");\n\t\t\treturn;\n\t\t}\n\n\t\tif (isSubmit) { // submit\n\t\t\tthis.fireEvent(this.EVENT_SUBMIT);\n\t\t}\n\n\t\t// In IE, pressing the ENTER does not fire change\n\t\tconst valueChanged = (this.previousValue !== undefined) && (this.previousValue !== this.value);\n\t\tif (isIE() && isSubmit && valueChanged) {\n\t\t\tthis.fireEvent(this.EVENT_CHANGE);\n\t\t}\n\t}\n\n\tgetInputValue() {\n\t\tconst inputDOM = this.getDomRef();\n\t\tif (inputDOM) {\n\t\t\treturn this.getInputDOMRef().value;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tgetInputDOMRef() {\n\t\tlet inputDomRef;\n\n\t\tif (isPhone()) {\n\t\t\tinputDomRef = this.Suggestions && this.Suggestions.responsivePopover.querySelector(\".ui5-input-inner-phone\");\n\t\t}\n\n\t\tif (!inputDomRef) {\n\t\t\tinputDomRef = this.getDomRef().querySelector(`#${this.getInputId()}`);\n\t\t}\n\n\t\treturn inputDomRef;\n\t}\n\n\tgetLabelableElementId() {\n\t\treturn this.getInputId();\n\t}\n\n\tgetInputId() {\n\t\treturn `${this._id}-inner`;\n\t}\n\n\t/* Suggestions interface  */\n\tonItemFocused() {}\n\n\tonItemSelected(item, keyboardUsed) {\n\t\tthis.selectSuggestion(item, keyboardUsed);\n\t}\n\n\tonItemPreviewed(item) {\n\t\tthis.previewSuggestion(item);\n\t}\n\n\tonOpen() {}\n\n\tonClose() {}\n\n\tvalueStateTextMappings() {\n\t\tconst i18nBundle = this.i18nBundle;\n\n\t\treturn {\n\t\t\t\"Success\": i18nBundle.getText(VALUE_STATE_SUCCESS),\n\t\t\t\"Information\": i18nBundle.getText(VALUE_STATE_INFORMATION),\n\t\t\t\"Error\": i18nBundle.getText(VALUE_STATE_ERROR),\n\t\t\t\"Warning\": i18nBundle.getText(VALUE_STATE_WARNING),\n\t\t};\n\t}\n\n\tget _readonly() {\n\t\treturn this.readonly && !this.disabled;\n\t}\n\n\tget _headerTitleText() {\n\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);\n\t}\n\n\tget inputType() {\n\t\treturn this.type.toLowerCase();\n\t}\n\n\tget suggestionsTextId() {\n\t\treturn this.showSuggestions ? `${this._id}-suggestionsText` : \"\";\n\t}\n\n\tget valueStateTextId() {\n\t\treturn this.hasValueState ? `${this._id}-valueStateDesc` : \"\";\n\t}\n\n\tget accInfo() {\n\t\tconst ariaHasPopupDefault = this.showSuggestions ? \"true\" : undefined;\n\t\tconst ariaAutoCompleteDefault = this.showSuggestions ? \"list\" : undefined;\n\t\treturn {\n\t\t\t\"wrapper\": {\n\t\t\t},\n\t\t\t\"input\": {\n\t\t\t\t\"ariaDescribedBy\": this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId}`.trim(),\n\t\t\t\t\"ariaInvalid\": this.valueState === ValueState.Error ? \"true\" : undefined,\n\t\t\t\t\"ariaHasPopup\": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,\n\t\t\t\t\"ariaAutoComplete\": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,\n\t\t\t\t\"role\": this._inputAccInfo && this._inputAccInfo.role,\n\t\t\t\t\"ariaOwns\": this._inputAccInfo && this._inputAccInfo.ariaOwns,\n\t\t\t\t\"ariaExpanded\": this._inputAccInfo && this._inputAccInfo.ariaExpanded,\n\t\t\t\t\"ariaDescription\": this._inputAccInfo && this._inputAccInfo.ariaDescription,\n\t\t\t},\n\t\t};\n\t}\n\n\tget classes() {\n\t\treturn {\n\t\t\tpopoverValueState: {\n\t\t\t\t\"ui5-valuestatemessage-root\": true,\n\t\t\t\t\"ui5-valuestatemessage--success\": this.valueState === ValueState.Success,\n\t\t\t\t\"ui5-valuestatemessage--error\": this.valueState === ValueState.Error,\n\t\t\t\t\"ui5-valuestatemessage--warning\": this.valueState === ValueState.Warning,\n\t\t\t\t\"ui5-valuestatemessage--information\": this.valueState === ValueState.Information,\n\t\t\t},\n\t\t};\n\t}\n\n\tget styles() {\n\t\treturn {\n\t\t\tpopoverHeader: {\n\t\t\t\t\"width\": `${this._inputWidth}px`,\n\t\t\t},\n\t\t\tsuggestionPopoverHeader: {\n\t\t\t\t\"display\": this._listWidth === 0 ? \"none\" : \"inline-block\",\n\t\t\t\t\"width\": `${this._listWidth}px`,\n\t\t\t\t\"padding\": \"0.5625rem 1rem\",\n\t\t\t},\n\t\t};\n\t}\n\n\tget valueStateMessageText() {\n\t\tconst valueStateMessage = this.valueStateMessage.map(x => x.cloneNode(true));\n\n\t\treturn valueStateMessage;\n\t}\n\n\tget shouldDisplayOnlyValueStateMessage() {\n\t\treturn this.hasValueStateMessage && !this.shouldOpenSuggestions() && this.focused;\n\t}\n\n\tget shouldDisplayDefaultValueStateMessage() {\n\t\treturn !this.valueStateMessage.length && this.hasValueStateMessage;\n\t}\n\n\tget hasValueState() {\n\t\treturn this.valueState !== ValueState.None;\n\t}\n\n\tget hasValueStateMessage() {\n\t\treturn this.hasValueState && this.valueState !== ValueState.Success;\n\t}\n\n\tget valueStateText() {\n\t\treturn this.valueStateTextMappings()[this.valueState];\n\t}\n\n\tget suggestionsText() {\n\t\treturn this.i18nBundle.getText(INPUT_SUGGESTIONS);\n\t}\n\n\tget _isPhone() {\n\t\treturn isPhone();\n\t}\n\n\tstatic async onDefine() {\n\t\tawait Promise.all([\n\t\t\tPopover.define(),\n\t\t\tfetchI18nBundle(\"@ui5/webcomponents\"),\n\t\t]);\n\t}\n}\n\nInput.define();\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}