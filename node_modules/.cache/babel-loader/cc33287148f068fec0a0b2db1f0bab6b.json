{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findEntryInArray = findEntryInArray;\nexports.getLinearRegression = exports.interpolateNumber = exports.hasDuplicate = exports.getAnyElementOfObject = exports.getPercentValue = exports.uniqueId = exports.isNumOrStr = exports.isNumber = exports.isPercent = exports.mathSign = void 0;\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar mathSign = function mathSign(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (value > 0) {\n    return 1;\n  }\n\n  return -1;\n};\n\nexports.mathSign = mathSign;\n\nvar isPercent = function isPercent(value) {\n  return (0, _isString2[\"default\"])(value) && value.indexOf('%') === value.length - 1;\n};\n\nexports.isPercent = isPercent;\n\nvar isNumber = function isNumber(value) {\n  return (0, _isNumber2[\"default\"])(value) && !(0, _isNaN2[\"default\"])(value);\n};\n\nexports.isNumber = isNumber;\n\nvar isNumOrStr = function isNumOrStr(value) {\n  return isNumber(value) || (0, _isString2[\"default\"])(value);\n};\n\nexports.isNumOrStr = isNumOrStr;\nvar idCounter = 0;\n\nvar uniqueId = function uniqueId(prefix) {\n  var id = ++idCounter;\n  return \"\".concat(prefix || '').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {Number|String} percent A percent\n * @param {Number} totalValue     Total value\n * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid\n * @param {Boolean} validate      If set to be true, the result will be validated\n * @return {Number} value\n */\n\n\nexports.uniqueId = uniqueId;\n\nvar getPercentValue = function getPercentValue(percent, totalValue) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isNumber(percent) && !(0, _isString2[\"default\"])(percent)) {\n    return defaultValue;\n  }\n\n  var value;\n\n  if (isPercent(percent)) {\n    var index = percent.indexOf('%');\n    value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n  } else {\n    value = +percent;\n  }\n\n  if ((0, _isNaN2[\"default\"])(value)) {\n    value = defaultValue;\n  }\n\n  if (validate && value > totalValue) {\n    value = totalValue;\n  }\n\n  return value;\n};\n\nexports.getPercentValue = getPercentValue;\n\nvar getAnyElementOfObject = function getAnyElementOfObject(obj) {\n  if (!obj) {\n    return null;\n  }\n\n  var keys = Object.keys(obj);\n\n  if (keys && keys.length) {\n    return obj[keys[0]];\n  }\n\n  return null;\n};\n\nexports.getAnyElementOfObject = getAnyElementOfObject;\n\nvar hasDuplicate = function hasDuplicate(ary) {\n  if (!(0, _isArray2[\"default\"])(ary)) {\n    return false;\n  }\n\n  var len = ary.length;\n  var cache = {};\n\n  for (var i = 0; i < len; i++) {\n    if (!cache[ary[i]]) {\n      cache[ary[i]] = true;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexports.hasDuplicate = hasDuplicate;\n\nvar interpolateNumber = function interpolateNumber(numberA, numberB) {\n  if (isNumber(numberA) && isNumber(numberB)) {\n    return function (t) {\n      return numberA + t * (numberB - numberA);\n    };\n  }\n\n  return function () {\n    return numberB;\n  };\n};\n\nexports.interpolateNumber = interpolateNumber;\n\nfunction findEntryInArray(ary, specifiedKey, specifiedValue) {\n  if (!ary || !ary.length) {\n    return null;\n  }\n\n  return ary.find(function (entry) {\n    return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : (0, _get2[\"default\"])(entry, specifiedKey)) === specifiedValue;\n  });\n}\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */\n\n\nvar getLinearRegression = function getLinearRegression(data) {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  var len = data.length;\n  var xsum = 0;\n  var ysum = 0;\n  var xysum = 0;\n  var xxsum = 0;\n  var xmin = Infinity;\n  var xmax = -Infinity;\n\n  for (var i = 0; i < len; i++) {\n    xsum += data[i].cx;\n    ysum += data[i].cy;\n    xysum += data[i].cx * data[i].cy;\n    xxsum += data[i].cx * data[i].cx;\n    xmin = Math.min(xmin, data[i].cx);\n    xmax = Math.max(xmax, data[i].cx);\n  }\n\n  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n  return {\n    xmin: xmin,\n    xmax: xmax,\n    a: a,\n    b: (ysum - a * xsum) / len\n  };\n};\n\nexports.getLinearRegression = getLinearRegression;","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/recharts/lib/util/DataUtils.js"],"names":["Object","defineProperty","exports","value","findEntryInArray","getLinearRegression","interpolateNumber","hasDuplicate","getAnyElementOfObject","getPercentValue","uniqueId","isNumOrStr","isNumber","isPercent","mathSign","_get2","_interopRequireDefault","require","_isArray2","_isNaN2","_isNumber2","_isString2","obj","__esModule","indexOf","length","idCounter","prefix","id","concat","percent","totalValue","defaultValue","arguments","undefined","validate","index","parseFloat","slice","keys","ary","len","cache","i","numberA","numberB","t","specifiedKey","specifiedValue","find","entry","data","xsum","ysum","xysum","xxsum","xmin","Infinity","xmax","cx","cy","Math","min","max","a","b"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findEntryInArray = findEntryInArray;\nexports.getLinearRegression = exports.interpolateNumber = exports.hasDuplicate = exports.getAnyElementOfObject = exports.getPercentValue = exports.uniqueId = exports.isNumOrStr = exports.isNumber = exports.isPercent = exports.mathSign = void 0;\n\nvar _get2 = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _isArray2 = _interopRequireDefault(require(\"lodash/isArray\"));\n\nvar _isNaN2 = _interopRequireDefault(require(\"lodash/isNaN\"));\n\nvar _isNumber2 = _interopRequireDefault(require(\"lodash/isNumber\"));\n\nvar _isString2 = _interopRequireDefault(require(\"lodash/isString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar mathSign = function mathSign(value) {\n  if (value === 0) {\n    return 0;\n  }\n\n  if (value > 0) {\n    return 1;\n  }\n\n  return -1;\n};\n\nexports.mathSign = mathSign;\n\nvar isPercent = function isPercent(value) {\n  return (0, _isString2[\"default\"])(value) && value.indexOf('%') === value.length - 1;\n};\n\nexports.isPercent = isPercent;\n\nvar isNumber = function isNumber(value) {\n  return (0, _isNumber2[\"default\"])(value) && !(0, _isNaN2[\"default\"])(value);\n};\n\nexports.isNumber = isNumber;\n\nvar isNumOrStr = function isNumOrStr(value) {\n  return isNumber(value) || (0, _isString2[\"default\"])(value);\n};\n\nexports.isNumOrStr = isNumOrStr;\nvar idCounter = 0;\n\nvar uniqueId = function uniqueId(prefix) {\n  var id = ++idCounter;\n  return \"\".concat(prefix || '').concat(id);\n};\n/**\n * Get percent value of a total value\n * @param {Number|String} percent A percent\n * @param {Number} totalValue     Total value\n * @param {NUmber} defaultValue   The value returned when percent is undefined or invalid\n * @param {Boolean} validate      If set to be true, the result will be validated\n * @return {Number} value\n */\n\n\nexports.uniqueId = uniqueId;\n\nvar getPercentValue = function getPercentValue(percent, totalValue) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var validate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isNumber(percent) && !(0, _isString2[\"default\"])(percent)) {\n    return defaultValue;\n  }\n\n  var value;\n\n  if (isPercent(percent)) {\n    var index = percent.indexOf('%');\n    value = totalValue * parseFloat(percent.slice(0, index)) / 100;\n  } else {\n    value = +percent;\n  }\n\n  if ((0, _isNaN2[\"default\"])(value)) {\n    value = defaultValue;\n  }\n\n  if (validate && value > totalValue) {\n    value = totalValue;\n  }\n\n  return value;\n};\n\nexports.getPercentValue = getPercentValue;\n\nvar getAnyElementOfObject = function getAnyElementOfObject(obj) {\n  if (!obj) {\n    return null;\n  }\n\n  var keys = Object.keys(obj);\n\n  if (keys && keys.length) {\n    return obj[keys[0]];\n  }\n\n  return null;\n};\n\nexports.getAnyElementOfObject = getAnyElementOfObject;\n\nvar hasDuplicate = function hasDuplicate(ary) {\n  if (!(0, _isArray2[\"default\"])(ary)) {\n    return false;\n  }\n\n  var len = ary.length;\n  var cache = {};\n\n  for (var i = 0; i < len; i++) {\n    if (!cache[ary[i]]) {\n      cache[ary[i]] = true;\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexports.hasDuplicate = hasDuplicate;\n\nvar interpolateNumber = function interpolateNumber(numberA, numberB) {\n  if (isNumber(numberA) && isNumber(numberB)) {\n    return function (t) {\n      return numberA + t * (numberB - numberA);\n    };\n  }\n\n  return function () {\n    return numberB;\n  };\n};\n\nexports.interpolateNumber = interpolateNumber;\n\nfunction findEntryInArray(ary, specifiedKey, specifiedValue) {\n  if (!ary || !ary.length) {\n    return null;\n  }\n\n  return ary.find(function (entry) {\n    return entry && (typeof specifiedKey === 'function' ? specifiedKey(entry) : (0, _get2[\"default\"])(entry, specifiedKey)) === specifiedValue;\n  });\n}\n/**\n * The least square linear regression\n * @param {Array} data The array of points\n * @returns {Object} The domain of x, and the parameter of linear function\n */\n\n\nvar getLinearRegression = function getLinearRegression(data) {\n  if (!data || !data.length) {\n    return null;\n  }\n\n  var len = data.length;\n  var xsum = 0;\n  var ysum = 0;\n  var xysum = 0;\n  var xxsum = 0;\n  var xmin = Infinity;\n  var xmax = -Infinity;\n\n  for (var i = 0; i < len; i++) {\n    xsum += data[i].cx;\n    ysum += data[i].cy;\n    xysum += data[i].cx * data[i].cy;\n    xxsum += data[i].cx * data[i].cx;\n    xmin = Math.min(xmin, data[i].cx);\n    xmax = Math.max(xmax, data[i].cx);\n  }\n\n  var a = len * xxsum !== xsum * xsum ? (len * xysum - xsum * ysum) / (len * xxsum - xsum * xsum) : 0;\n  return {\n    xmin: xmin,\n    xmax: xmax,\n    a: a,\n    b: (ysum - a * xsum) / len\n  };\n};\n\nexports.getLinearRegression = getLinearRegression;"]},"metadata":{},"sourceType":"script"}