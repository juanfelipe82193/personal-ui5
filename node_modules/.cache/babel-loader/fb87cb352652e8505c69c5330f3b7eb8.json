{"ast":null,"code":"var convert = require('color-convert');\n\nmodule.exports = function (cstr) {\n  var m, conv, parts, alpha;\n\n  if (m = /^((?:rgb|hs[lv]|cmyk|xyz|lab)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n    var name = m[1];\n    var base = name.replace(/a$/, '');\n    var size = base === 'cmyk' ? 4 : 3;\n    conv = convert[base];\n    parts = m[2].replace(/^\\s+|\\s+$/g, '').split(/\\s*,\\s*/).map(function (x, i) {\n      if (/%$/.test(x) && i === size) {\n        return parseFloat(x) / 100;\n      } else if (/%$/.test(x)) {\n        return parseFloat(x);\n      }\n\n      return parseFloat(x);\n    });\n    if (name === base) parts.push(1);\n    alpha = parts[size] === undefined ? 1 : parts[size];\n    parts = parts.slice(0, size);\n\n    conv[base] = function () {\n      return parts;\n    };\n  } else if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\n    var base = cstr.replace(/^#/, '');\n    var size = base.length;\n    conv = convert.rgb;\n    parts = base.split(size === 3 ? /(.)/ : /(..)/);\n    parts = parts.filter(Boolean).map(function (x) {\n      if (size === 3) {\n        return parseInt(x + x, 16);\n      } else {\n        return parseInt(x, 16);\n      }\n    });\n    alpha = 1;\n\n    conv.rgb = function () {\n      return parts;\n    };\n\n    if (!parts[0]) parts[0] = 0;\n    if (!parts[1]) parts[1] = 0;\n    if (!parts[2]) parts[2] = 0;\n  } else {\n    conv = convert.keyword;\n\n    conv.keyword = function () {\n      return cstr;\n    };\n\n    parts = cstr;\n    alpha = 1;\n  }\n\n  var res = {\n    rgb: undefined,\n    hsl: undefined,\n    hsv: undefined,\n    cmyk: undefined,\n    keyword: undefined,\n    hex: undefined\n  };\n\n  try {\n    res.rgb = conv.rgb(parts);\n  } catch (e) {}\n\n  try {\n    res.hsl = conv.hsl(parts);\n  } catch (e) {}\n\n  try {\n    res.hsv = conv.hsv(parts);\n  } catch (e) {}\n\n  try {\n    res.cmyk = conv.cmyk(parts);\n  } catch (e) {}\n\n  try {\n    res.keyword = conv.keyword(parts);\n  } catch (e) {}\n\n  if (res.rgb) res.hex = '#' + res.rgb.map(function (x) {\n    var s = x.toString(16);\n    if (s.length === 1) return '0' + s;\n    return s;\n  }).join('');\n  if (res.rgb) res.rgba = res.rgb.concat(alpha);\n  if (res.hsl) res.hsla = res.hsl.concat(alpha);\n  if (res.hsv) res.hsva = res.hsv.concat(alpha);\n  if (res.cmyk) res.cmyka = res.cmyk.concat(alpha);\n  return res;\n};","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/parse-color/index.js"],"names":["convert","require","module","exports","cstr","m","conv","parts","alpha","exec","name","base","replace","size","split","map","x","i","test","parseFloat","push","undefined","slice","length","rgb","filter","Boolean","parseInt","keyword","res","hsl","hsv","cmyk","hex","e","s","toString","join","rgba","concat","hsla","hsva","cmyka"],"mappings":"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","sourcesContent":["var convert = require('color-convert');\n\nmodule.exports = function (cstr) {\n    var m, conv, parts, alpha;\n    if (m = /^((?:rgb|hs[lv]|cmyk|xyz|lab)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n        var name = m[1];\n        var base = name.replace(/a$/, '');\n        var size = base === 'cmyk' ? 4 : 3;\n        conv = convert[base];\n        \n        parts = m[2].replace(/^\\s+|\\s+$/g, '')\n            .split(/\\s*,\\s*/)\n            .map(function (x, i) {\n                if (/%$/.test(x) && i === size) {\n                    return parseFloat(x) / 100;\n                }\n                else if (/%$/.test(x)) {\n                    return parseFloat(x);\n                }\n                return parseFloat(x);\n            })\n        ;\n        if (name === base) parts.push(1);\n        alpha = parts[size] === undefined ? 1 : parts[size];\n        parts = parts.slice(0, size);\n        \n        conv[base] = function () { return parts };\n    }\n    else if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\n        var base = cstr.replace(/^#/,'');\n        var size = base.length;\n        conv = convert.rgb;\n        parts = base.split(size === 3 ? /(.)/ : /(..)/);\n        parts = parts.filter(Boolean)\n            .map(function (x) {\n                if (size === 3) {\n                    return parseInt(x + x, 16);\n                }\n                else {\n                    return parseInt(x, 16)\n                }\n            })\n        ;\n        alpha = 1;\n        conv.rgb = function () { return parts };\n        if (!parts[0]) parts[0] = 0;\n        if (!parts[1]) parts[1] = 0;\n        if (!parts[2]) parts[2] = 0;\n    }\n    else {\n        conv = convert.keyword;\n        conv.keyword = function () { return cstr };\n        parts = cstr;\n        alpha = 1;\n    }\n    \n    var res = {\n        rgb: undefined,\n        hsl: undefined,\n        hsv: undefined,\n        cmyk: undefined,\n        keyword: undefined,\n        hex: undefined\n    };\n    try { res.rgb = conv.rgb(parts) } catch (e) {}\n    try { res.hsl = conv.hsl(parts) } catch (e) {}\n    try { res.hsv = conv.hsv(parts) } catch (e) {}\n    try { res.cmyk = conv.cmyk(parts) } catch (e) {}\n    try { res.keyword = conv.keyword(parts) } catch (e) {}\n    \n    if (res.rgb) res.hex = '#' + res.rgb.map(function (x) {\n        var s = x.toString(16);\n        if (s.length === 1) return '0' + s;\n        return s;\n    }).join('');\n    \n    if (res.rgb) res.rgba = res.rgb.concat(alpha);\n    if (res.hsl) res.hsla = res.hsl.concat(alpha);\n    if (res.hsv) res.hsva = res.hsv.concat(alpha);\n    if (res.cmyk) res.cmyka = res.cmyk.concat(alpha);\n    \n    return res;\n};\n"]},"metadata":{},"sourceType":"script"}