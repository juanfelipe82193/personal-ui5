{"ast":null,"code":"/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\n\nvar draggingFiles = function draggingFiles(event) {\n  return Array.from(event.dataTransfer.types).includes(\"Files\");\n};\n\nvar eventProvider = new EventProvider();\nvar EVENT = \"UploadCollectionBodyDndEvent\";\nvar lastDragEnter = null;\nvar globalHandlersAttached = false;\n\nvar ondragenter = function ondragenter(event) {\n  if (!draggingFiles(event)) {\n    return;\n  }\n\n  lastDragEnter = event.target;\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.Drag\n  });\n};\n\nvar ondragleave = function ondragleave(event) {\n  if (lastDragEnter === event.target) {\n    eventProvider.fireEvent(EVENT, {\n      mode: UploadCollectionDnDOverlayMode.None\n    });\n  }\n};\n\nvar ondrop = function ondrop(event) {\n  eventProvider.fireEvent(EVENT, {\n    mode: UploadCollectionDnDOverlayMode.None\n  });\n};\n\nvar attachGlobalHandlers = function attachGlobalHandlers() {\n  document.body.addEventListener(\"dragenter\", ondragenter);\n  document.body.addEventListener(\"dragleave\", ondragleave);\n  document.body.addEventListener(\"drop\", ondrop);\n};\n\nvar detachGlobalHandlers = function detachGlobalHandlers() {\n  document.body.removeEventListener(\"dragenter\", ondragenter);\n  document.body.removeEventListener(\"dragleave\", ondragleave);\n  document.body.removeEventListener(\"drop\", ondrop);\n  globalHandlersAttached = false;\n};\n\nvar attachBodyDnDHandler = function attachBodyDnDHandler(handler) {\n  eventProvider.attachEvent(EVENT, handler);\n\n  if (!globalHandlersAttached) {\n    attachGlobalHandlers();\n    globalHandlersAttached = true;\n  }\n};\n\nvar detachBodyDnDHandler = function detachBodyDnDHandler(handler) {\n  eventProvider.detachEvent(EVENT, handler);\n\n  if (!eventProvider.hasListeners(EVENT)) {\n    detachGlobalHandlers();\n  }\n};\n\nexport { attachBodyDnDHandler, detachBodyDnDHandler, draggingFiles };","map":{"version":3,"sources":["/Users/juanzorrilla/Documents/SAPUI5/personal-ui5/node_modules/@ui5/webcomponents-fiori/dist/upload-utils/UploadCollectionBodyDnD.js"],"names":["EventProvider","UploadCollectionDnDOverlayMode","draggingFiles","event","Array","from","dataTransfer","types","includes","eventProvider","EVENT","lastDragEnter","globalHandlersAttached","ondragenter","target","fireEvent","mode","Drag","ondragleave","None","ondrop","attachGlobalHandlers","document","body","addEventListener","detachGlobalHandlers","removeEventListener","attachBodyDnDHandler","handler","attachEvent","detachBodyDnDHandler","detachEvent","hasListeners"],"mappings":"AACA;;;;;AAMA,OAAOA,aAAP,MAA0B,+CAA1B;AACA,OAAOC,8BAAP,MAA2C,qCAA3C;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,SAAOC,KAAK,CAACC,IAAN,CAAWF,KAAK,CAACG,YAAN,CAAmBC,KAA9B,EAAqCC,QAArC,CAA8C,OAA9C,CAAP;AACA,CAFD;;AAIA,IAAMC,aAAa,GAAG,IAAIT,aAAJ,EAAtB;AACA,IAAMU,KAAK,GAAG,8BAAd;AACA,IAAIC,aAAa,GAAG,IAApB;AACA,IAAIC,sBAAsB,GAAG,KAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAV,KAAK,EAAI;AAC5B,MAAI,CAACD,aAAa,CAACC,KAAD,CAAlB,EAA2B;AAC1B;AACA;;AAEDQ,EAAAA,aAAa,GAAGR,KAAK,CAACW,MAAtB;AACAL,EAAAA,aAAa,CAACM,SAAd,CAAwBL,KAAxB,EAA+B;AAAEM,IAAAA,IAAI,EAAEf,8BAA8B,CAACgB;AAAvC,GAA/B;AACA,CAPD;;AASA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAf,KAAK,EAAI;AAC5B,MAAIQ,aAAa,KAAKR,KAAK,CAACW,MAA5B,EAAoC;AACnCL,IAAAA,aAAa,CAACM,SAAd,CAAwBL,KAAxB,EAA+B;AAAEM,MAAAA,IAAI,EAAEf,8BAA8B,CAACkB;AAAvC,KAA/B;AACA;AACD,CAJD;;AAMA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAjB,KAAK,EAAI;AACvBM,EAAAA,aAAa,CAACM,SAAd,CAAwBL,KAAxB,EAA+B;AAAEM,IAAAA,IAAI,EAAEf,8BAA8B,CAACkB;AAAvC,GAA/B;AACA,CAFD;;AAIA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClCC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,WAA/B,EAA4CX,WAA5C;AACAS,EAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,WAA/B,EAA4CN,WAA5C;AACAI,EAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,MAA/B,EAAuCJ,MAAvC;AACA,CAJD;;AAMA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAClCH,EAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,WAAlC,EAA+Cb,WAA/C;AACAS,EAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,WAAlC,EAA+CR,WAA/C;AACAI,EAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,MAAlC,EAA0CN,MAA1C;AACAR,EAAAA,sBAAsB,GAAG,KAAzB;AACA,CALD;;AAOA,IAAMe,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AACvCnB,EAAAA,aAAa,CAACoB,WAAd,CAA0BnB,KAA1B,EAAiCkB,OAAjC;;AAEA,MAAI,CAAChB,sBAAL,EAA6B;AAC5BS,IAAAA,oBAAoB;AACpBT,IAAAA,sBAAsB,GAAG,IAAzB;AACA;AACD,CAPD;;AASA,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAF,OAAO,EAAI;AACvCnB,EAAAA,aAAa,CAACsB,WAAd,CAA0BrB,KAA1B,EAAiCkB,OAAjC;;AAEA,MAAI,CAACnB,aAAa,CAACuB,YAAd,CAA2BtB,KAA3B,CAAL,EAAwC;AACvCe,IAAAA,oBAAoB;AACpB;AACD,CAND;;AAQA,SACCE,oBADD,EAECG,oBAFD,EAGC5B,aAHD","sourcesContent":["\n/**\n * Handles drag and drop event listeners on document.body.\n * Ensures that there is only 1 listener per type attached (drag, drop, leave). Event listeners will only be attached when\n * there is at least 1 UploadCollection subscribed.\n */\n\nimport EventProvider from \"@ui5/webcomponents-base/dist/EventProvider.js\";\nimport UploadCollectionDnDOverlayMode from \"../types/UploadCollectionDnDMode.js\";\n\nconst draggingFiles = event => {\n\treturn Array.from(event.dataTransfer.types).includes(\"Files\");\n};\n\nconst eventProvider = new EventProvider();\nconst EVENT = \"UploadCollectionBodyDndEvent\";\nlet lastDragEnter = null;\nlet globalHandlersAttached = false;\n\nconst ondragenter = event => {\n\tif (!draggingFiles(event)) {\n\t\treturn;\n\t}\n\n\tlastDragEnter = event.target;\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.Drag });\n};\n\nconst ondragleave = event => {\n\tif (lastDragEnter === event.target) {\n\t\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n\t}\n};\n\nconst ondrop = event => {\n\teventProvider.fireEvent(EVENT, { mode: UploadCollectionDnDOverlayMode.None });\n};\n\nconst attachGlobalHandlers = () => {\n\tdocument.body.addEventListener(\"dragenter\", ondragenter);\n\tdocument.body.addEventListener(\"dragleave\", ondragleave);\n\tdocument.body.addEventListener(\"drop\", ondrop);\n};\n\nconst detachGlobalHandlers = () => {\n\tdocument.body.removeEventListener(\"dragenter\", ondragenter);\n\tdocument.body.removeEventListener(\"dragleave\", ondragleave);\n\tdocument.body.removeEventListener(\"drop\", ondrop);\n\tglobalHandlersAttached = false;\n};\n\nconst attachBodyDnDHandler = handler => {\n\teventProvider.attachEvent(EVENT, handler);\n\n\tif (!globalHandlersAttached) {\n\t\tattachGlobalHandlers();\n\t\tglobalHandlersAttached = true;\n\t}\n};\n\nconst detachBodyDnDHandler = handler => {\n\teventProvider.detachEvent(EVENT, handler);\n\n\tif (!eventProvider.hasListeners(EVENT)) {\n\t\tdetachGlobalHandlers();\n\t}\n};\n\nexport {\n\tattachBodyDnDHandler,\n\tdetachBodyDnDHandler,\n\tdraggingFiles,\n};\n"]},"metadata":{},"sourceType":"module"}