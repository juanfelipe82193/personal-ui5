{"version":3,"file":"react-virtual.production.min.js","sources":["../src/useIsomorphicLayoutEffect.js","../node_modules/@reach/observe-rect/dist/observe-rect.esm.js","../src/useRect.js","../src/index.js","../src/useScroll.js"],"sourcesContent":["import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nimport observeRect from '@reach/observe-rect'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(nodeRef) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, setRect] = React.useState(null)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      setRect(element.getBoundingClientRect())\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    let observer\n\n    if (element) {\n      observer = observeRect(element, setRect)\n    }\n\n    observer && observer.observe()\n\n    return () => {\n      observer && observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n","import React from 'react'\n\nimport useScroll from './useScroll'\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport function useVirtual({\n  size = 0,\n  estimateSize,\n  overscan = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      parentRef.current[scrollKey] = offset\n    },\n    [parentRef, scrollKey]\n  )\n\n  scrollToFn = scrollToFn || defaultScrollToFn\n\n  const { [sizeKey]: outerSize } = useRect(parentRef) || {\n    [sizeKey]: 0,\n  }\n\n  const [scrollOffset, _setScrollOffset] = React.useState(0)\n\n  useScroll(parentRef, ({ [scrollKey]: newScrollOffset }) => {\n    _setScrollOffset(newScrollOffset)\n  })\n\n  const scrollOffsetPlusOuterSize = scrollOffset + outerSize\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const mountedRef = React.useRef()\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      if (estimateSize || size) setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize, size])\n\n  const { measurements, reversedMeasurements } = React.useMemo(() => {\n    const measurements = []\n    const reversedMeasurements = []\n\n    for (let i = 0, j = size - 1; i < size; i++, j--) {\n      const start = measurements[i - 1]?.end || 0\n      const size = measuredCache[i] || estimateSize(i)\n      const end = start + size\n      const bounds = { index: i, start, size, end }\n      measurements[i] = {\n        ...bounds,\n      }\n      reversedMeasurements[j] = {\n        ...bounds,\n      }\n    }\n    return { measurements, reversedMeasurements }\n  }, [estimateSize, measuredCache, size])\n\n  const totalSize = measurements[size - 1]?.end || 0\n\n  let start = React.useMemo(\n    () => measurements.find(rowStat => rowStat.end >= scrollOffset),\n    [measurements, scrollOffset]\n  )\n  let end = React.useMemo(\n    () =>\n      reversedMeasurements.find(\n        rowStat => rowStat.start <= scrollOffsetPlusOuterSize\n      ),\n    [measurements, scrollOffsetPlusOuterSize]\n  )\n\n  let startIndex = start ? start.index : 0\n  let endIndex = end ? end.index : 0\n\n  // Always add at least one overscan item, so focus will work\n  startIndex = Math.max(startIndex - 1 - overscan, 0)\n  endIndex = Math.min(endIndex + 1 + overscan, size - 1)\n\n  const virtualItems = React.useMemo(() => {\n    const virtualItems = []\n\n    for (let i = startIndex; i <= endIndex; i++) {\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (!el) return\n\n          const { [sizeKey]: measuredSize } = el.getBoundingClientRect()\n\n          if (measuredSize !== item.size) {\n            setMeasuredCache(old => ({\n              ...old,\n              [i]: measuredSize,\n            }))\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [startIndex, endIndex, measurements, sizeKey])\n\n  const latestRef = React.useRef()\n  latestRef.current = {\n    measurements,\n    outerSize,\n    scrollOffset,\n    scrollOffsetPlusOuterSize,\n    totalSize,\n  }\n\n  const scrollToOffset = React.useCallback(\n    (offset, { align = 'start' } = {}) => {\n      const {\n        outerSize,\n        scrollOffset,\n        scrollOffsetPlusOuterSize,\n        totalSize,\n      } = latestRef.current\n\n      offset = Math.max(0, Math.min(offset, totalSize - outerSize))\n\n      if (align === 'auto') {\n        if (offset <= scrollOffset) {\n          align = 'start'\n        } else if (offset >= scrollOffsetPlusOuterSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(offset)\n      } else if (align === 'end') {\n        scrollToFn(offset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(offset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (index, { align = 'auto' } = {}) => {\n      const {\n        measurements,\n        scrollOffset,\n        scrollOffsetPlusOuterSize,\n      } = latestRef.current\n\n      const measurement = measurements[index]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffsetPlusOuterSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      let offset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n      scrollToOffset(offset, { align })\n    },\n    [scrollToOffset]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n  }\n}\n","import React from 'react'\n\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useScroll(nodeRef, onChange) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const onChangeRef = React.useRef()\n  onChangeRef.current = onChange\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element) {\n      onChangeRef.current({\n        scrollLeft: element.scrollLeft,\n        scrollTop: element.scrollTop,\n      })\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    const handler = e => {\n      onChangeRef.current({\n        scrollLeft: e.target.scrollLeft,\n        scrollTop: e.target.scrollTop,\n      })\n    }\n\n    if (element) {\n      element.addEventListener('scroll', handler, {\n        capture: false,\n        passive: true,\n      })\n\n      return () => {\n        element.removeEventListener('scroll', handler)\n      }\n    }\n  }, [element])\n}\n"],"names":["window","React","useLayoutEffect","useEffect","rafId","props","observedNodes","Map","run","changedStates","state","node","a","b","newRect","getBoundingClientRect","rect","some","prop","cb","useRect","nodeRef","useState","current","element","setElement","setRect","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","estimateSize","overscan","parentRef","horizontal","scrollToFn","sizeKey","scrollKey","defaultScrollToFn","useCallback","offset","outerSize","scrollOffset","_setScrollOffset","onChange","onChangeRef","scrollLeft","scrollTop","handler","e","target","addEventListener","capture","passive","removeEventListener","useScroll","newScrollOffset","scrollOffsetPlusOuterSize","measuredCache","setMeasuredCache","mountedRef","useMemo","measurements","reversedMeasurements","i","j","start","end","bounds","totalSize","find","rowStat","startIndex","endIndex","Math","max","min","virtualItems","item","measureRef","el","measuredSize","old","push","latestRef","scrollToOffset","align","scrollToIndex","measurement"],"mappings":"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"}